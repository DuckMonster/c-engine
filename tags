!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	.\src\Core\Input\Key.h	/^	A,$/;"	m	class:Key	access:private
ALPHA	.\src\Core\Import\Dat.cpp	61;"	d	file:
ALPHA	.\src\Core\OS\Path.cpp	5;"	d	file:
ALPHA_DIGIT	.\src\Core\Import\Dat.cpp	65;"	d	file:
APIENTRY	.\include\GL\glext.h	45;"	d
APIENTRYP	.\include\GL\glext.h	48;"	d
Ack	.\src\Core\Net\Packet.h	/^	Ack,$/;"	m	class:Packet_Type	access:private
Action_State	.\src\Core\Input\Input.h	/^struct Action_State$/;"	s
Action_State::frame_num	.\src\Core\Input\Input.h	/^	u32 frame_num = 0;$/;"	m	struct:Action_State	access:public
Action_State::pressed	.\src\Core\Input\Input.h	/^	bool pressed = false;$/;"	m	struct:Action_State	access:public
Active	.\src\Core\Net\Connection.h	/^	Active,$/;"	m	class:Connection_State	access:private
Acute	.\src\Core\Input\Key.h	/^	Acute,$/;"	m	class:Key	access:private
Arena_Buffer	.\src\Core\Memory\Arena.h	/^struct Arena_Buffer$/;"	s
Arena_Buffer::cursor	.\src\Core\Memory\Arena.h	/^	u16 cursor = 0;$/;"	m	struct:Arena_Buffer	access:public
Arena_Buffer::data	.\src\Core\Memory\Arena.h	/^	u8* data = nullptr;$/;"	m	struct:Arena_Buffer	access:public
Arena_Buffer::previous	.\src\Core\Memory\Arena.h	/^	Arena_Buffer* previous = nullptr;$/;"	m	struct:Arena_Buffer	access:public
Arena_Buffer::size	.\src\Core\Memory\Arena.h	/^	u32 size = 0;$/;"	m	struct:Arena_Buffer	access:public
Args	.\src\Core\Args\Args.cpp	/^struct Args$/;"	s	file:
Args::num_args	.\src\Core\Args\Args.cpp	/^	u32 num_args;$/;"	m	struct:Args	file:	access:public
Args::values	.\src\Core\Args\Args.cpp	/^	const char** values;$/;"	m	struct:Args	file:	access:public
B	.\src\Core\Input\Key.h	/^	B,$/;"	m	class:Key	access:private
Backspace	.\src\Core\Input\Key.h	/^	Backspace,$/;"	m	class:Key	access:private
Bar	.\src\Core\Input\Key.h	/^	Bar,$/;"	m	class:Key	access:private
Billboard	.\src\Engine\Render\Billboard.h	/^struct Billboard$/;"	s
Billboard::fill_color	.\src\Engine\Render\Billboard.h	/^	Vec4 fill_color = Vec4(0.f);$/;"	m	struct:Billboard	access:public
Billboard::position	.\src\Engine\Render\Billboard.h	/^	Vec3 position;$/;"	m	struct:Billboard	access:public
Billboard::scale	.\src\Engine\Render\Billboard.h	/^	float scale = 1.f;$/;"	m	struct:Billboard	access:public
Billboard::sheet	.\src\Engine\Render\Billboard.h	/^	const Sprite_Sheet* sheet = nullptr;$/;"	m	struct:Billboard	access:public
Billboard::tile_x	.\src\Engine\Render\Billboard.h	/^	u32 tile_x = 0;$/;"	m	struct:Billboard	access:public
Billboard::tile_y	.\src\Engine\Render\Billboard.h	/^	u32 tile_y = 0;$/;"	m	struct:Billboard	access:public
Bool	.\src\Core\Import\Fbx_Data.h	/^	Bool = 'C',$/;"	m	class:Fbx_Property_Type	access:private
Bool_Array	.\src\Core\Import\Fbx_Data.h	/^	Bool_Array = 'b',$/;"	m	class:Fbx_Property_Type	access:private
C	.\src\Core\Input\Key.h	/^	C,$/;"	m	class:Key	access:private
CLIENT_MAX_USERS	.\src\Runtime\Online\Client.h	4;"	d
COMMENT	.\src\Core\Import\Dat.cpp	63;"	d	file:
CONCAT	.\src\Core\Defer.h	24;"	d
CONCAT_INTERNAL	.\src\Core\Defer.h	23;"	d
CONN_PING_INTERVAL	.\src\Core\Net\Connection.h	35;"	d
CONN_RESEND_INTERVAL	.\src\Core\Net\Connection.h	36;"	d
CONN_RESEND_MAX	.\src\Core\Net\Connection.h	37;"	d
Camera	.\src\Runtime\Game\Camera.h	/^struct Camera$/;"	s
Camera::distance	.\src\Runtime\Game\Camera.h	/^	float distance = 5.f;$/;"	m	struct:Camera	access:public
Camera::pitch	.\src\Runtime\Game\Camera.h	/^	float pitch = 45.f;$/;"	m	struct:Camera	access:public
Camera::position	.\src\Runtime\Game\Camera.h	/^	Vec3 position;$/;"	m	struct:Camera	access:public
Camera::size	.\src\Runtime\Game\Camera.h	/^	float size = 6.f;$/;"	m	struct:Camera	access:public
Camera::target_position	.\src\Runtime\Game\Camera.h	/^	Vec3 target_position;$/;"	m	struct:Camera	access:public
Camera::yaw	.\src\Runtime\Game\Camera.h	/^	float yaw = 0.f;$/;"	m	struct:Camera	access:public
CapsLock	.\src\Core\Input\Key.h	/^	CapsLock,$/;"	m	class:Key	access:private
Channel	.\src\Runtime\Online\Channel.h	/^struct Channel$/;"	s
Channel::events	.\src\Runtime\Online\Channel.h	/^	Channel_Event events[MAX_CHANNEL_EVENTS];$/;"	m	struct:Channel	access:public
Channel::id	.\src\Runtime\Online\Channel.h	/^	Channel_Id id;$/;"	m	struct:Channel	access:public
Channel::state	.\src\Runtime\Online\Channel.h	/^	Channel_State state;$/;"	m	struct:Channel	access:public
Channel::user_ptr	.\src\Runtime\Online\Channel.h	/^	void* user_ptr = nullptr;$/;"	m	struct:Channel	access:public
Channel_Close	.\src\Runtime\Online\Online.h	/^	Channel_Close,$/;"	m	class:Rpc	access:private
Channel_Event	.\src\Runtime\Online\Channel.h	/^struct Channel_Event$/;"	s
Channel_Event	.\src\Runtime\Online\Online.h	/^	Channel_Event,$/;"	m	class:Rpc	access:private
Channel_Event::id	.\src\Runtime\Online\Channel.h	/^	u8 id = 0;$/;"	m	struct:Channel_Event	access:public
Channel_Event::proc	.\src\Runtime\Online\Channel.h	/^	Channel_Event_Proc proc = nullptr;$/;"	m	struct:Channel_Event	access:public
Channel_Event::reliable	.\src\Runtime\Online\Channel.h	/^	bool reliable = true;$/;"	m	struct:Channel_Event	access:public
Channel_Event::type	.\src\Runtime\Online\Channel.h	/^	Channel_Event_Type type;$/;"	m	struct:Channel_Event	access:public
Channel_Event_Proc	.\src\Runtime\Online\Channel.h	/^typedef void (*Channel_Event_Proc)(void* user_ptr, const void* data);$/;"	t
Channel_Event_Type	.\src\Runtime\Online\Channel.h	/^enum Channel_Event_Type$/;"	g
Channel_Id	.\src\Runtime\Online\Channel.h	/^struct Channel_Id$/;"	s
Channel_Id::index	.\src\Runtime\Online\Channel.h	/^	u32 index;$/;"	m	struct:Channel_Id	access:public
Channel_Id::str	.\src\Runtime\Online\Channel.h	/^	char str[4];$/;"	m	struct:Channel_Id	access:public
Channel_Open	.\src\Runtime\Online\Online.h	/^	Channel_Open,$/;"	m	class:Rpc	access:private
Channel_State	.\src\Runtime\Online\Channel.h	/^enum class Channel_State$/;"	c
Channel_State::Idle	.\src\Runtime\Online\Channel.h	/^	Idle,$/;"	m	class:Channel_State	access:private
Channel_State::Pending_In	.\src\Runtime\Online\Channel.h	/^	Pending_In,$/;"	m	class:Channel_State	access:private
Channel_State::Pending_Out	.\src\Runtime\Online\Channel.h	/^	Pending_Out,$/;"	m	class:Channel_State	access:private
Client	.\src\Runtime\Online\Client.h	/^struct Client$/;"	s
Client::connection_state	.\src\Runtime\Online\Client.h	/^	Client_Connection_State connection_state;$/;"	m	struct:Client	access:public
Client::local_user	.\src\Runtime\Online\Client.h	/^	Online_User* local_user = nullptr;$/;"	m	struct:Client	access:public
Client::server	.\src\Runtime\Online\Client.h	/^	Connection_Handle server;$/;"	m	struct:Client	access:public
Client::users	.\src\Runtime\Online\Client.h	/^	Online_User users[CLIENT_MAX_USERS];$/;"	m	struct:Client	access:public
Client_Connection_State	.\src\Runtime\Online\Client.h	/^enum class Client_Connection_State : u8$/;"	c	inherits:u8
Client_Connection_State::Disconnected	.\src\Runtime\Online\Client.h	/^	Disconnected,$/;"	m	class:Client_Connection_State	access:private
Client_Connection_State::Pending	.\src\Runtime\Online\Client.h	/^	Pending,$/;"	m	class:Client_Connection_State	access:private
ColorMapped	.\src\Core\Import\TGA.cpp	/^	ColorMapped,$/;"	m	class:Tga_Image_Type	file:	access:private
Comma	.\src\Core\Input\Key.h	/^	Comma,$/;"	m	class:Key	access:private
Config	.\buildandrun.bat	/^if "%Config%"=="" set Config=Debug$/;"	v
Config	.\buildandrun.bat	/^set Config=%1$/;"	v
Connect	.\src\Core\Net\NetEvent.h	/^	Connect,$/;"	m	class:Net_Event_Type	access:private
Connect	.\src\Core\Net\Packet.h	/^	Connect,$/;"	m	class:Packet_Type	access:private
Connection	.\src\Core\Net\Connection.h	/^struct Connection$/;"	s
Connection::handle	.\src\Core\Net\Connection.h	/^	Connection_Handle handle;$/;"	m	struct:Connection	access:public
Connection::incoming	.\src\Core\Net\Connection.h	/^	Packet_List incoming;$/;"	m	struct:Connection	access:public
Connection::mutexes	.\src\Core\Net\Connection.h	/^	Mutex mutexes[(u32)Connection_Lock::Max];$/;"	m	struct:Connection	access:public
Connection::next_in_id	.\src\Core\Net\Connection.h	/^	u32 next_in_id = 0;$/;"	m	struct:Connection	access:public
Connection::next_out_id	.\src\Core\Net\Connection.h	/^	u32 next_out_id = 0;$/;"	m	struct:Connection	access:public
Connection::outgoing	.\src\Core\Net\Connection.h	/^	Packet_List outgoing;$/;"	m	struct:Connection	access:public
Connection::ping	.\src\Core\Net\Connection.h	/^	float ping = 0.f;$/;"	m	struct:Connection	access:public
Connection::ping_send_time	.\src\Core\Net\Connection.h	/^	float ping_send_time = 0.f;$/;"	m	struct:Connection	access:public
Connection::state	.\src\Core\Net\Connection.h	/^	Connection_State state;$/;"	m	struct:Connection	access:public
Connection_Handle	.\src\Core\Net\Connection.h	/^struct Connection_Handle$/;"	s
Connection_Handle::addr	.\src\Core\Net\Connection.h	/^	Ip_Address addr;$/;"	m	struct:Connection_Handle	access:public
Connection_Handle::generation	.\src\Core\Net\Connection.h	/^	int generation;$/;"	m	struct:Connection_Handle	access:public
Connection_Handle::id	.\src\Core\Net\Connection.h	/^	int id;$/;"	m	struct:Connection_Handle	access:public
Connection_Lock	.\src\Core\Net\Connection.h	/^enum class Connection_Lock$/;"	c
Connection_Lock::In	.\src\Core\Net\Connection.h	/^	In,$/;"	m	class:Connection_Lock	access:private
Connection_Lock::Out	.\src\Core\Net\Connection.h	/^	Out,$/;"	m	class:Connection_Lock	access:private
Connection_Lock::State	.\src\Core\Net\Connection.h	/^	State,$/;"	m	class:Connection_Lock	access:private
Connection_State	.\src\Core\Net\Connection.h	/^enum class Connection_State$/;"	c
Connection_State::Active	.\src\Core\Net\Connection.h	/^	Active,$/;"	m	class:Connection_State	access:private
Connection_State::None	.\src\Core\Net\Connection.h	/^	None,$/;"	m	class:Connection_State	access:private
Connection_State::Open	.\src\Core\Net\Connection.h	/^	Open,$/;"	m	class:Connection_State	access:private
Connection_State::PendingAccept	.\src\Core\Net\Connection.h	/^	PendingAccept,$/;"	m	class:Connection_State	access:private
Connection_State::PendingConnect	.\src\Core\Net\Connection.h	/^	PendingConnect,$/;"	m	class:Connection_State	access:private
Context	.\src\Core\Context\Context.h	/^struct Context$/;"	s
Context::cursor_hide	.\src\Core\Context\Context.h	/^	bool cursor_hide = false;$/;"	m	struct:Context	access:public
Context::cursor_lock	.\src\Core\Context\Context.h	/^	bool cursor_lock = false;$/;"	m	struct:Context	access:public
Context::has_focus	.\src\Core\Context\Context.h	/^	bool has_focus = false;$/;"	m	struct:Context	access:public
Context::height	.\src\Core\Context\Context.h	/^	i32 height;$/;"	m	struct:Context	access:public
Context::is_open	.\src\Core\Context\Context.h	/^	bool is_open = false;$/;"	m	struct:Context	access:public
Context::width	.\src\Core\Context\Context.h	/^	i32 width;$/;"	m	struct:Context	access:public
Context::x	.\src\Core\Context\Context.h	/^	i32 x;$/;"	m	struct:Context	access:public
Context::y	.\src\Core\Context\Context.h	/^	i32 y;$/;"	m	struct:Context	access:public
D	.\src\Core\Input\Key.h	/^	D,$/;"	m	class:Key	access:private
DECL_FUN	.\src\Core\GL\GL.h	10;"	d
DECL_FUN	.\src\Core\GL\GL.h	16;"	d
DIGIT	.\src\Core\Import\Dat.cpp	62;"	d	file:
DOT	.\src\Core\OS\Path.cpp	8;"	d	file:
Dat_Array	.\src\Core\Import\Dat.h	/^struct Dat_Array$/;"	s
Dat_Array::doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Array	access:public
Dat_Array::elements	.\src\Core\Import\Dat.h	/^	Dat_Node** elements = nullptr;$/;"	m	struct:Dat_Array	access:public
Dat_Array::size	.\src\Core\Import\Dat.h	/^	u32 size;$/;"	m	struct:Dat_Array	access:public
Dat_Array::type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Array;$/;"	m	struct:Dat_Array	access:public
Dat_Buffer	.\src\Core\Import\Dat.cpp	/^struct Dat_Buffer$/;"	s	file:
Dat_Buffer::data	.\src\Core\Import\Dat.cpp	/^	char* data;$/;"	m	struct:Dat_Buffer	file:	access:public
Dat_Buffer::length	.\src\Core\Import\Dat.cpp	/^	u32 length;$/;"	m	struct:Dat_Buffer	file:	access:public
Dat_Buffer::offset	.\src\Core\Import\Dat.cpp	/^	u32 offset;$/;"	m	struct:Dat_Buffer	file:	access:public
Dat_Document	.\src\Core\Import\Dat.h	/^struct Dat_Document$/;"	s
Dat_Document::arena	.\src\Core\Import\Dat.h	/^	Mem_Arena arena;$/;"	m	struct:Dat_Document	access:public
Dat_Document::root	.\src\Core\Import\Dat.h	/^	Dat_Object* root;$/;"	m	struct:Dat_Document	access:public
Dat_Key	.\src\Core\Import\Dat.h	/^struct Dat_Key$/;"	s
Dat_Key::doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Key	access:public
Dat_Key::name	.\src\Core\Import\Dat.h	/^	char* name = nullptr;$/;"	m	struct:Dat_Key	access:public
Dat_Key::name_len	.\src\Core\Import\Dat.h	/^	u32 name_len = 0;$/;"	m	struct:Dat_Key	access:public
Dat_Key::next	.\src\Core\Import\Dat.h	/^	Dat_Key* next = nullptr;$/;"	m	struct:Dat_Key	access:public
Dat_Key::type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Key;$/;"	m	struct:Dat_Key	access:public
Dat_Key::value	.\src\Core\Import\Dat.h	/^	Dat_Node* value = nullptr;$/;"	m	struct:Dat_Key	access:public
Dat_Node	.\src\Core\Import\Dat.h	/^struct Dat_Node$/;"	s
Dat_Node::doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Node	access:public
Dat_Node::type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Invalid;$/;"	m	struct:Dat_Node	access:public
Dat_Node_Type	.\src\Core\Import\Dat.h	/^enum class Dat_Node_Type$/;"	c
Dat_Node_Type::Invalid	.\src\Core\Import\Dat.h	/^	Invalid,$/;"	m	class:Dat_Node_Type	access:private
Dat_Node_Type::Key	.\src\Core\Import\Dat.h	/^	Key,$/;"	m	class:Dat_Node_Type	access:private
Dat_Node_Type::Object	.\src\Core\Import\Dat.h	/^	Object,$/;"	m	class:Dat_Node_Type	access:private
Dat_Node_Type::ValueRaw	.\src\Core\Import\Dat.h	/^	ValueRaw,$/;"	m	class:Dat_Node_Type	access:private
Dat_Object	.\src\Core\Import\Dat.h	/^struct Dat_Object$/;"	s
Dat_Object::doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Object	access:public
Dat_Object::first_key	.\src\Core\Import\Dat.h	/^	Dat_Key* first_key = nullptr;$/;"	m	struct:Dat_Object	access:public
Dat_Object::type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Object;$/;"	m	struct:Dat_Object	access:public
Dat_Value_Raw	.\src\Core\Import\Dat.h	/^struct Dat_Value_Raw$/;"	s
Dat_Value_Raw::doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Value_Raw	access:public
Dat_Value_Raw::str	.\src\Core\Import\Dat.h	/^	char* str = nullptr;$/;"	m	struct:Dat_Value_Raw	access:public
Dat_Value_Raw::str_len	.\src\Core\Import\Dat.h	/^	i32 str_len = 0;$/;"	m	struct:Dat_Value_Raw	access:public
Dat_Value_Raw::type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::ValueRaw;$/;"	m	struct:Dat_Value_Raw	access:public
DeferHelper	.\src\Core\Defer.h	/^struct DeferHelper$/;"	s
DeferHelper::operator +	.\src\Core\Defer.h	/^	_Defer<TFunctor> operator+(TFunctor functor)$/;"	f	struct:DeferHelper	access:public	signature:(TFunctor functor)
Delete	.\src\Core\Input\Key.h	/^	Delete,$/;"	m	class:Key	access:private
Destroy_Unit_Data	.\src\Runtime\Game\Game.cpp	/^	struct Destroy_Unit_Data$/;"	s	namespace:__anon11	file:
DeviceName	.\include\GL\wglext.h	/^    CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE	access:public
DeviceString	.\include\GL\wglext.h	/^    CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE	access:public
Direct	.\src\Core\Import\Fbx_Data.h	/^	Direct,$/;"	m	class:Fbx_Reference_Type	access:private
Disconnect	.\src\Core\Net\NetEvent.h	/^	Disconnect,$/;"	m	class:Net_Event_Type	access:private
Disconnected	.\src\Runtime\Online\Client.h	/^	Disconnected,$/;"	m	class:Client_Connection_State	access:private
Double	.\src\Core\Import\Fbx_Data.h	/^	Double = 'D',$/;"	m	class:Fbx_Property_Type	access:private
Double_Array	.\src\Core\Import\Fbx_Data.h	/^	Double_Array = 'd',$/;"	m	class:Fbx_Property_Type	access:private
DownArrow	.\src\Core\Input\Key.h	/^	DownArrow,$/;"	m	class:Key	access:private
Drawable	.\src\Engine\Render\Drawable.h	/^struct Drawable$/;"	s
Drawable::material	.\src\Engine\Render\Drawable.h	/^	const Material* material = nullptr;$/;"	m	struct:Drawable	access:public
Drawable::mesh	.\src\Engine\Render\Drawable.h	/^	const Mesh* mesh = nullptr;$/;"	m	struct:Drawable	access:public
Drawable::texture	.\src\Engine\Render\Drawable.h	/^	const Texture* texture = nullptr;$/;"	m	struct:Drawable	access:public
Drawable::transform	.\src\Engine\Render\Drawable.h	/^	Mat4 transform;$/;"	m	struct:Drawable	access:public
E	.\src\Core\Input\Key.h	/^	E,$/;"	m	class:Key	access:private
ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV	.\include\GL\wglext.h	702;"	d
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	.\include\GL\wglext.h	130;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	.\include\GL\wglext.h	129;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	.\include\GL\wglext.h	403;"	d
ERROR_INVALID_PROFILE_ARB	.\include\GL\wglext.h	103;"	d
ERROR_INVALID_VERSION_ARB	.\include\GL\wglext.h	86;"	d
ERROR_MISSING_AFFINITY_MASK_NV	.\include\GL\wglext.h	703;"	d
EVENT_Broadcast	.\src\Runtime\Online\Channel.h	/^	EVENT_Broadcast,$/;"	e	enum:Channel_Event_Type
EVENT_Destroy_Unit	.\src\Runtime\Game\Game.cpp	/^		EVENT_Destroy_Unit,$/;"	e	enum:__anon11::Events	file:
EVENT_Set_Position	.\src\Runtime\Unit\Unit.cpp	/^		EVENT_Set_Position,$/;"	e	enum:__anon12::Event	file:
EVENT_Single	.\src\Runtime\Online\Channel.h	/^	EVENT_Single,$/;"	e	enum:Channel_Event_Type
EVENT_Spawn_Unit	.\src\Runtime\Game\Game.cpp	/^		EVENT_Spawn_Unit,$/;"	e	enum:__anon11::Events	file:
End	.\src\Core\Input\Key.h	/^	End,$/;"	m	class:Key	access:private
Enter	.\src\Core\Input\Key.h	/^	Enter,$/;"	m	class:Key	access:private
Escape	.\src\Core\Input\Key.h	/^	Escape = 0x1,$/;"	m	class:Key	access:private
Event	.\src\Runtime\Unit\Unit.cpp	/^	enum Event$/;"	g	namespace:__anon12	file:
Events	.\src\Runtime\Game\Game.cpp	/^	enum Events$/;"	g	namespace:__anon11	file:
F	.\src\Core\Input\Key.h	/^	F,$/;"	m	class:Key	access:private
F1	.\src\Core\Input\Key.h	/^	F1,$/;"	m	class:Key	access:private
F10	.\src\Core\Input\Key.h	/^	F10,$/;"	m	class:Key	access:private
F2	.\src\Core\Input\Key.h	/^	F2,$/;"	m	class:Key	access:private
F3	.\src\Core\Input\Key.h	/^	F3,$/;"	m	class:Key	access:private
F4	.\src\Core\Input\Key.h	/^	F4,$/;"	m	class:Key	access:private
F5	.\src\Core\Input\Key.h	/^	F5,$/;"	m	class:Key	access:private
F6	.\src\Core\Input\Key.h	/^	F6,$/;"	m	class:Key	access:private
F7	.\src\Core\Input\Key.h	/^	F7,$/;"	m	class:Key	access:private
F8	.\src\Core\Input\Key.h	/^	F8,$/;"	m	class:Key	access:private
F9	.\src\Core\Input\Key.h	/^	F9,$/;"	m	class:Key	access:private
FAR	.\src\Core\WinMin.h	54;"	d
FRAMEBUFFER_MAX_TEXTURES	.\src\Engine\Graphics\FrameBuffer.h	5;"	d
Fbx_Array	.\src\Core\Import\Fbx_Data.h	/^struct Fbx_Array$/;"	s
Fbx_Array::data	.\src\Core\Import\Fbx_Data.h	/^	void* data;$/;"	m	struct:Fbx_Array	access:public
Fbx_Array::length	.\src\Core\Import\Fbx_Data.h	/^	u32 length;$/;"	m	struct:Fbx_Array	access:public
Fbx_Array_Header	.\src\Core\Import\FBX_Parse.cpp	/^struct Fbx_Array_Header$/;"	s	file:
Fbx_Array_Header::encoding	.\src\Core\Import\FBX_Parse.cpp	/^	u32 encoding;$/;"	m	struct:Fbx_Array_Header	file:	access:public
Fbx_Array_Header::length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_Array_Header	file:	access:public
Fbx_Array_Header::length_compressed	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length_compressed;$/;"	m	struct:Fbx_Array_Header	file:	access:public
Fbx_Buffer	.\src\Core\Import\FBX_Parse.cpp	/^struct Fbx_Buffer$/;"	s	file:
Fbx_Buffer::data	.\src\Core\Import\FBX_Parse.cpp	/^	u8* data;$/;"	m	struct:Fbx_Buffer	file:	access:public
Fbx_Buffer::length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_Buffer	file:	access:public
Fbx_Buffer::pointer	.\src\Core\Import\FBX_Parse.cpp	/^	u32 pointer;$/;"	m	struct:Fbx_Buffer	file:	access:public
Fbx_Face	.\src\Core\Import\Fbx.h	/^struct Fbx_Face$/;"	s
Fbx_Face::index_offset	.\src\Core\Import\Fbx.h	/^	u32 index_offset = 0;$/;"	m	struct:Fbx_Face	access:public
Fbx_Face::vert_count	.\src\Core\Import\Fbx.h	/^	u32 vert_count = 0;$/;"	m	struct:Fbx_Face	access:public
Fbx_Header	.\src\Core\Import\FBX_Parse.cpp	/^struct Fbx_Header$/;"	s	file:
Fbx_Header::title	.\src\Core\Import\FBX_Parse.cpp	/^	char title[21];$/;"	m	struct:Fbx_Header	file:	access:public
Fbx_Header::unknown	.\src\Core\Import\FBX_Parse.cpp	/^	u8 unknown[2];$/;"	m	struct:Fbx_Header	file:	access:public
Fbx_Header::version	.\src\Core\Import\FBX_Parse.cpp	/^	u32 version;$/;"	m	struct:Fbx_Header	file:	access:public
Fbx_Mapping_Type	.\src\Core\Import\Fbx_Data.h	/^enum class Fbx_Mapping_Type$/;"	c
Fbx_Mapping_Type::Invalid	.\src\Core\Import\Fbx_Data.h	/^	Invalid,$/;"	m	class:Fbx_Mapping_Type	access:private
Fbx_Mesh	.\src\Core\Import\Fbx.h	/^struct Fbx_Mesh$/;"	s
Fbx_Mesh::faces	.\src\Core\Import\Fbx.h	/^	Fbx_Face* faces = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::indicies	.\src\Core\Import\Fbx.h	/^	u32* indicies = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::normals	.\src\Core\Import\Fbx.h	/^	Vec3* normals = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::num_faces	.\src\Core\Import\Fbx.h	/^	u32 num_faces = 0;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::num_verts	.\src\Core\Import\Fbx.h	/^	u32 num_verts = 0;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::positions	.\src\Core\Import\Fbx.h	/^	Vec3* positions = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Mesh::uvs	.\src\Core\Import\Fbx.h	/^	Vec2* uvs = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
Fbx_Node	.\src\Core\Import\Fbx_Data.h	/^struct Fbx_Node$/;"	s
Fbx_Node::child	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Node* child = nullptr;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node::name	.\src\Core\Import\Fbx_Data.h	/^	char* name = nullptr;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node::name_len	.\src\Core\Import\Fbx_Data.h	/^	u16 name_len = 0;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node::next	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Node* next = nullptr;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node::properties	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Property* properties = nullptr;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node::property_count	.\src\Core\Import\Fbx_Data.h	/^	u16 property_count = 0;$/;"	m	struct:Fbx_Node	access:public
Fbx_Node_Header	.\src\Core\Import\FBX_Parse.cpp	/^struct Fbx_Node_Header$/;"	s	file:
Fbx_Node_Header::end_offset	.\src\Core\Import\FBX_Parse.cpp	/^	u32 end_offset;$/;"	m	struct:Fbx_Node_Header	file:	access:public
Fbx_Node_Header::name_len	.\src\Core\Import\FBX_Parse.cpp	/^	u8 name_len;$/;"	m	struct:Fbx_Node_Header	file:	access:public
Fbx_Node_Header::property_count	.\src\Core\Import\FBX_Parse.cpp	/^	u32 property_count;$/;"	m	struct:Fbx_Node_Header	file:	access:public
Fbx_Node_Header::property_end_offset	.\src\Core\Import\FBX_Parse.cpp	/^	u32 property_end_offset;$/;"	m	struct:Fbx_Node_Header	file:	access:public
Fbx_Property	.\src\Core\Import\Fbx_Data.h	/^struct Fbx_Property$/;"	s
Fbx_Property::data	.\src\Core\Import\Fbx_Data.h	/^	void* data;$/;"	m	struct:Fbx_Property	access:public
Fbx_Property::type	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Property_Type type;$/;"	m	struct:Fbx_Property	access:public
Fbx_Property_Type	.\src\Core\Import\Fbx_Data.h	/^enum class Fbx_Property_Type : i8$/;"	c	inherits:i8
Fbx_Property_Type::Bool	.\src\Core\Import\Fbx_Data.h	/^	Bool = 'C',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Bool_Array	.\src\Core\Import\Fbx_Data.h	/^	Bool_Array = 'b',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Double	.\src\Core\Import\Fbx_Data.h	/^	Double = 'D',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Double_Array	.\src\Core\Import\Fbx_Data.h	/^	Double_Array = 'd',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Float	.\src\Core\Import\Fbx_Data.h	/^	Float = 'F',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Float_Array	.\src\Core\Import\Fbx_Data.h	/^	Float_Array = 'f',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Int	.\src\Core\Import\Fbx_Data.h	/^	Int = 'I',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Int_Array	.\src\Core\Import\Fbx_Data.h	/^	Int_Array = 'i',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Long	.\src\Core\Import\Fbx_Data.h	/^	Long = 'L',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Long_Array	.\src\Core\Import\Fbx_Data.h	/^	Long_Array = 'l',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Raw	.\src\Core\Import\Fbx_Data.h	/^	Raw = 'R',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::Short	.\src\Core\Import\Fbx_Data.h	/^	Short = 'Y',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Property_Type::String	.\src\Core\Import\Fbx_Data.h	/^	String = 'S',$/;"	m	class:Fbx_Property_Type	access:private
Fbx_Reference_Type	.\src\Core\Import\Fbx_Data.h	/^enum class Fbx_Reference_Type$/;"	c
Fbx_Reference_Type::Direct	.\src\Core\Import\Fbx_Data.h	/^	Direct,$/;"	m	class:Fbx_Reference_Type	access:private
Fbx_Reference_Type::Invalid	.\src\Core\Import\Fbx_Data.h	/^	Invalid,$/;"	m	class:Fbx_Reference_Type	access:private
Fbx_Scene	.\src\Core\Import\Fbx.h	/^struct Fbx_Scene$/;"	s
Fbx_Scene::mem_arena	.\src\Core\Import\Fbx.h	/^	Mem_Arena mem_arena;$/;"	m	struct:Fbx_Scene	access:public
Fbx_Scene::meshes	.\src\Core\Import\Fbx.h	/^	Fbx_Mesh* meshes;$/;"	m	struct:Fbx_Scene	access:public
Fbx_Scene::num_meshes	.\src\Core\Import\Fbx.h	/^	u32 num_meshes;$/;"	m	struct:Fbx_Scene	access:public
Fbx_String	.\src\Core\Import\Fbx_Data.h	/^struct Fbx_String$/;"	s
Fbx_String::data	.\src\Core\Import\Fbx_Data.h	/^	char* data;$/;"	m	struct:Fbx_String	access:public
Fbx_String::length	.\src\Core\Import\Fbx_Data.h	/^	u32 length;$/;"	m	struct:Fbx_String	access:public
Fbx_String_Header	.\src\Core\Import\FBX_Parse.cpp	/^struct Fbx_String_Header$/;"	s	file:
Fbx_String_Header::length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_String_Header	file:	access:public
File	.\src\Core\OS\Path.h	/^	File,$/;"	m	class:Path_Type	access:private
Flags	.\include\GL\wglext.h	/^    DWORD  Flags;$/;"	m	struct:_GPU_DEVICE	access:public
Float	.\src\Core\Import\Fbx_Data.h	/^	Float = 'F',$/;"	m	class:Fbx_Property_Type	access:private
Float_Array	.\src\Core\Import\Fbx_Data.h	/^	Float_Array = 'f',$/;"	m	class:Fbx_Property_Type	access:private
ForwardSlash	.\src\Core\Input\Key.h	/^	ForwardSlash,$/;"	m	class:Key	access:private
Frame_Buffer	.\src\Engine\Graphics\FrameBuffer.h	/^struct Frame_Buffer$/;"	s
Frame_Buffer::handle	.\src\Engine\Graphics\FrameBuffer.h	/^	GLuint handle = GL_INVALID_INDEX;$/;"	m	struct:Frame_Buffer	access:public
Frame_Buffer::height	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 height = 0;$/;"	m	struct:Frame_Buffer	access:public
Frame_Buffer::num_textures	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 num_textures = 0;$/;"	m	struct:Frame_Buffer	access:public
Frame_Buffer::textures	.\src\Engine\Graphics\FrameBuffer.h	/^	Texture textures[FRAMEBUFFER_MAX_TEXTURES];$/;"	m	struct:Frame_Buffer	access:public
Frame_Buffer::width	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 width = 0;$/;"	m	struct:Frame_Buffer	access:public
G	.\src\Core\Input\Key.h	/^	G,$/;"	m	class:Key	access:private
GLAPI	.\include\GL\glext.h	51;"	d
GLDEBUGPROC	.\include\GL\glext.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCAMD	.\include\GL\glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);$/;"	t
GLDEBUGPROCARB	.\include\GL\glext.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLVULKANPROCNV	.\include\GL\glext.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t
GL_1PASS_EXT	.\include\GL\glext.h	7776;"	d
GL_1PASS_SGIS	.\include\GL\glext.h	11933;"	d
GL_2PASS_0_EXT	.\include\GL\glext.h	7777;"	d
GL_2PASS_0_SGIS	.\include\GL\glext.h	11934;"	d
GL_2PASS_1_EXT	.\include\GL\glext.h	7778;"	d
GL_2PASS_1_SGIS	.\include\GL\glext.h	11935;"	d
GL_2X_BIT_ATI	.\include\GL\glext.h	6161;"	d
GL_2_BYTES_NV	.\include\GL\glext.h	10469;"	d
GL_3DFX_multisample	.\include\GL\glext.h	5346;"	d
GL_3DFX_tbuffer	.\include\GL\glext.h	5354;"	d
GL_3DFX_texture_compression_FXT1	.\include\GL\glext.h	5362;"	d
GL_3_BYTES_NV	.\include\GL\glext.h	10470;"	d
GL_422_AVERAGE_EXT	.\include\GL\glext.h	6453;"	d
GL_422_EXT	.\include\GL\glext.h	6451;"	d
GL_422_REV_AVERAGE_EXT	.\include\GL\glext.h	6454;"	d
GL_422_REV_EXT	.\include\GL\glext.h	6452;"	d
GL_4PASS_0_EXT	.\include\GL\glext.h	7779;"	d
GL_4PASS_0_SGIS	.\include\GL\glext.h	11936;"	d
GL_4PASS_1_EXT	.\include\GL\glext.h	7780;"	d
GL_4PASS_1_SGIS	.\include\GL\glext.h	11937;"	d
GL_4PASS_2_EXT	.\include\GL\glext.h	7781;"	d
GL_4PASS_2_SGIS	.\include\GL\glext.h	11938;"	d
GL_4PASS_3_EXT	.\include\GL\glext.h	7782;"	d
GL_4PASS_3_SGIS	.\include\GL\glext.h	11939;"	d
GL_4X_BIT_ATI	.\include\GL\glext.h	6162;"	d
GL_4_BYTES_NV	.\include\GL\glext.h	10471;"	d
GL_8X_BIT_ATI	.\include\GL\glext.h	6163;"	d
GL_ABGR_EXT	.\include\GL\glext.h	6470;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	.\include\GL\glext.h	10379;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2067;"	d
GL_ACTIVE_ATTRIBUTES	.\include\GL\glext.h	635;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	.\include\GL\glext.h	636;"	d
GL_ACTIVE_PROGRAM	.\include\GL\glext.h	1837;"	d
GL_ACTIVE_PROGRAM_EXT	.\include\GL\glext.h	8048;"	d
GL_ACTIVE_RESOURCES	.\include\GL\glext.h	2367;"	d
GL_ACTIVE_STENCIL_FACE_EXT	.\include\GL\glext.h	8178;"	d
GL_ACTIVE_SUBROUTINES	.\include\GL\glext.h	1666;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	.\include\GL\glext.h	1669;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	.\include\GL\glext.h	1667;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	.\include\GL\glext.h	1668;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	.\include\GL\glext.h	1670;"	d
GL_ACTIVE_TEXTURE	.\include\GL\glext.h	157;"	d
GL_ACTIVE_TEXTURE_ARB	.\include\GL\glext.h	3751;"	d
GL_ACTIVE_UNIFORMS	.\include\GL\glext.h	632;"	d
GL_ACTIVE_UNIFORM_BLOCKS	.\include\GL\glext.h	1338;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	.\include\GL\glext.h	1337;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	.\include\GL\glext.h	633;"	d
GL_ACTIVE_VARIABLES	.\include\GL\glext.h	2383;"	d
GL_ACTIVE_VARYINGS_NV	.\include\GL\glext.h	11175;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	.\include\GL\glext.h	11176;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	.\include\GL\glext.h	4632;"	d
GL_ADD_ATI	.\include\GL\glext.h	6133;"	d
GL_ADD_SIGNED	.\include\GL\glext.h	213;"	d
GL_ADD_SIGNED_ARB	.\include\GL\glext.h	4449;"	d
GL_ADD_SIGNED_EXT	.\include\GL\glext.h	8346;"	d
GL_ADJACENT_PAIRS_NV	.\include\GL\glext.h	10380;"	d
GL_AFFINE_2D_NV	.\include\GL\glext.h	10357;"	d
GL_AFFINE_3D_NV	.\include\GL\glext.h	10358;"	d
GL_ALIASED_LINE_WIDTH_RANGE	.\include\GL\glext.h	105;"	d
GL_ALIASED_POINT_SIZE_RANGE	.\include\GL\glext.h	110;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	.\include\GL\glext.h	11832;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	.\include\GL\glext.h	11833;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	.\include\GL\glext.h	11830;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	.\include\GL\glext.h	11831;"	d
GL_ALL_BARRIER_BITS	.\include\GL\glext.h	2082;"	d
GL_ALL_BARRIER_BITS_EXT	.\include\GL\glext.h	8139;"	d
GL_ALL_COMPLETED_NV	.\include\GL\glext.h	9784;"	d
GL_ALL_PIXELS_AMD	.\include\GL\glext.h	5447;"	d
GL_ALL_SHADER_BITS	.\include\GL\glext.h	1835;"	d
GL_ALL_STATIC_DATA_IBM	.\include\GL\glext.h	9057;"	d
GL_ALPHA12_EXT	.\include\GL\glext.h	8205;"	d
GL_ALPHA16F_ARB	.\include\GL\glext.h	4495;"	d
GL_ALPHA16I_EXT	.\include\GL\glext.h	8411;"	d
GL_ALPHA16UI_EXT	.\include\GL\glext.h	8393;"	d
GL_ALPHA16_EXT	.\include\GL\glext.h	8206;"	d
GL_ALPHA16_SNORM	.\include\GL\glext.h	8544;"	d
GL_ALPHA32F_ARB	.\include\GL\glext.h	4489;"	d
GL_ALPHA32I_EXT	.\include\GL\glext.h	8405;"	d
GL_ALPHA32UI_EXT	.\include\GL\glext.h	8387;"	d
GL_ALPHA4_EXT	.\include\GL\glext.h	8203;"	d
GL_ALPHA8I_EXT	.\include\GL\glext.h	8417;"	d
GL_ALPHA8UI_EXT	.\include\GL\glext.h	8399;"	d
GL_ALPHA8_EXT	.\include\GL\glext.h	8204;"	d
GL_ALPHA8_SNORM	.\include\GL\glext.h	8540;"	d
GL_ALPHA_FLOAT16_APPLE	.\include\GL\glext.h	5859;"	d
GL_ALPHA_FLOAT16_ATI	.\include\GL\glext.h	6281;"	d
GL_ALPHA_FLOAT32_APPLE	.\include\GL\glext.h	5853;"	d
GL_ALPHA_FLOAT32_ATI	.\include\GL\glext.h	6275;"	d
GL_ALPHA_INTEGER	.\include\GL\glext.h	1120;"	d
GL_ALPHA_INTEGER_EXT	.\include\GL\glext.h	8424;"	d
GL_ALPHA_MAX_CLAMP_INGR	.\include\GL\glext.h	9125;"	d
GL_ALPHA_MAX_SGIX	.\include\GL\glext.h	12138;"	d
GL_ALPHA_MIN_CLAMP_INGR	.\include\GL\glext.h	9121;"	d
GL_ALPHA_MIN_SGIX	.\include\GL\glext.h	12137;"	d
GL_ALPHA_REF_COMMAND_NV	.\include\GL\glext.h	9537;"	d
GL_ALPHA_SNORM	.\include\GL\glext.h	8536;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV	.\include\GL\glext.h	9375;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV	.\include\GL\glext.h	9377;"	d
GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV	.\include\GL\glext.h	9376;"	d
GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV	.\include\GL\glext.h	9378;"	d
GL_ALREADY_SIGNALED	.\include\GL\glext.h	1426;"	d
GL_ALWAYS_FAST_HINT_PGI	.\include\GL\glext.h	11828;"	d
GL_ALWAYS_SOFT_HINT_PGI	.\include\GL\glext.h	11829;"	d
GL_AMD_blend_minmax_factor	.\include\GL\glext.h	5368;"	d
GL_AMD_conservative_depth	.\include\GL\glext.h	5374;"	d
GL_AMD_debug_output	.\include\GL\glext.h	5378;"	d
GL_AMD_depth_clamp_separate	.\include\GL\glext.h	5407;"	d
GL_AMD_draw_buffers_blend	.\include\GL\glext.h	5413;"	d
GL_AMD_framebuffer_multisample_advanced	.\include\GL\glext.h	5427;"	d
GL_AMD_framebuffer_sample_positions	.\include\GL\glext.h	5443;"	d
GL_AMD_gcn_shader	.\include\GL\glext.h	5461;"	d
GL_AMD_gpu_shader_half_float	.\include\GL\glext.h	5465;"	d
GL_AMD_gpu_shader_int16	.\include\GL\glext.h	5482;"	d
GL_AMD_gpu_shader_int64	.\include\GL\glext.h	5486;"	d
GL_AMD_interleaved_elements	.\include\GL\glext.h	5585;"	d
GL_AMD_multi_draw_indirect	.\include\GL\glext.h	5595;"	d
GL_AMD_name_gen_delete	.\include\GL\glext.h	5605;"	d
GL_AMD_occlusion_query_event	.\include\GL\glext.h	5622;"	d
GL_AMD_performance_monitor	.\include\GL\glext.h	5636;"	d
GL_AMD_pinned_memory	.\include\GL\glext.h	5671;"	d
GL_AMD_query_buffer_object	.\include\GL\glext.h	5676;"	d
GL_AMD_sample_positions	.\include\GL\glext.h	5683;"	d
GL_AMD_seamless_cubemap_per_texture	.\include\GL\glext.h	5691;"	d
GL_AMD_shader_atomic_counter_ops	.\include\GL\glext.h	5695;"	d
GL_AMD_shader_ballot	.\include\GL\glext.h	5699;"	d
GL_AMD_shader_explicit_vertex_parameter	.\include\GL\glext.h	5703;"	d
GL_AMD_shader_gpu_shader_half_float_fetch	.\include\GL\glext.h	5707;"	d
GL_AMD_shader_image_load_store_lod	.\include\GL\glext.h	5711;"	d
GL_AMD_shader_stencil_export	.\include\GL\glext.h	5715;"	d
GL_AMD_shader_trinary_minmax	.\include\GL\glext.h	5719;"	d
GL_AMD_sparse_texture	.\include\GL\glext.h	5723;"	d
GL_AMD_stencil_operation_extended	.\include\GL\glext.h	5742;"	d
GL_AMD_texture_gather_bias_lod	.\include\GL\glext.h	5754;"	d
GL_AMD_texture_texture4	.\include\GL\glext.h	5758;"	d
GL_AMD_transform_feedback3_lines_triangles	.\include\GL\glext.h	5762;"	d
GL_AMD_transform_feedback4	.\include\GL\glext.h	5766;"	d
GL_AMD_vertex_shader_layer	.\include\GL\glext.h	5771;"	d
GL_AMD_vertex_shader_tessellator	.\include\GL\glext.h	5775;"	d
GL_AMD_vertex_shader_viewport_index	.\include\GL\glext.h	5792;"	d
GL_ANY_SAMPLES_PASSED	.\include\GL\glext.h	1502;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	.\include\GL\glext.h	2183;"	d
GL_APPLE_aux_depth_stencil	.\include\GL\glext.h	5796;"	d
GL_APPLE_client_storage	.\include\GL\glext.h	5801;"	d
GL_APPLE_element_array	.\include\GL\glext.h	5806;"	d
GL_APPLE_fence	.\include\GL\glext.h	5825;"	d
GL_APPLE_float_pixels	.\include\GL\glext.h	5849;"	d
GL_APPLE_flush_buffer_range	.\include\GL\glext.h	5867;"	d
GL_APPLE_object_purgeable	.\include\GL\glext.h	5879;"	d
GL_APPLE_rgb_422	.\include\GL\glext.h	5897;"	d
GL_APPLE_row_bytes	.\include\GL\glext.h	5905;"	d
GL_APPLE_specular_vector	.\include\GL\glext.h	5911;"	d
GL_APPLE_texture_range	.\include\GL\glext.h	5916;"	d
GL_APPLE_transform_hint	.\include\GL\glext.h	5932;"	d
GL_APPLE_vertex_array_object	.\include\GL\glext.h	5937;"	d
GL_APPLE_vertex_array_range	.\include\GL\glext.h	5952;"	d
GL_APPLE_vertex_program_evaluators	.\include\GL\glext.h	5969;"	d
GL_APPLE_ycbcr_422	.\include\GL\glext.h	5999;"	d
GL_ARB_ES2_compatibility	.\include\GL\glext.h	2871;"	d
GL_ARB_ES3_1_compatibility	.\include\GL\glext.h	2875;"	d
GL_ARB_ES3_2_compatibility	.\include\GL\glext.h	2879;"	d
GL_ARB_ES3_compatibility	.\include\GL\glext.h	2890;"	d
GL_ARB_arrays_of_arrays	.\include\GL\glext.h	2894;"	d
GL_ARB_base_instance	.\include\GL\glext.h	2898;"	d
GL_ARB_bindless_texture	.\include\GL\glext.h	2902;"	d
GL_ARB_blend_func_extended	.\include\GL\glext.h	2942;"	d
GL_ARB_buffer_storage	.\include\GL\glext.h	2946;"	d
GL_ARB_cl_event	.\include\GL\glext.h	2950;"	d
GL_ARB_clear_buffer_object	.\include\GL\glext.h	2962;"	d
GL_ARB_clear_texture	.\include\GL\glext.h	2966;"	d
GL_ARB_clip_control	.\include\GL\glext.h	2970;"	d
GL_ARB_color_buffer_float	.\include\GL\glext.h	2974;"	d
GL_ARB_compatibility	.\include\GL\glext.h	2987;"	d
GL_ARB_compressed_texture_pixel_storage	.\include\GL\glext.h	2991;"	d
GL_ARB_compute_shader	.\include\GL\glext.h	2995;"	d
GL_ARB_compute_variable_group_size	.\include\GL\glext.h	2999;"	d
GL_ARB_conditional_render_inverted	.\include\GL\glext.h	3011;"	d
GL_ARB_conservative_depth	.\include\GL\glext.h	3015;"	d
GL_ARB_copy_buffer	.\include\GL\glext.h	3019;"	d
GL_ARB_copy_image	.\include\GL\glext.h	3023;"	d
GL_ARB_cull_distance	.\include\GL\glext.h	3027;"	d
GL_ARB_debug_output	.\include\GL\glext.h	3031;"	d
GL_ARB_depth_buffer_float	.\include\GL\glext.h	3068;"	d
GL_ARB_depth_clamp	.\include\GL\glext.h	3072;"	d
GL_ARB_depth_texture	.\include\GL\glext.h	3076;"	d
GL_ARB_derivative_control	.\include\GL\glext.h	3085;"	d
GL_ARB_direct_state_access	.\include\GL\glext.h	3089;"	d
GL_ARB_draw_buffers	.\include\GL\glext.h	3093;"	d
GL_ARB_draw_buffers_blend	.\include\GL\glext.h	3118;"	d
GL_ARB_draw_elements_base_vertex	.\include\GL\glext.h	3132;"	d
GL_ARB_draw_indirect	.\include\GL\glext.h	3136;"	d
GL_ARB_draw_instanced	.\include\GL\glext.h	3140;"	d
GL_ARB_enhanced_layouts	.\include\GL\glext.h	3150;"	d
GL_ARB_explicit_attrib_location	.\include\GL\glext.h	3154;"	d
GL_ARB_explicit_uniform_location	.\include\GL\glext.h	3158;"	d
GL_ARB_fragment_coord_conventions	.\include\GL\glext.h	3162;"	d
GL_ARB_fragment_layer_viewport	.\include\GL\glext.h	3166;"	d
GL_ARB_fragment_program	.\include\GL\glext.h	3170;"	d
GL_ARB_fragment_program_shadow	.\include\GL\glext.h	3292;"	d
GL_ARB_fragment_shader	.\include\GL\glext.h	3296;"	d
GL_ARB_fragment_shader_interlock	.\include\GL\glext.h	3303;"	d
GL_ARB_framebuffer_no_attachments	.\include\GL\glext.h	3307;"	d
GL_ARB_framebuffer_object	.\include\GL\glext.h	3311;"	d
GL_ARB_framebuffer_sRGB	.\include\GL\glext.h	3315;"	d
GL_ARB_geometry_shader4	.\include\GL\glext.h	3319;"	d
GL_ARB_get_program_binary	.\include\GL\glext.h	3351;"	d
GL_ARB_get_texture_sub_image	.\include\GL\glext.h	3355;"	d
GL_ARB_gl_spirv	.\include\GL\glext.h	3359;"	d
GL_ARB_gpu_shader5	.\include\GL\glext.h	3369;"	d
GL_ARB_gpu_shader_fp64	.\include\GL\glext.h	3373;"	d
GL_ARB_gpu_shader_int64	.\include\GL\glext.h	3377;"	d
GL_ARB_half_float_pixel	.\include\GL\glext.h	3462;"	d
GL_ARB_half_float_vertex	.\include\GL\glext.h	3468;"	d
GL_ARB_imaging	.\include\GL\glext.h	3472;"	d
GL_ARB_indirect_parameters	.\include\GL\glext.h	3606;"	d
GL_ARB_instanced_arrays	.\include\GL\glext.h	3618;"	d
GL_ARB_internalformat_query	.\include\GL\glext.h	3627;"	d
GL_ARB_internalformat_query2	.\include\GL\glext.h	3631;"	d
GL_ARB_invalidate_subdata	.\include\GL\glext.h	3655;"	d
GL_ARB_map_buffer_alignment	.\include\GL\glext.h	3659;"	d
GL_ARB_map_buffer_range	.\include\GL\glext.h	3663;"	d
GL_ARB_matrix_palette	.\include\GL\glext.h	3667;"	d
GL_ARB_multi_bind	.\include\GL\glext.h	3693;"	d
GL_ARB_multi_draw_indirect	.\include\GL\glext.h	3697;"	d
GL_ARB_multisample	.\include\GL\glext.h	3701;"	d
GL_ARB_multitexture	.\include\GL\glext.h	3718;"	d
GL_ARB_occlusion_query	.\include\GL\glext.h	3827;"	d
GL_ARB_occlusion_query2	.\include\GL\glext.h	3854;"	d
GL_ARB_parallel_shader_compile	.\include\GL\glext.h	3858;"	d
GL_ARB_pipeline_statistics_query	.\include\GL\glext.h	3868;"	d
GL_ARB_pixel_buffer_object	.\include\GL\glext.h	3882;"	d
GL_ARB_point_parameters	.\include\GL\glext.h	3890;"	d
GL_ARB_point_sprite	.\include\GL\glext.h	3904;"	d
GL_ARB_polygon_offset_clamp	.\include\GL\glext.h	3910;"	d
GL_ARB_post_depth_coverage	.\include\GL\glext.h	3914;"	d
GL_ARB_program_interface_query	.\include\GL\glext.h	3918;"	d
GL_ARB_provoking_vertex	.\include\GL\glext.h	3922;"	d
GL_ARB_query_buffer_object	.\include\GL\glext.h	3926;"	d
GL_ARB_robust_buffer_access_behavior	.\include\GL\glext.h	3930;"	d
GL_ARB_robustness	.\include\GL\glext.h	3934;"	d
GL_ARB_robustness_isolation	.\include\GL\glext.h	3987;"	d
GL_ARB_sample_locations	.\include\GL\glext.h	3991;"	d
GL_ARB_sample_shading	.\include\GL\glext.h	4011;"	d
GL_ARB_sampler_objects	.\include\GL\glext.h	4021;"	d
GL_ARB_seamless_cube_map	.\include\GL\glext.h	4025;"	d
GL_ARB_seamless_cubemap_per_texture	.\include\GL\glext.h	4029;"	d
GL_ARB_separate_shader_objects	.\include\GL\glext.h	4033;"	d
GL_ARB_shader_atomic_counter_ops	.\include\GL\glext.h	4037;"	d
GL_ARB_shader_atomic_counters	.\include\GL\glext.h	4041;"	d
GL_ARB_shader_ballot	.\include\GL\glext.h	4045;"	d
GL_ARB_shader_bit_encoding	.\include\GL\glext.h	4049;"	d
GL_ARB_shader_clock	.\include\GL\glext.h	4053;"	d
GL_ARB_shader_draw_parameters	.\include\GL\glext.h	4057;"	d
GL_ARB_shader_group_vote	.\include\GL\glext.h	4061;"	d
GL_ARB_shader_image_load_store	.\include\GL\glext.h	4065;"	d
GL_ARB_shader_image_size	.\include\GL\glext.h	4069;"	d
GL_ARB_shader_objects	.\include\GL\glext.h	4073;"	d
GL_ARB_shader_precision	.\include\GL\glext.h	4197;"	d
GL_ARB_shader_stencil_export	.\include\GL\glext.h	4201;"	d
GL_ARB_shader_storage_buffer_object	.\include\GL\glext.h	4205;"	d
GL_ARB_shader_subroutine	.\include\GL\glext.h	4209;"	d
GL_ARB_shader_texture_image_samples	.\include\GL\glext.h	4213;"	d
GL_ARB_shader_texture_lod	.\include\GL\glext.h	4217;"	d
GL_ARB_shader_viewport_layer_array	.\include\GL\glext.h	4221;"	d
GL_ARB_shading_language_100	.\include\GL\glext.h	4225;"	d
GL_ARB_shading_language_420pack	.\include\GL\glext.h	4230;"	d
GL_ARB_shading_language_include	.\include\GL\glext.h	4234;"	d
GL_ARB_shading_language_packing	.\include\GL\glext.h	4255;"	d
GL_ARB_shadow	.\include\GL\glext.h	4259;"	d
GL_ARB_shadow_ambient	.\include\GL\glext.h	4266;"	d
GL_ARB_sparse_buffer	.\include\GL\glext.h	4271;"	d
GL_ARB_sparse_texture	.\include\GL\glext.h	4285;"	d
GL_ARB_sparse_texture2	.\include\GL\glext.h	4304;"	d
GL_ARB_sparse_texture_clamp	.\include\GL\glext.h	4308;"	d
GL_ARB_spirv_extensions	.\include\GL\glext.h	4312;"	d
GL_ARB_stencil_texturing	.\include\GL\glext.h	4316;"	d
GL_ARB_sync	.\include\GL\glext.h	4320;"	d
GL_ARB_tessellation_shader	.\include\GL\glext.h	4324;"	d
GL_ARB_texture_barrier	.\include\GL\glext.h	4328;"	d
GL_ARB_texture_border_clamp	.\include\GL\glext.h	4332;"	d
GL_ARB_texture_buffer_object	.\include\GL\glext.h	4337;"	d
GL_ARB_texture_buffer_object_rgb32	.\include\GL\glext.h	4350;"	d
GL_ARB_texture_buffer_range	.\include\GL\glext.h	4354;"	d
GL_ARB_texture_compression	.\include\GL\glext.h	4358;"	d
GL_ARB_texture_compression_bptc	.\include\GL\glext.h	4389;"	d
GL_ARB_texture_compression_rgtc	.\include\GL\glext.h	4397;"	d
GL_ARB_texture_cube_map	.\include\GL\glext.h	4401;"	d
GL_ARB_texture_cube_map_array	.\include\GL\glext.h	4417;"	d
GL_ARB_texture_env_add	.\include\GL\glext.h	4428;"	d
GL_ARB_texture_env_combine	.\include\GL\glext.h	4432;"	d
GL_ARB_texture_env_crossbar	.\include\GL\glext.h	4458;"	d
GL_ARB_texture_env_dot3	.\include\GL\glext.h	4462;"	d
GL_ARB_texture_filter_anisotropic	.\include\GL\glext.h	4468;"	d
GL_ARB_texture_filter_minmax	.\include\GL\glext.h	4472;"	d
GL_ARB_texture_float	.\include\GL\glext.h	4478;"	d
GL_ARB_texture_gather	.\include\GL\glext.h	4502;"	d
GL_ARB_texture_mirror_clamp_to_edge	.\include\GL\glext.h	4509;"	d
GL_ARB_texture_mirrored_repeat	.\include\GL\glext.h	4513;"	d
GL_ARB_texture_multisample	.\include\GL\glext.h	4518;"	d
GL_ARB_texture_non_power_of_two	.\include\GL\glext.h	4522;"	d
GL_ARB_texture_query_levels	.\include\GL\glext.h	4526;"	d
GL_ARB_texture_query_lod	.\include\GL\glext.h	4530;"	d
GL_ARB_texture_rectangle	.\include\GL\glext.h	4534;"	d
GL_ARB_texture_rg	.\include\GL\glext.h	4542;"	d
GL_ARB_texture_rgb10_a2ui	.\include\GL\glext.h	4546;"	d
GL_ARB_texture_stencil8	.\include\GL\glext.h	4550;"	d
GL_ARB_texture_storage	.\include\GL\glext.h	4554;"	d
GL_ARB_texture_storage_multisample	.\include\GL\glext.h	4558;"	d
GL_ARB_texture_swizzle	.\include\GL\glext.h	4562;"	d
GL_ARB_texture_view	.\include\GL\glext.h	4566;"	d
GL_ARB_timer_query	.\include\GL\glext.h	4570;"	d
GL_ARB_transform_feedback2	.\include\GL\glext.h	4574;"	d
GL_ARB_transform_feedback3	.\include\GL\glext.h	4578;"	d
GL_ARB_transform_feedback_instanced	.\include\GL\glext.h	4582;"	d
GL_ARB_transform_feedback_overflow_query	.\include\GL\glext.h	4586;"	d
GL_ARB_transpose_matrix	.\include\GL\glext.h	4592;"	d
GL_ARB_uniform_buffer_object	.\include\GL\glext.h	4610;"	d
GL_ARB_vertex_array_bgra	.\include\GL\glext.h	4614;"	d
GL_ARB_vertex_array_object	.\include\GL\glext.h	4618;"	d
GL_ARB_vertex_attrib_64bit	.\include\GL\glext.h	4622;"	d
GL_ARB_vertex_attrib_binding	.\include\GL\glext.h	4626;"	d
GL_ARB_vertex_blend	.\include\GL\glext.h	4630;"	d
GL_ARB_vertex_buffer_object	.\include\GL\glext.h	4698;"	d
GL_ARB_vertex_program	.\include\GL\glext.h	4759;"	d
GL_ARB_vertex_shader	.\include\GL\glext.h	4867;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	.\include\GL\glext.h	4886;"	d
GL_ARB_vertex_type_2_10_10_10_rev	.\include\GL\glext.h	4890;"	d
GL_ARB_viewport_array	.\include\GL\glext.h	4894;"	d
GL_ARB_window_pos	.\include\GL\glext.h	4898;"	d
GL_ARC_TO_NV	.\include\GL\glext.h	10426;"	d
GL_ARRAY_BUFFER	.\include\GL\glext.h	477;"	d
GL_ARRAY_BUFFER_ARB	.\include\GL\glext.h	4703;"	d
GL_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	479;"	d
GL_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4705;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	.\include\GL\glext.h	6580;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	.\include\GL\glext.h	6579;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	.\include\GL\glext.h	6301;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	.\include\GL\glext.h	6302;"	d
GL_ARRAY_SIZE	.\include\GL\glext.h	2373;"	d
GL_ARRAY_STRIDE	.\include\GL\glext.h	2376;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	.\include\GL\glext.h	12128;"	d
GL_ASYNC_HISTOGRAM_SGIX	.\include\GL\glext.h	12121;"	d
GL_ASYNC_MARKER_SGIX	.\include\GL\glext.h	12102;"	d
GL_ASYNC_READ_PIXELS_SGIX	.\include\GL\glext.h	12129;"	d
GL_ASYNC_TEX_IMAGE_SGIX	.\include\GL\glext.h	12127;"	d
GL_ATI_draw_buffers	.\include\GL\glext.h	6004;"	d
GL_ATI_element_array	.\include\GL\glext.h	6029;"	d
GL_ATI_envmap_bumpmap	.\include\GL\glext.h	6044;"	d
GL_ATI_fragment_shader	.\include\GL\glext.h	6066;"	d
GL_ATI_map_object_buffer	.\include\GL\glext.h	6204;"	d
GL_ATI_meminfo	.\include\GL\glext.h	6214;"	d
GL_ATI_pixel_format_float	.\include\GL\glext.h	6221;"	d
GL_ATI_pn_triangles	.\include\GL\glext.h	6227;"	d
GL_ATI_separate_stencil	.\include\GL\glext.h	6246;"	d
GL_ATI_text_fragment_shader	.\include\GL\glext.h	6260;"	d
GL_ATI_texture_env_combine3	.\include\GL\glext.h	6265;"	d
GL_ATI_texture_float	.\include\GL\glext.h	6272;"	d
GL_ATI_texture_mirror_once	.\include\GL\glext.h	6288;"	d
GL_ATI_vertex_array_object	.\include\GL\glext.h	6294;"	d
GL_ATI_vertex_attrib_array_object	.\include\GL\glext.h	6332;"	d
GL_ATI_vertex_streams	.\include\GL\glext.h	6344;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	.\include\GL\glext.h	2081;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	.\include\GL\glext.h	8138;"	d
GL_ATOMIC_COUNTER_BUFFER	.\include\GL\glext.h	2041;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	.\include\GL\glext.h	2046;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	.\include\GL\glext.h	2047;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	.\include\GL\glext.h	2042;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	.\include\GL\glext.h	2045;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	.\include\GL\glext.h	2379;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	.\include\GL\glext.h	2199;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	.\include\GL\glext.h	2052;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	.\include\GL\glext.h	2051;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV	.\include\GL\glext.h	10243;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV	.\include\GL\glext.h	10244;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	.\include\GL\glext.h	2049;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	.\include\GL\glext.h	2050;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	.\include\GL\glext.h	2048;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	.\include\GL\glext.h	2044;"	d
GL_ATOMIC_COUNTER_BUFFER_START	.\include\GL\glext.h	2043;"	d
GL_ATTACHED_MEMORY_OBJECT_NV	.\include\GL\glext.h	10177;"	d
GL_ATTACHED_MEMORY_OFFSET_NV	.\include\GL\glext.h	10178;"	d
GL_ATTACHED_SHADERS	.\include\GL\glext.h	631;"	d
GL_ATTENUATION_EXT	.\include\GL\glext.h	7657;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	.\include\GL\glext.h	9531;"	d
GL_ATTRIB_ARRAY_POINTER_NV	.\include\GL\glext.h	11443;"	d
GL_ATTRIB_ARRAY_SIZE_NV	.\include\GL\glext.h	11417;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	.\include\GL\glext.h	11418;"	d
GL_ATTRIB_ARRAY_TYPE_NV	.\include\GL\glext.h	11419;"	d
GL_AUTO_GENERATE_MIPMAP	.\include\GL\glext.h	2288;"	d
GL_AUX_DEPTH_STENCIL_APPLE	.\include\GL\glext.h	5797;"	d
GL_AVERAGE_EXT	.\include\GL\glext.h	7857;"	d
GL_AVERAGE_HP	.\include\GL\glext.h	9002;"	d
GL_BACK_NORMALS_HINT_PGI	.\include\GL\glext.h	11841;"	d
GL_BACK_PRIMARY_COLOR_NV	.\include\GL\glext.h	11165;"	d
GL_BACK_SECONDARY_COLOR_NV	.\include\GL\glext.h	11166;"	d
GL_BEVEL_NV	.\include\GL\glext.h	10373;"	d
GL_BGR	.\include\GL\glext.h	92;"	d
GL_BGRA	.\include\GL\glext.h	93;"	d
GL_BGRA_EXT	.\include\GL\glext.h	6476;"	d
GL_BGRA_INTEGER	.\include\GL\glext.h	956;"	d
GL_BGRA_INTEGER_EXT	.\include\GL\glext.h	8428;"	d
GL_BGR_EXT	.\include\GL\glext.h	6475;"	d
GL_BGR_INTEGER	.\include\GL\glext.h	955;"	d
GL_BGR_INTEGER_EXT	.\include\GL\glext.h	8427;"	d
GL_BIAS_BIT_ATI	.\include\GL\glext.h	6170;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	.\include\GL\glext.h	10746;"	d
GL_BINORMAL_ARRAY_EXT	.\include\GL\glext.h	6644;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	.\include\GL\glext.h	6652;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	.\include\GL\glext.h	6650;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	.\include\GL\glext.h	6649;"	d
GL_BLACKHOLE_RENDER_INTEL	.\include\GL\glext.h	9135;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	.\include\GL\glext.h	4960;"	d
GL_BLEND_ADVANCED_COHERENT_NV	.\include\GL\glext.h	9498;"	d
GL_BLEND_COLOR	.\include\GL\glext.h	358;"	d
GL_BLEND_COLOR_COMMAND_NV	.\include\GL\glext.h	9533;"	d
GL_BLEND_COLOR_EXT	.\include\GL\glext.h	6503;"	d
GL_BLEND_DST_ALPHA	.\include\GL\glext.h	321;"	d
GL_BLEND_DST_ALPHA_EXT	.\include\GL\glext.h	6524;"	d
GL_BLEND_DST_RGB	.\include\GL\glext.h	319;"	d
GL_BLEND_DST_RGB_EXT	.\include\GL\glext.h	6522;"	d
GL_BLEND_EQUATION	.\include\GL\glext.h	359;"	d
GL_BLEND_EQUATION_ALPHA	.\include\GL\glext.h	595;"	d
GL_BLEND_EQUATION_ALPHA_EXT	.\include\GL\glext.h	6513;"	d
GL_BLEND_EQUATION_EXT	.\include\GL\glext.h	6541;"	d
GL_BLEND_EQUATION_RGB	.\include\GL\glext.h	566;"	d
GL_BLEND_EQUATION_RGB_EXT	.\include\GL\glext.h	6512;"	d
GL_BLEND_OVERLAP_NV	.\include\GL\glext.h	9439;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	.\include\GL\glext.h	9440;"	d
GL_BLEND_SRC_ALPHA	.\include\GL\glext.h	322;"	d
GL_BLEND_SRC_ALPHA_EXT	.\include\GL\glext.h	6525;"	d
GL_BLEND_SRC_RGB	.\include\GL\glext.h	320;"	d
GL_BLEND_SRC_RGB_EXT	.\include\GL\glext.h	6523;"	d
GL_BLOCK_INDEX	.\include\GL\glext.h	2375;"	d
GL_BLUE_BIT_ATI	.\include\GL\glext.h	6160;"	d
GL_BLUE_INTEGER	.\include\GL\glext.h	952;"	d
GL_BLUE_INTEGER_EXT	.\include\GL\glext.h	8423;"	d
GL_BLUE_MAX_CLAMP_INGR	.\include\GL\glext.h	9124;"	d
GL_BLUE_MIN_CLAMP_INGR	.\include\GL\glext.h	9120;"	d
GL_BLUE_NV	.\include\GL\glext.h	9441;"	d
GL_BOLD_BIT_NV	.\include\GL\glext.h	10428;"	d
GL_BOOL	.\include\GL\glext.h	613;"	d
GL_BOOL_ARB	.\include\GL\glext.h	4090;"	d
GL_BOOL_VEC2	.\include\GL\glext.h	614;"	d
GL_BOOL_VEC2_ARB	.\include\GL\glext.h	4091;"	d
GL_BOOL_VEC3	.\include\GL\glext.h	615;"	d
GL_BOOL_VEC3_ARB	.\include\GL\glext.h	4092;"	d
GL_BOOL_VEC4	.\include\GL\glext.h	616;"	d
GL_BOOL_VEC4_ARB	.\include\GL\glext.h	4093;"	d
GL_BOUNDING_BOX_NV	.\include\GL\glext.h	10352;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	.\include\GL\glext.h	10363;"	d
GL_BUFFER	.\include\GL\glext.h	2231;"	d
GL_BUFFER_ACCESS	.\include\GL\glext.h	485;"	d
GL_BUFFER_ACCESS_ARB	.\include\GL\glext.h	4720;"	d
GL_BUFFER_ACCESS_FLAGS	.\include\GL\glext.h	981;"	d
GL_BUFFER_BINDING	.\include\GL\glext.h	2380;"	d
GL_BUFFER_DATA_SIZE	.\include\GL\glext.h	2381;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	.\include\GL\glext.h	5869;"	d
GL_BUFFER_GPU_ADDRESS_NV	.\include\GL\glext.h	10878;"	d
GL_BUFFER_IMMUTABLE_STORAGE	.\include\GL\glext.h	2529;"	d
GL_BUFFER_MAPPED	.\include\GL\glext.h	486;"	d
GL_BUFFER_MAPPED_ARB	.\include\GL\glext.h	4721;"	d
GL_BUFFER_MAP_LENGTH	.\include\GL\glext.h	982;"	d
GL_BUFFER_MAP_OFFSET	.\include\GL\glext.h	983;"	d
GL_BUFFER_MAP_POINTER	.\include\GL\glext.h	487;"	d
GL_BUFFER_MAP_POINTER_ARB	.\include\GL\glext.h	4722;"	d
GL_BUFFER_OBJECT_APPLE	.\include\GL\glext.h	5880;"	d
GL_BUFFER_OBJECT_EXT	.\include\GL\glext.h	6739;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	.\include\GL\glext.h	5868;"	d
GL_BUFFER_SIZE	.\include\GL\glext.h	471;"	d
GL_BUFFER_SIZE_ARB	.\include\GL\glext.h	4701;"	d
GL_BUFFER_STORAGE_FLAGS	.\include\GL\glext.h	2530;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	.\include\GL\glext.h	2078;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	.\include\GL\glext.h	8135;"	d
GL_BUFFER_USAGE	.\include\GL\glext.h	472;"	d
GL_BUFFER_USAGE_ARB	.\include\GL\glext.h	4702;"	d
GL_BUFFER_VARIABLE	.\include\GL\glext.h	2352;"	d
GL_BUMP_ENVMAP_ATI	.\include\GL\glext.h	6051;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	.\include\GL\glext.h	6047;"	d
GL_BUMP_ROT_MATRIX_ATI	.\include\GL\glext.h	6045;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	.\include\GL\glext.h	6046;"	d
GL_BUMP_TARGET_ATI	.\include\GL\glext.h	6052;"	d
GL_BUMP_TEX_UNITS_ATI	.\include\GL\glext.h	6048;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	.\include\GL\glext.h	12143;"	d
GL_CAVEAT_SUPPORT	.\include\GL\glext.h	2320;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	.\include\GL\glext.h	10423;"	d
GL_CIRCULAR_CW_ARC_TO_NV	.\include\GL\glext.h	10424;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	.\include\GL\glext.h	10425;"	d
GL_CLAMP_FRAGMENT_COLOR	.\include\GL\glext.h	1119;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	.\include\GL\glext.h	2977;"	d
GL_CLAMP_READ_COLOR	.\include\GL\glext.h	909;"	d
GL_CLAMP_READ_COLOR_ARB	.\include\GL\glext.h	2978;"	d
GL_CLAMP_TO_BORDER	.\include\GL\glext.h	183;"	d
GL_CLAMP_TO_BORDER_ARB	.\include\GL\glext.h	4333;"	d
GL_CLAMP_TO_BORDER_SGIS	.\include\GL\glext.h	12037;"	d
GL_CLAMP_TO_EDGE	.\include\GL\glext.h	96;"	d
GL_CLAMP_TO_EDGE_SGIS	.\include\GL\glext.h	12051;"	d
GL_CLAMP_VERTEX_COLOR	.\include\GL\glext.h	1118;"	d
GL_CLAMP_VERTEX_COLOR_ARB	.\include\GL\glext.h	2976;"	d
GL_CLEAR_BUFFER	.\include\GL\glext.h	2316;"	d
GL_CLEAR_TEXTURE	.\include\GL\glext.h	2531;"	d
GL_CLIENT_ACTIVE_TEXTURE	.\include\GL\glext.h	184;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	.\include\GL\glext.h	3752;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	.\include\GL\glext.h	2528;"	d
GL_CLIENT_STORAGE_BIT	.\include\GL\glext.h	2527;"	d
GL_CLIPPING_INPUT_PRIMITIVES	.\include\GL\glext.h	2849;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	.\include\GL\glext.h	3877;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES	.\include\GL\glext.h	2850;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	.\include\GL\glext.h	3878;"	d
GL_CLIP_DEPTH_MODE	.\include\GL\glext.h	2568;"	d
GL_CLIP_DISTANCE0	.\include\GL\glext.h	885;"	d
GL_CLIP_DISTANCE1	.\include\GL\glext.h	886;"	d
GL_CLIP_DISTANCE2	.\include\GL\glext.h	887;"	d
GL_CLIP_DISTANCE3	.\include\GL\glext.h	888;"	d
GL_CLIP_DISTANCE4	.\include\GL\glext.h	889;"	d
GL_CLIP_DISTANCE5	.\include\GL\glext.h	890;"	d
GL_CLIP_DISTANCE6	.\include\GL\glext.h	891;"	d
GL_CLIP_DISTANCE7	.\include\GL\glext.h	892;"	d
GL_CLIP_DISTANCE_NV	.\include\GL\glext.h	11168;"	d
GL_CLIP_FAR_HINT_PGI	.\include\GL\glext.h	11839;"	d
GL_CLIP_NEAR_HINT_PGI	.\include\GL\glext.h	11838;"	d
GL_CLIP_ORIGIN	.\include\GL\glext.h	2567;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	.\include\GL\glext.h	6556;"	d
GL_CLOSE_PATH_NV	.\include\GL\glext.h	10394;"	d
GL_CMYKA_EXT	.\include\GL\glext.h	6562;"	d
GL_CMYK_EXT	.\include\GL\glext.h	6561;"	d
GL_CND0_ATI	.\include\GL\glext.h	6141;"	d
GL_CND_ATI	.\include\GL\glext.h	6140;"	d
GL_COLOR3_BIT_PGI	.\include\GL\glext.h	11854;"	d
GL_COLOR4_BIT_PGI	.\include\GL\glext.h	11855;"	d
GL_COLORBURN_KHR	.\include\GL\glext.h	4943;"	d
GL_COLORBURN_NV	.\include\GL\glext.h	9442;"	d
GL_COLORDODGE_KHR	.\include\GL\glext.h	4942;"	d
GL_COLORDODGE_NV	.\include\GL\glext.h	9443;"	d
GL_COLOR_ALPHA_PAIRING_ATI	.\include\GL\glext.h	6151;"	d
GL_COLOR_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11365;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	501;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4709;"	d
GL_COLOR_ARRAY_COUNT_EXT	.\include\GL\glext.h	8627;"	d
GL_COLOR_ARRAY_EXT	.\include\GL\glext.h	8613;"	d
GL_COLOR_ARRAY_LENGTH_NV	.\include\GL\glext.h	11375;"	d
GL_COLOR_ARRAY_LIST_IBM	.\include\GL\glext.h	9074;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9082;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	.\include\GL\glext.h	9176;"	d
GL_COLOR_ARRAY_POINTER_EXT	.\include\GL\glext.h	8639;"	d
GL_COLOR_ARRAY_SIZE_EXT	.\include\GL\glext.h	8624;"	d
GL_COLOR_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8626;"	d
GL_COLOR_ARRAY_TYPE_EXT	.\include\GL\glext.h	8625;"	d
GL_COLOR_ATTACHMENT0	.\include\GL\glext.h	1029;"	d
GL_COLOR_ATTACHMENT0_EXT	.\include\GL\glext.h	7403;"	d
GL_COLOR_ATTACHMENT1	.\include\GL\glext.h	1030;"	d
GL_COLOR_ATTACHMENT10	.\include\GL\glext.h	1039;"	d
GL_COLOR_ATTACHMENT10_EXT	.\include\GL\glext.h	7413;"	d
GL_COLOR_ATTACHMENT11	.\include\GL\glext.h	1040;"	d
GL_COLOR_ATTACHMENT11_EXT	.\include\GL\glext.h	7414;"	d
GL_COLOR_ATTACHMENT12	.\include\GL\glext.h	1041;"	d
GL_COLOR_ATTACHMENT12_EXT	.\include\GL\glext.h	7415;"	d
GL_COLOR_ATTACHMENT13	.\include\GL\glext.h	1042;"	d
GL_COLOR_ATTACHMENT13_EXT	.\include\GL\glext.h	7416;"	d
GL_COLOR_ATTACHMENT14	.\include\GL\glext.h	1043;"	d
GL_COLOR_ATTACHMENT14_EXT	.\include\GL\glext.h	7417;"	d
GL_COLOR_ATTACHMENT15	.\include\GL\glext.h	1044;"	d
GL_COLOR_ATTACHMENT15_EXT	.\include\GL\glext.h	7418;"	d
GL_COLOR_ATTACHMENT16	.\include\GL\glext.h	1045;"	d
GL_COLOR_ATTACHMENT17	.\include\GL\glext.h	1046;"	d
GL_COLOR_ATTACHMENT18	.\include\GL\glext.h	1047;"	d
GL_COLOR_ATTACHMENT19	.\include\GL\glext.h	1048;"	d
GL_COLOR_ATTACHMENT1_EXT	.\include\GL\glext.h	7404;"	d
GL_COLOR_ATTACHMENT2	.\include\GL\glext.h	1031;"	d
GL_COLOR_ATTACHMENT20	.\include\GL\glext.h	1049;"	d
GL_COLOR_ATTACHMENT21	.\include\GL\glext.h	1050;"	d
GL_COLOR_ATTACHMENT22	.\include\GL\glext.h	1051;"	d
GL_COLOR_ATTACHMENT23	.\include\GL\glext.h	1052;"	d
GL_COLOR_ATTACHMENT24	.\include\GL\glext.h	1053;"	d
GL_COLOR_ATTACHMENT25	.\include\GL\glext.h	1054;"	d
GL_COLOR_ATTACHMENT26	.\include\GL\glext.h	1055;"	d
GL_COLOR_ATTACHMENT27	.\include\GL\glext.h	1056;"	d
GL_COLOR_ATTACHMENT28	.\include\GL\glext.h	1057;"	d
GL_COLOR_ATTACHMENT29	.\include\GL\glext.h	1058;"	d
GL_COLOR_ATTACHMENT2_EXT	.\include\GL\glext.h	7405;"	d
GL_COLOR_ATTACHMENT3	.\include\GL\glext.h	1032;"	d
GL_COLOR_ATTACHMENT30	.\include\GL\glext.h	1059;"	d
GL_COLOR_ATTACHMENT31	.\include\GL\glext.h	1060;"	d
GL_COLOR_ATTACHMENT3_EXT	.\include\GL\glext.h	7406;"	d
GL_COLOR_ATTACHMENT4	.\include\GL\glext.h	1033;"	d
GL_COLOR_ATTACHMENT4_EXT	.\include\GL\glext.h	7407;"	d
GL_COLOR_ATTACHMENT5	.\include\GL\glext.h	1034;"	d
GL_COLOR_ATTACHMENT5_EXT	.\include\GL\glext.h	7408;"	d
GL_COLOR_ATTACHMENT6	.\include\GL\glext.h	1035;"	d
GL_COLOR_ATTACHMENT6_EXT	.\include\GL\glext.h	7409;"	d
GL_COLOR_ATTACHMENT7	.\include\GL\glext.h	1036;"	d
GL_COLOR_ATTACHMENT7_EXT	.\include\GL\glext.h	7410;"	d
GL_COLOR_ATTACHMENT8	.\include\GL\glext.h	1037;"	d
GL_COLOR_ATTACHMENT8_EXT	.\include\GL\glext.h	7411;"	d
GL_COLOR_ATTACHMENT9	.\include\GL\glext.h	1038;"	d
GL_COLOR_ATTACHMENT9_EXT	.\include\GL\glext.h	7412;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	.\include\GL\glext.h	6223;"	d
GL_COLOR_COMPONENTS	.\include\GL\glext.h	2270;"	d
GL_COLOR_ENCODING	.\include\GL\glext.h	2289;"	d
GL_COLOR_FLOAT_APPLE	.\include\GL\glext.h	5863;"	d
GL_COLOR_INDEX12_EXT	.\include\GL\glext.h	7827;"	d
GL_COLOR_INDEX16_EXT	.\include\GL\glext.h	7828;"	d
GL_COLOR_INDEX1_EXT	.\include\GL\glext.h	7823;"	d
GL_COLOR_INDEX2_EXT	.\include\GL\glext.h	7824;"	d
GL_COLOR_INDEX4_EXT	.\include\GL\glext.h	7825;"	d
GL_COLOR_INDEX8_EXT	.\include\GL\glext.h	7826;"	d
GL_COLOR_MATRIX	.\include\GL\glext.h	3507;"	d
GL_COLOR_MATRIX_SGI	.\include\GL\glext.h	12495;"	d
GL_COLOR_MATRIX_STACK_DEPTH	.\include\GL\glext.h	3508;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	.\include\GL\glext.h	12496;"	d
GL_COLOR_RENDERABLE	.\include\GL\glext.h	2273;"	d
GL_COLOR_SAMPLES_NV	.\include\GL\glext.h	9898;"	d
GL_COLOR_SUM	.\include\GL\glext.h	348;"	d
GL_COLOR_SUM_ARB	.\include\GL\glext.h	4760;"	d
GL_COLOR_SUM_CLAMP_NV	.\include\GL\glext.h	10760;"	d
GL_COLOR_SUM_EXT	.\include\GL\glext.h	7952;"	d
GL_COLOR_TABLE	.\include\GL\glext.h	3518;"	d
GL_COLOR_TABLE_ALPHA_SIZE	.\include\GL\glext.h	3531;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	.\include\GL\glext.h	12523;"	d
GL_COLOR_TABLE_BIAS	.\include\GL\glext.h	3525;"	d
GL_COLOR_TABLE_BIAS_SGI	.\include\GL\glext.h	12517;"	d
GL_COLOR_TABLE_BLUE_SIZE	.\include\GL\glext.h	3530;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	.\include\GL\glext.h	12522;"	d
GL_COLOR_TABLE_FORMAT	.\include\GL\glext.h	3526;"	d
GL_COLOR_TABLE_FORMAT_SGI	.\include\GL\glext.h	12518;"	d
GL_COLOR_TABLE_GREEN_SIZE	.\include\GL\glext.h	3529;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	.\include\GL\glext.h	12521;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	.\include\GL\glext.h	3533;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	.\include\GL\glext.h	12525;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	.\include\GL\glext.h	3532;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	.\include\GL\glext.h	12524;"	d
GL_COLOR_TABLE_RED_SIZE	.\include\GL\glext.h	3528;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	.\include\GL\glext.h	12520;"	d
GL_COLOR_TABLE_SCALE	.\include\GL\glext.h	3524;"	d
GL_COLOR_TABLE_SCALE_SGI	.\include\GL\glext.h	12516;"	d
GL_COLOR_TABLE_SGI	.\include\GL\glext.h	12510;"	d
GL_COLOR_TABLE_WIDTH	.\include\GL\glext.h	3527;"	d
GL_COLOR_TABLE_WIDTH_SGI	.\include\GL\glext.h	12519;"	d
GL_COMBINE	.\include\GL\glext.h	197;"	d
GL_COMBINE4_NV	.\include\GL\glext.h	11016;"	d
GL_COMBINER0_NV	.\include\GL\glext.h	10761;"	d
GL_COMBINER1_NV	.\include\GL\glext.h	10762;"	d
GL_COMBINER2_NV	.\include\GL\glext.h	10763;"	d
GL_COMBINER3_NV	.\include\GL\glext.h	10764;"	d
GL_COMBINER4_NV	.\include\GL\glext.h	10765;"	d
GL_COMBINER5_NV	.\include\GL\glext.h	10766;"	d
GL_COMBINER6_NV	.\include\GL\glext.h	10767;"	d
GL_COMBINER7_NV	.\include\GL\glext.h	10768;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	.\include\GL\glext.h	10750;"	d
GL_COMBINER_AB_OUTPUT_NV	.\include\GL\glext.h	10755;"	d
GL_COMBINER_BIAS_NV	.\include\GL\glext.h	10754;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	.\include\GL\glext.h	10751;"	d
GL_COMBINER_CD_OUTPUT_NV	.\include\GL\glext.h	10756;"	d
GL_COMBINER_COMPONENT_USAGE_NV	.\include\GL\glext.h	10749;"	d
GL_COMBINER_INPUT_NV	.\include\GL\glext.h	10747;"	d
GL_COMBINER_MAPPING_NV	.\include\GL\glext.h	10748;"	d
GL_COMBINER_MUX_SUM_NV	.\include\GL\glext.h	10752;"	d
GL_COMBINER_SCALE_NV	.\include\GL\glext.h	10753;"	d
GL_COMBINER_SUM_OUTPUT_NV	.\include\GL\glext.h	10757;"	d
GL_COMBINE_ALPHA	.\include\GL\glext.h	199;"	d
GL_COMBINE_ALPHA_ARB	.\include\GL\glext.h	4435;"	d
GL_COMBINE_ALPHA_EXT	.\include\GL\glext.h	8344;"	d
GL_COMBINE_ARB	.\include\GL\glext.h	4433;"	d
GL_COMBINE_EXT	.\include\GL\glext.h	8342;"	d
GL_COMBINE_RGB	.\include\GL\glext.h	198;"	d
GL_COMBINE_RGB_ARB	.\include\GL\glext.h	4434;"	d
GL_COMBINE_RGB_EXT	.\include\GL\glext.h	8343;"	d
GL_COMMAND_BARRIER_BIT	.\include\GL\glext.h	2075;"	d
GL_COMMAND_BARRIER_BIT_EXT	.\include\GL\glext.h	8132;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	.\include\GL\glext.h	8276;"	d
GL_COMPARE_REF_TO_TEXTURE	.\include\GL\glext.h	884;"	d
GL_COMPARE_R_TO_TEXTURE	.\include\GL\glext.h	357;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	.\include\GL\glext.h	4262;"	d
GL_COMPATIBLE_SUBROUTINES	.\include\GL\glext.h	1674;"	d
GL_COMPILE_STATUS	.\include\GL\glext.h	627;"	d
GL_COMPLETION_STATUS_ARB	.\include\GL\glext.h	3860;"	d
GL_COMPLETION_STATUS_KHR	.\include\GL\glext.h	4979;"	d
GL_COMPRESSED_ALPHA	.\include\GL\glext.h	193;"	d
GL_COMPRESSED_ALPHA_ARB	.\include\GL\glext.h	4359;"	d
GL_COMPRESSED_INTENSITY	.\include\GL\glext.h	196;"	d
GL_COMPRESSED_INTENSITY_ARB	.\include\GL\glext.h	4362;"	d
GL_COMPRESSED_LUMINANCE	.\include\GL\glext.h	194;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	.\include\GL\glext.h	195;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	.\include\GL\glext.h	4361;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	.\include\GL\glext.h	8300;"	d
GL_COMPRESSED_LUMINANCE_ARB	.\include\GL\glext.h	4360;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	.\include\GL\glext.h	8298;"	d
GL_COMPRESSED_R11_EAC	.\include\GL\glext.h	2178;"	d
GL_COMPRESSED_RED	.\include\GL\glext.h	898;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	.\include\GL\glext.h	8308;"	d
GL_COMPRESSED_RED_RGTC1	.\include\GL\glext.h	1091;"	d
GL_COMPRESSED_RED_RGTC1_EXT	.\include\GL\glext.h	8306;"	d
GL_COMPRESSED_RG	.\include\GL\glext.h	899;"	d
GL_COMPRESSED_RG11_EAC	.\include\GL\glext.h	2180;"	d
GL_COMPRESSED_RGB	.\include\GL\glext.h	176;"	d
GL_COMPRESSED_RGB8_ETC2	.\include\GL\glext.h	2172;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	.\include\GL\glext.h	2174;"	d
GL_COMPRESSED_RGBA	.\include\GL\glext.h	177;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	.\include\GL\glext.h	2176;"	d
GL_COMPRESSED_RGBA_ARB	.\include\GL\glext.h	4364;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	.\include\GL\glext.h	5008;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	.\include\GL\glext.h	5005;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	.\include\GL\glext.h	5006;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	.\include\GL\glext.h	5007;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	.\include\GL\glext.h	5009;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	.\include\GL\glext.h	5010;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	.\include\GL\glext.h	4997;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	.\include\GL\glext.h	4998;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	.\include\GL\glext.h	4999;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	.\include\GL\glext.h	5000;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	.\include\GL\glext.h	5001;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	.\include\GL\glext.h	5002;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	.\include\GL\glext.h	5003;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	.\include\GL\glext.h	5004;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	.\include\GL\glext.h	2134;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	.\include\GL\glext.h	4390;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	.\include\GL\glext.h	5364;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	.\include\GL\glext.h	8315;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	.\include\GL\glext.h	8316;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	.\include\GL\glext.h	8317;"	d
GL_COMPRESSED_RGB_ARB	.\include\GL\glext.h	4363;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	.\include\GL\glext.h	2136;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	.\include\GL\glext.h	4392;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	.\include\GL\glext.h	2137;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	.\include\GL\glext.h	4393;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	.\include\GL\glext.h	5363;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	.\include\GL\glext.h	8314;"	d
GL_COMPRESSED_RG_RGTC2	.\include\GL\glext.h	1093;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	.\include\GL\glext.h	8301;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	.\include\GL\glext.h	8299;"	d
GL_COMPRESSED_SIGNED_R11_EAC	.\include\GL\glext.h	2179;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	.\include\GL\glext.h	8309;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	.\include\GL\glext.h	1092;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	.\include\GL\glext.h	8307;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	.\include\GL\glext.h	2181;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	.\include\GL\glext.h	1094;"	d
GL_COMPRESSED_SLUMINANCE	.\include\GL\glext.h	863;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	.\include\GL\glext.h	864;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	.\include\GL\glext.h	8508;"	d
GL_COMPRESSED_SLUMINANCE_EXT	.\include\GL\glext.h	8507;"	d
GL_COMPRESSED_SRGB	.\include\GL\glext.h	856;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	.\include\GL\glext.h	5022;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	.\include\GL\glext.h	5019;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	.\include\GL\glext.h	5020;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	.\include\GL\glext.h	5021;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	.\include\GL\glext.h	5023;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	.\include\GL\glext.h	5024;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	.\include\GL\glext.h	5011;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	.\include\GL\glext.h	5012;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	.\include\GL\glext.h	5013;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	.\include\GL\glext.h	5014;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	.\include\GL\glext.h	5015;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	.\include\GL\glext.h	5016;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	.\include\GL\glext.h	5017;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	.\include\GL\glext.h	5018;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	.\include\GL\glext.h	2177;"	d
GL_COMPRESSED_SRGB8_ETC2	.\include\GL\glext.h	2173;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	.\include\GL\glext.h	2175;"	d
GL_COMPRESSED_SRGB_ALPHA	.\include\GL\glext.h	857;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	.\include\GL\glext.h	2135;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	.\include\GL\glext.h	4391;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	.\include\GL\glext.h	8506;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	.\include\GL\glext.h	8510;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	.\include\GL\glext.h	8511;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	.\include\GL\glext.h	8512;"	d
GL_COMPRESSED_SRGB_EXT	.\include\GL\glext.h	8505;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	.\include\GL\glext.h	8509;"	d
GL_COMPRESSED_TEXTURE_FORMATS	.\include\GL\glext.h	182;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	.\include\GL\glext.h	4369;"	d
GL_COMPUTE_PROGRAM_NV	.\include\GL\glext.h	9581;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	9582;"	d
GL_COMPUTE_SHADER	.\include\GL\glext.h	2185;"	d
GL_COMPUTE_SHADER_BIT	.\include\GL\glext.h	2202;"	d
GL_COMPUTE_SHADER_INVOCATIONS	.\include\GL\glext.h	2848;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	.\include\GL\glext.h	3876;"	d
GL_COMPUTE_SUBROUTINE	.\include\GL\glext.h	2359;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2365;"	d
GL_COMPUTE_TEXTURE	.\include\GL\glext.h	2298;"	d
GL_COMPUTE_WORK_GROUP_SIZE	.\include\GL\glext.h	2197;"	d
GL_COMP_BIT_ATI	.\include\GL\glext.h	6168;"	d
GL_CONDITION_SATISFIED	.\include\GL\glext.h	1428;"	d
GL_CONFORMANT_NV	.\include\GL\glext.h	10162;"	d
GL_CONIC_CURVE_TO_NV	.\include\GL\glext.h	10465;"	d
GL_CONJOINT_NV	.\include\GL\glext.h	9444;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	.\include\GL\glext.h	9140;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	.\include\GL\glext.h	9605;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	.\include\GL\glext.h	9619;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	.\include\GL\glext.h	9617;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	.\include\GL\glext.h	9618;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	.\include\GL\glext.h	9633;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	.\include\GL\glext.h	9634;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV	.\include\GL\glext.h	9628;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	.\include\GL\glext.h	9635;"	d
GL_CONSERVE_MEMORY_HINT_PGI	.\include\GL\glext.h	11823;"	d
GL_CONSTANT	.\include\GL\glext.h	216;"	d
GL_CONSTANT_ALPHA	.\include\GL\glext.h	362;"	d
GL_CONSTANT_ALPHA_EXT	.\include\GL\glext.h	6501;"	d
GL_CONSTANT_ARB	.\include\GL\glext.h	4452;"	d
GL_CONSTANT_BORDER	.\include\GL\glext.h	3534;"	d
GL_CONSTANT_BORDER_HP	.\include\GL\glext.h	8984;"	d
GL_CONSTANT_COLOR	.\include\GL\glext.h	360;"	d
GL_CONSTANT_COLOR0_NV	.\include\GL\glext.h	10728;"	d
GL_CONSTANT_COLOR1_NV	.\include\GL\glext.h	10729;"	d
GL_CONSTANT_COLOR_EXT	.\include\GL\glext.h	6499;"	d
GL_CONSTANT_EXT	.\include\GL\glext.h	8348;"	d
GL_CONSTANT_NV	.\include\GL\glext.h	10474;"	d
GL_CONST_EYE_NV	.\include\GL\glext.h	11080;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	.\include\GL\glext.h	1390;"	d
GL_CONTEXT_CORE_PROFILE_BIT	.\include\GL\glext.h	1389;"	d
GL_CONTEXT_FLAGS	.\include\GL\glext.h	897;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	.\include\GL\glext.h	2239;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	.\include\GL\glext.h	900;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT	.\include\GL\glext.h	2840;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	.\include\GL\glext.h	4973;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	.\include\GL\glext.h	2583;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	.\include\GL\glext.h	3935;"	d
GL_CONTEXT_LOST	.\include\GL\glext.h	2564;"	d
GL_CONTEXT_PROFILE_MASK	.\include\GL\glext.h	1410;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	.\include\GL\glext.h	2584;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	.\include\GL\glext.h	2585;"	d
GL_CONTEXT_ROBUST_ACCESS	.\include\GL\glext.h	4992;"	d
GL_CONTINUOUS_AMD	.\include\GL\glext.h	5782;"	d
GL_CONTRAST_NV	.\include\GL\glext.h	9445;"	d
GL_CONVEX_HULL_NV	.\include\GL\glext.h	10351;"	d
GL_CONVOLUTION_1D	.\include\GL\glext.h	3473;"	d
GL_CONVOLUTION_1D_EXT	.\include\GL\glext.h	6591;"	d
GL_CONVOLUTION_2D	.\include\GL\glext.h	3474;"	d
GL_CONVOLUTION_2D_EXT	.\include\GL\glext.h	6592;"	d
GL_CONVOLUTION_BORDER_COLOR	.\include\GL\glext.h	3536;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	.\include\GL\glext.h	8986;"	d
GL_CONVOLUTION_BORDER_MODE	.\include\GL\glext.h	3476;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	.\include\GL\glext.h	6594;"	d
GL_CONVOLUTION_FILTER_BIAS	.\include\GL\glext.h	3478;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	.\include\GL\glext.h	6596;"	d
GL_CONVOLUTION_FILTER_SCALE	.\include\GL\glext.h	3477;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	.\include\GL\glext.h	6595;"	d
GL_CONVOLUTION_FORMAT	.\include\GL\glext.h	3480;"	d
GL_CONVOLUTION_FORMAT_EXT	.\include\GL\glext.h	6598;"	d
GL_CONVOLUTION_HEIGHT	.\include\GL\glext.h	3482;"	d
GL_CONVOLUTION_HEIGHT_EXT	.\include\GL\glext.h	6600;"	d
GL_CONVOLUTION_HINT_SGIX	.\include\GL\glext.h	12164;"	d
GL_CONVOLUTION_WIDTH	.\include\GL\glext.h	3481;"	d
GL_CONVOLUTION_WIDTH_EXT	.\include\GL\glext.h	6599;"	d
GL_CON_0_ATI	.\include\GL\glext.h	6100;"	d
GL_CON_10_ATI	.\include\GL\glext.h	6110;"	d
GL_CON_11_ATI	.\include\GL\glext.h	6111;"	d
GL_CON_12_ATI	.\include\GL\glext.h	6112;"	d
GL_CON_13_ATI	.\include\GL\glext.h	6113;"	d
GL_CON_14_ATI	.\include\GL\glext.h	6114;"	d
GL_CON_15_ATI	.\include\GL\glext.h	6115;"	d
GL_CON_16_ATI	.\include\GL\glext.h	6116;"	d
GL_CON_17_ATI	.\include\GL\glext.h	6117;"	d
GL_CON_18_ATI	.\include\GL\glext.h	6118;"	d
GL_CON_19_ATI	.\include\GL\glext.h	6119;"	d
GL_CON_1_ATI	.\include\GL\glext.h	6101;"	d
GL_CON_20_ATI	.\include\GL\glext.h	6120;"	d
GL_CON_21_ATI	.\include\GL\glext.h	6121;"	d
GL_CON_22_ATI	.\include\GL\glext.h	6122;"	d
GL_CON_23_ATI	.\include\GL\glext.h	6123;"	d
GL_CON_24_ATI	.\include\GL\glext.h	6124;"	d
GL_CON_25_ATI	.\include\GL\glext.h	6125;"	d
GL_CON_26_ATI	.\include\GL\glext.h	6126;"	d
GL_CON_27_ATI	.\include\GL\glext.h	6127;"	d
GL_CON_28_ATI	.\include\GL\glext.h	6128;"	d
GL_CON_29_ATI	.\include\GL\glext.h	6129;"	d
GL_CON_2_ATI	.\include\GL\glext.h	6102;"	d
GL_CON_30_ATI	.\include\GL\glext.h	6130;"	d
GL_CON_31_ATI	.\include\GL\glext.h	6131;"	d
GL_CON_3_ATI	.\include\GL\glext.h	6103;"	d
GL_CON_4_ATI	.\include\GL\glext.h	6104;"	d
GL_CON_5_ATI	.\include\GL\glext.h	6105;"	d
GL_CON_6_ATI	.\include\GL\glext.h	6106;"	d
GL_CON_7_ATI	.\include\GL\glext.h	6107;"	d
GL_CON_8_ATI	.\include\GL\glext.h	6108;"	d
GL_CON_9_ATI	.\include\GL\glext.h	6109;"	d
GL_COORD_REPLACE	.\include\GL\glext.h	648;"	d
GL_COORD_REPLACE_ARB	.\include\GL\glext.h	3906;"	d
GL_COORD_REPLACE_NV	.\include\GL\glext.h	10646;"	d
GL_COPY_READ_BUFFER	.\include\GL\glext.h	1321;"	d
GL_COPY_READ_BUFFER_BINDING	.\include\GL\glext.h	2027;"	d
GL_COPY_WRITE_BUFFER	.\include\GL\glext.h	1322;"	d
GL_COPY_WRITE_BUFFER_BINDING	.\include\GL\glext.h	2028;"	d
GL_COUNTER_RANGE_AMD	.\include\GL\glext.h	5638;"	d
GL_COUNTER_TYPE_AMD	.\include\GL\glext.h	5637;"	d
GL_COUNT_DOWN_NV	.\include\GL\glext.h	10349;"	d
GL_COUNT_UP_NV	.\include\GL\glext.h	10348;"	d
GL_COVERAGE_MODULATION_NV	.\include\GL\glext.h	9903;"	d
GL_COVERAGE_MODULATION_TABLE_NV	.\include\GL\glext.h	9897;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	.\include\GL\glext.h	9904;"	d
GL_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10405;"	d
GL_CUBIC_EXT	.\include\GL\glext.h	7856;"	d
GL_CUBIC_HP	.\include\GL\glext.h	9001;"	d
GL_CULL_FRAGMENT_NV	.\include\GL\glext.h	11082;"	d
GL_CULL_MODES_NV	.\include\GL\glext.h	11072;"	d
GL_CULL_VERTEX_EXT	.\include\GL\glext.h	6723;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	.\include\GL\glext.h	6724;"	d
GL_CULL_VERTEX_IBM	.\include\GL\glext.h	9037;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	.\include\GL\glext.h	6725;"	d
GL_CURRENT_ATTRIB_NV	.\include\GL\glext.h	11420;"	d
GL_CURRENT_BINORMAL_EXT	.\include\GL\glext.h	6646;"	d
GL_CURRENT_FOG_COORD	.\include\GL\glext.h	510;"	d
GL_CURRENT_FOG_COORDINATE	.\include\GL\glext.h	343;"	d
GL_CURRENT_FOG_COORDINATE_EXT	.\include\GL\glext.h	7335;"	d
GL_CURRENT_MATRIX_ARB	.\include\GL\glext.h	3209;"	d
GL_CURRENT_MATRIX_INDEX_ARB	.\include\GL\glext.h	3673;"	d
GL_CURRENT_MATRIX_NV	.\include\GL\glext.h	11439;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	.\include\GL\glext.h	3211;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	.\include\GL\glext.h	11438;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	.\include\GL\glext.h	10277;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	.\include\GL\glext.h	3671;"	d
GL_CURRENT_PROGRAM	.\include\GL\glext.h	639;"	d
GL_CURRENT_QUERY	.\include\GL\glext.h	474;"	d
GL_CURRENT_QUERY_ARB	.\include\GL\glext.h	3829;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	.\include\GL\glext.h	12200;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	.\include\GL\glext.h	858;"	d
GL_CURRENT_SECONDARY_COLOR	.\include\GL\glext.h	349;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	.\include\GL\glext.h	7953;"	d
GL_CURRENT_TANGENT_EXT	.\include\GL\glext.h	6645;"	d
GL_CURRENT_TIME_NV	.\include\GL\glext.h	10660;"	d
GL_CURRENT_VERTEX_ATTRIB	.\include\GL\glext.h	571;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	.\include\GL\glext.h	4766;"	d
GL_CURRENT_VERTEX_EXT	.\include\GL\glext.h	8807;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	.\include\GL\glext.h	8916;"	d
GL_CURRENT_WEIGHT_ARB	.\include\GL\glext.h	4635;"	d
GL_D3D12_FENCE_VALUE_EXT	.\include\GL\glext.h	8037;"	d
GL_DARKEN_KHR	.\include\GL\glext.h	4940;"	d
GL_DARKEN_NV	.\include\GL\glext.h	9446;"	d
GL_DATA_BUFFER_AMD	.\include\GL\glext.h	5606;"	d
GL_DEBUG_CALLBACK_FUNCTION	.\include\GL\glext.h	2205;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	.\include\GL\glext.h	3035;"	d
GL_DEBUG_CALLBACK_USER_PARAM	.\include\GL\glext.h	2206;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	.\include\GL\glext.h	3036;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	.\include\GL\glext.h	5386;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	.\include\GL\glext.h	5392;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	.\include\GL\glext.h	5388;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	.\include\GL\glext.h	5393;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	.\include\GL\glext.h	5390;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	.\include\GL\glext.h	5391;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	.\include\GL\glext.h	5389;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	.\include\GL\glext.h	5387;"	d
GL_DEBUG_GROUP_STACK_DEPTH	.\include\GL\glext.h	2230;"	d
GL_DEBUG_LOGGED_MESSAGES	.\include\GL\glext.h	2221;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	.\include\GL\glext.h	5382;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	.\include\GL\glext.h	3051;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	.\include\GL\glext.h	2204;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	.\include\GL\glext.h	3034;"	d
GL_DEBUG_OUTPUT	.\include\GL\glext.h	2238;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	.\include\GL\glext.h	2203;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	.\include\GL\glext.h	3033;"	d
GL_DEBUG_SEVERITY_HIGH	.\include\GL\glext.h	2222;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	.\include\GL\glext.h	5383;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	.\include\GL\glext.h	3052;"	d
GL_DEBUG_SEVERITY_LOW	.\include\GL\glext.h	2224;"	d
GL_DEBUG_SEVERITY_LOW_AMD	.\include\GL\glext.h	5385;"	d
GL_DEBUG_SEVERITY_LOW_ARB	.\include\GL\glext.h	3054;"	d
GL_DEBUG_SEVERITY_MEDIUM	.\include\GL\glext.h	2223;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	.\include\GL\glext.h	5384;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	.\include\GL\glext.h	3053;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	.\include\GL\glext.h	2228;"	d
GL_DEBUG_SOURCE_API	.\include\GL\glext.h	2207;"	d
GL_DEBUG_SOURCE_API_ARB	.\include\GL\glext.h	3037;"	d
GL_DEBUG_SOURCE_APPLICATION	.\include\GL\glext.h	2211;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	.\include\GL\glext.h	3041;"	d
GL_DEBUG_SOURCE_OTHER	.\include\GL\glext.h	2212;"	d
GL_DEBUG_SOURCE_OTHER_ARB	.\include\GL\glext.h	3042;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	.\include\GL\glext.h	2209;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	.\include\GL\glext.h	3039;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	.\include\GL\glext.h	2210;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	.\include\GL\glext.h	3040;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	.\include\GL\glext.h	2208;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	.\include\GL\glext.h	3038;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	.\include\GL\glext.h	2214;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	.\include\GL\glext.h	3044;"	d
GL_DEBUG_TYPE_ERROR	.\include\GL\glext.h	2213;"	d
GL_DEBUG_TYPE_ERROR_ARB	.\include\GL\glext.h	3043;"	d
GL_DEBUG_TYPE_MARKER	.\include\GL\glext.h	2225;"	d
GL_DEBUG_TYPE_OTHER	.\include\GL\glext.h	2218;"	d
GL_DEBUG_TYPE_OTHER_ARB	.\include\GL\glext.h	3048;"	d
GL_DEBUG_TYPE_PERFORMANCE	.\include\GL\glext.h	2217;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	.\include\GL\glext.h	3047;"	d
GL_DEBUG_TYPE_POP_GROUP	.\include\GL\glext.h	2227;"	d
GL_DEBUG_TYPE_PORTABILITY	.\include\GL\glext.h	2216;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	.\include\GL\glext.h	3046;"	d
GL_DEBUG_TYPE_PUSH_GROUP	.\include\GL\glext.h	2226;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	.\include\GL\glext.h	2215;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	.\include\GL\glext.h	3045;"	d
GL_DECODE_EXT	.\include\GL\glext.h	8523;"	d
GL_DECR_WRAP	.\include\GL\glext.h	331;"	d
GL_DECR_WRAP_EXT	.\include\GL\glext.h	8188;"	d
GL_DEDICATED_MEMORY_OBJECT_EXT	.\include\GL\glext.h	7676;"	d
GL_DEFORMATIONS_MASK_SGIX	.\include\GL\glext.h	12350;"	d
GL_DELETE_STATUS	.\include\GL\glext.h	626;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	.\include\GL\glext.h	11084;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	.\include\GL\glext.h	11085;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	.\include\GL\glext.h	11152;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	.\include\GL\glext.h	11153;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	.\include\GL\glext.h	11154;"	d
GL_DEPTH24_STENCIL8	.\include\GL\glext.h	1002;"	d
GL_DEPTH24_STENCIL8_EXT	.\include\GL\glext.h	7801;"	d
GL_DEPTH32F_STENCIL8	.\include\GL\glext.h	985;"	d
GL_DEPTH32F_STENCIL8_NV	.\include\GL\glext.h	9669;"	d
GL_DEPTH_ATTACHMENT	.\include\GL\glext.h	1061;"	d
GL_DEPTH_ATTACHMENT_EXT	.\include\GL\glext.h	7419;"	d
GL_DEPTH_BOUNDS_EXT	.\include\GL\glext.h	6765;"	d
GL_DEPTH_BOUNDS_TEST_EXT	.\include\GL\glext.h	6764;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	.\include\GL\glext.h	9671;"	d
GL_DEPTH_CLAMP	.\include\GL\glext.h	1411;"	d
GL_DEPTH_CLAMP_FAR_AMD	.\include\GL\glext.h	5409;"	d
GL_DEPTH_CLAMP_NEAR_AMD	.\include\GL\glext.h	5408;"	d
GL_DEPTH_CLAMP_NV	.\include\GL\glext.h	9684;"	d
GL_DEPTH_COMPONENT16	.\include\GL\glext.h	324;"	d
GL_DEPTH_COMPONENT16_ARB	.\include\GL\glext.h	3077;"	d
GL_DEPTH_COMPONENT16_SGIX	.\include\GL\glext.h	12173;"	d
GL_DEPTH_COMPONENT24	.\include\GL\glext.h	325;"	d
GL_DEPTH_COMPONENT24_ARB	.\include\GL\glext.h	3078;"	d
GL_DEPTH_COMPONENT24_SGIX	.\include\GL\glext.h	12174;"	d
GL_DEPTH_COMPONENT32	.\include\GL\glext.h	326;"	d
GL_DEPTH_COMPONENT32F	.\include\GL\glext.h	984;"	d
GL_DEPTH_COMPONENT32F_NV	.\include\GL\glext.h	9668;"	d
GL_DEPTH_COMPONENT32_ARB	.\include\GL\glext.h	3079;"	d
GL_DEPTH_COMPONENT32_SGIX	.\include\GL\glext.h	12175;"	d
GL_DEPTH_COMPONENTS	.\include\GL\glext.h	2271;"	d
GL_DEPTH_RENDERABLE	.\include\GL\glext.h	2274;"	d
GL_DEPTH_SAMPLES_NV	.\include\GL\glext.h	9899;"	d
GL_DEPTH_STENCIL	.\include\GL\glext.h	1000;"	d
GL_DEPTH_STENCIL_ATTACHMENT	.\include\GL\glext.h	998;"	d
GL_DEPTH_STENCIL_EXT	.\include\GL\glext.h	7799;"	d
GL_DEPTH_STENCIL_NV	.\include\GL\glext.h	10300;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	.\include\GL\glext.h	2411;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	.\include\GL\glext.h	9649;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	.\include\GL\glext.h	9648;"	d
GL_DEPTH_TEXTURE_MODE	.\include\GL\glext.h	356;"	d
GL_DEPTH_TEXTURE_MODE_ARB	.\include\GL\glext.h	3081;"	d
GL_DETACHED_BUFFERS_NV	.\include\GL\glext.h	10184;"	d
GL_DETACHED_MEMORY_INCARNATION_NV	.\include\GL\glext.h	10182;"	d
GL_DETACHED_TEXTURES_NV	.\include\GL\glext.h	10183;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	.\include\GL\glext.h	11893;"	d
GL_DETAIL_TEXTURE_2D_SGIS	.\include\GL\glext.h	11892;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	.\include\GL\glext.h	11899;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	.\include\GL\glext.h	11897;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	.\include\GL\glext.h	11898;"	d
GL_DEVICE_LUID_EXT	.\include\GL\glext.h	7741;"	d
GL_DEVICE_NODE_MASK_EXT	.\include\GL\glext.h	7742;"	d
GL_DEVICE_UUID_EXT	.\include\GL\glext.h	7683;"	d
GL_DIFFERENCE_KHR	.\include\GL\glext.h	4946;"	d
GL_DIFFERENCE_NV	.\include\GL\glext.h	9447;"	d
GL_DISCARD_ATI	.\include\GL\glext.h	6298;"	d
GL_DISCARD_NV	.\include\GL\glext.h	10732;"	d
GL_DISCRETE_AMD	.\include\GL\glext.h	5781;"	d
GL_DISJOINT_NV	.\include\GL\glext.h	9448;"	d
GL_DISPATCH_INDIRECT_BUFFER	.\include\GL\glext.h	2200;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	.\include\GL\glext.h	2201;"	d
GL_DISPLAY_LIST	.\include\GL\glext.h	2428;"	d
GL_DISTANCE_ATTENUATION_EXT	.\include\GL\glext.h	7886;"	d
GL_DISTANCE_ATTENUATION_SGIS	.\include\GL\glext.h	11992;"	d
GL_DOT2_ADD_ATI	.\include\GL\glext.h	6142;"	d
GL_DOT3_ATI	.\include\GL\glext.h	6136;"	d
GL_DOT3_RGB	.\include\GL\glext.h	219;"	d
GL_DOT3_RGBA	.\include\GL\glext.h	220;"	d
GL_DOT3_RGBA_ARB	.\include\GL\glext.h	4464;"	d
GL_DOT3_RGBA_EXT	.\include\GL\glext.h	8368;"	d
GL_DOT3_RGB_ARB	.\include\GL\glext.h	4463;"	d
GL_DOT3_RGB_EXT	.\include\GL\glext.h	8367;"	d
GL_DOT4_ATI	.\include\GL\glext.h	6137;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	.\include\GL\glext.h	11157;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	.\include\GL\glext.h	11092;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	.\include\GL\glext.h	11087;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	.\include\GL\glext.h	11090;"	d
GL_DOT_PRODUCT_NV	.\include\GL\glext.h	11086;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	.\include\GL\glext.h	11155;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	.\include\GL\glext.h	11091;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	.\include\GL\glext.h	11156;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	.\include\GL\glext.h	11088;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	.\include\GL\glext.h	11139;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	.\include\GL\glext.h	11089;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11064;"	d
GL_DOUBLE_MAT2	.\include\GL\glext.h	1657;"	d
GL_DOUBLE_MAT2_EXT	.\include\GL\glext.h	8674;"	d
GL_DOUBLE_MAT2x3	.\include\GL\glext.h	1660;"	d
GL_DOUBLE_MAT2x3_EXT	.\include\GL\glext.h	8677;"	d
GL_DOUBLE_MAT2x4	.\include\GL\glext.h	1661;"	d
GL_DOUBLE_MAT2x4_EXT	.\include\GL\glext.h	8678;"	d
GL_DOUBLE_MAT3	.\include\GL\glext.h	1658;"	d
GL_DOUBLE_MAT3_EXT	.\include\GL\glext.h	8675;"	d
GL_DOUBLE_MAT3x2	.\include\GL\glext.h	1662;"	d
GL_DOUBLE_MAT3x2_EXT	.\include\GL\glext.h	8679;"	d
GL_DOUBLE_MAT3x4	.\include\GL\glext.h	1663;"	d
GL_DOUBLE_MAT3x4_EXT	.\include\GL\glext.h	8680;"	d
GL_DOUBLE_MAT4	.\include\GL\glext.h	1659;"	d
GL_DOUBLE_MAT4_EXT	.\include\GL\glext.h	8676;"	d
GL_DOUBLE_MAT4x2	.\include\GL\glext.h	1664;"	d
GL_DOUBLE_MAT4x2_EXT	.\include\GL\glext.h	8681;"	d
GL_DOUBLE_MAT4x3	.\include\GL\glext.h	1665;"	d
GL_DOUBLE_MAT4x3_EXT	.\include\GL\glext.h	8682;"	d
GL_DOUBLE_VEC2	.\include\GL\glext.h	1654;"	d
GL_DOUBLE_VEC2_EXT	.\include\GL\glext.h	8671;"	d
GL_DOUBLE_VEC3	.\include\GL\glext.h	1655;"	d
GL_DOUBLE_VEC3_EXT	.\include\GL\glext.h	8672;"	d
GL_DOUBLE_VEC4	.\include\GL\glext.h	1656;"	d
GL_DOUBLE_VEC4_EXT	.\include\GL\glext.h	8673;"	d
GL_DRAW_ARRAYS_COMMAND_NV	.\include\GL\glext.h	9525;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	.\include\GL\glext.h	9529;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	.\include\GL\glext.h	9527;"	d
GL_DRAW_BUFFER0	.\include\GL\glext.h	579;"	d
GL_DRAW_BUFFER0_ARB	.\include\GL\glext.h	3095;"	d
GL_DRAW_BUFFER0_ATI	.\include\GL\glext.h	6006;"	d
GL_DRAW_BUFFER1	.\include\GL\glext.h	580;"	d
GL_DRAW_BUFFER10	.\include\GL\glext.h	589;"	d
GL_DRAW_BUFFER10_ARB	.\include\GL\glext.h	3105;"	d
GL_DRAW_BUFFER10_ATI	.\include\GL\glext.h	6016;"	d
GL_DRAW_BUFFER11	.\include\GL\glext.h	590;"	d
GL_DRAW_BUFFER11_ARB	.\include\GL\glext.h	3106;"	d
GL_DRAW_BUFFER11_ATI	.\include\GL\glext.h	6017;"	d
GL_DRAW_BUFFER12	.\include\GL\glext.h	591;"	d
GL_DRAW_BUFFER12_ARB	.\include\GL\glext.h	3107;"	d
GL_DRAW_BUFFER12_ATI	.\include\GL\glext.h	6018;"	d
GL_DRAW_BUFFER13	.\include\GL\glext.h	592;"	d
GL_DRAW_BUFFER13_ARB	.\include\GL\glext.h	3108;"	d
GL_DRAW_BUFFER13_ATI	.\include\GL\glext.h	6019;"	d
GL_DRAW_BUFFER14	.\include\GL\glext.h	593;"	d
GL_DRAW_BUFFER14_ARB	.\include\GL\glext.h	3109;"	d
GL_DRAW_BUFFER14_ATI	.\include\GL\glext.h	6020;"	d
GL_DRAW_BUFFER15	.\include\GL\glext.h	594;"	d
GL_DRAW_BUFFER15_ARB	.\include\GL\glext.h	3110;"	d
GL_DRAW_BUFFER15_ATI	.\include\GL\glext.h	6021;"	d
GL_DRAW_BUFFER1_ARB	.\include\GL\glext.h	3096;"	d
GL_DRAW_BUFFER1_ATI	.\include\GL\glext.h	6007;"	d
GL_DRAW_BUFFER2	.\include\GL\glext.h	581;"	d
GL_DRAW_BUFFER2_ARB	.\include\GL\glext.h	3097;"	d
GL_DRAW_BUFFER2_ATI	.\include\GL\glext.h	6008;"	d
GL_DRAW_BUFFER3	.\include\GL\glext.h	582;"	d
GL_DRAW_BUFFER3_ARB	.\include\GL\glext.h	3098;"	d
GL_DRAW_BUFFER3_ATI	.\include\GL\glext.h	6009;"	d
GL_DRAW_BUFFER4	.\include\GL\glext.h	583;"	d
GL_DRAW_BUFFER4_ARB	.\include\GL\glext.h	3099;"	d
GL_DRAW_BUFFER4_ATI	.\include\GL\glext.h	6010;"	d
GL_DRAW_BUFFER5	.\include\GL\glext.h	584;"	d
GL_DRAW_BUFFER5_ARB	.\include\GL\glext.h	3100;"	d
GL_DRAW_BUFFER5_ATI	.\include\GL\glext.h	6011;"	d
GL_DRAW_BUFFER6	.\include\GL\glext.h	585;"	d
GL_DRAW_BUFFER6_ARB	.\include\GL\glext.h	3101;"	d
GL_DRAW_BUFFER6_ATI	.\include\GL\glext.h	6012;"	d
GL_DRAW_BUFFER7	.\include\GL\glext.h	586;"	d
GL_DRAW_BUFFER7_ARB	.\include\GL\glext.h	3102;"	d
GL_DRAW_BUFFER7_ATI	.\include\GL\glext.h	6013;"	d
GL_DRAW_BUFFER8	.\include\GL\glext.h	587;"	d
GL_DRAW_BUFFER8_ARB	.\include\GL\glext.h	3103;"	d
GL_DRAW_BUFFER8_ATI	.\include\GL\glext.h	6014;"	d
GL_DRAW_BUFFER9	.\include\GL\glext.h	588;"	d
GL_DRAW_BUFFER9_ARB	.\include\GL\glext.h	3104;"	d
GL_DRAW_BUFFER9_ATI	.\include\GL\glext.h	6015;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	.\include\GL\glext.h	9524;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	.\include\GL\glext.h	9528;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	.\include\GL\glext.h	9526;"	d
GL_DRAW_FRAMEBUFFER	.\include\GL\glext.h	1014;"	d
GL_DRAW_FRAMEBUFFER_BINDING	.\include\GL\glext.h	1011;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	.\include\GL\glext.h	7358;"	d
GL_DRAW_FRAMEBUFFER_EXT	.\include\GL\glext.h	7357;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	.\include\GL\glext.h	11383;"	d
GL_DRAW_INDIRECT_BUFFER	.\include\GL\glext.h	1646;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	.\include\GL\glext.h	1647;"	d
GL_DRAW_INDIRECT_LENGTH_NV	.\include\GL\glext.h	11384;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	.\include\GL\glext.h	11382;"	d
GL_DRAW_PIXELS_APPLE	.\include\GL\glext.h	5826;"	d
GL_DRIVER_UUID_EXT	.\include\GL\glext.h	7684;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	.\include\GL\glext.h	11114;"	d
GL_DSDT8_MAG8_NV	.\include\GL\glext.h	11113;"	d
GL_DSDT8_NV	.\include\GL\glext.h	11112;"	d
GL_DSDT_MAG_INTENSITY_NV	.\include\GL\glext.h	11068;"	d
GL_DSDT_MAG_NV	.\include\GL\glext.h	11095;"	d
GL_DSDT_MAG_VIB_NV	.\include\GL\glext.h	11096;"	d
GL_DSDT_NV	.\include\GL\glext.h	11094;"	d
GL_DST_ATOP_NV	.\include\GL\glext.h	9449;"	d
GL_DST_IN_NV	.\include\GL\glext.h	9450;"	d
GL_DST_NV	.\include\GL\glext.h	9451;"	d
GL_DST_OUT_NV	.\include\GL\glext.h	9452;"	d
GL_DST_OVER_NV	.\include\GL\glext.h	9453;"	d
GL_DS_BIAS_NV	.\include\GL\glext.h	11125;"	d
GL_DS_SCALE_NV	.\include\GL\glext.h	11119;"	d
GL_DT_BIAS_NV	.\include\GL\glext.h	11126;"	d
GL_DT_SCALE_NV	.\include\GL\glext.h	11120;"	d
GL_DU8DV8_ATI	.\include\GL\glext.h	6050;"	d
GL_DUAL_ALPHA12_SGIS	.\include\GL\glext.h	12078;"	d
GL_DUAL_ALPHA16_SGIS	.\include\GL\glext.h	12079;"	d
GL_DUAL_ALPHA4_SGIS	.\include\GL\glext.h	12076;"	d
GL_DUAL_ALPHA8_SGIS	.\include\GL\glext.h	12077;"	d
GL_DUAL_INTENSITY12_SGIS	.\include\GL\glext.h	12086;"	d
GL_DUAL_INTENSITY16_SGIS	.\include\GL\glext.h	12087;"	d
GL_DUAL_INTENSITY4_SGIS	.\include\GL\glext.h	12084;"	d
GL_DUAL_INTENSITY8_SGIS	.\include\GL\glext.h	12085;"	d
GL_DUAL_LUMINANCE12_SGIS	.\include\GL\glext.h	12082;"	d
GL_DUAL_LUMINANCE16_SGIS	.\include\GL\glext.h	12083;"	d
GL_DUAL_LUMINANCE4_SGIS	.\include\GL\glext.h	12080;"	d
GL_DUAL_LUMINANCE8_SGIS	.\include\GL\glext.h	12081;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	.\include\GL\glext.h	12088;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	.\include\GL\glext.h	12089;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	.\include\GL\glext.h	12096;"	d
GL_DUDV_ATI	.\include\GL\glext.h	6049;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10420;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10421;"	d
GL_DYNAMIC_ATI	.\include\GL\glext.h	6296;"	d
GL_DYNAMIC_COPY	.\include\GL\glext.h	496;"	d
GL_DYNAMIC_COPY_ARB	.\include\GL\glext.h	4731;"	d
GL_DYNAMIC_DRAW	.\include\GL\glext.h	494;"	d
GL_DYNAMIC_DRAW_ARB	.\include\GL\glext.h	4729;"	d
GL_DYNAMIC_READ	.\include\GL\glext.h	495;"	d
GL_DYNAMIC_READ_ARB	.\include\GL\glext.h	4730;"	d
GL_DYNAMIC_STORAGE_BIT	.\include\GL\glext.h	2526;"	d
GL_EDGEFLAG_BIT_PGI	.\include\GL\glext.h	11856;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11368;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	504;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4712;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	.\include\GL\glext.h	8636;"	d
GL_EDGE_FLAG_ARRAY_EXT	.\include\GL\glext.h	8616;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	.\include\GL\glext.h	11378;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	.\include\GL\glext.h	9077;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9085;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	.\include\GL\glext.h	8642;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8635;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	.\include\GL\glext.h	7938;"	d
GL_EIGHTH_BIT_ATI	.\include\GL\glext.h	6166;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	.\include\GL\glext.h	9530;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11371;"	d
GL_ELEMENT_ARRAY_APPLE	.\include\GL\glext.h	5807;"	d
GL_ELEMENT_ARRAY_ATI	.\include\GL\glext.h	6030;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	.\include\GL\glext.h	2071;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	.\include\GL\glext.h	8128;"	d
GL_ELEMENT_ARRAY_BUFFER	.\include\GL\glext.h	478;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	.\include\GL\glext.h	4704;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	480;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4706;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	.\include\GL\glext.h	11381;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	.\include\GL\glext.h	5809;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	.\include\GL\glext.h	6032;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	.\include\GL\glext.h	5808;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	.\include\GL\glext.h	6031;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	.\include\GL\glext.h	11361;"	d
GL_EMBOSS_CONSTANT_NV	.\include\GL\glext.h	10992;"	d
GL_EMBOSS_LIGHT_NV	.\include\GL\glext.h	10991;"	d
GL_EMBOSS_MAP_NV	.\include\GL\glext.h	10993;"	d
GL_EVAL_2D_NV	.\include\GL\glext.h	9714;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	.\include\GL\glext.h	9719;"	d
GL_EVAL_TRIANGULAR_2D_NV	.\include\GL\glext.h	9715;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	.\include\GL\glext.h	9720;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	.\include\GL\glext.h	9730;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	.\include\GL\glext.h	9731;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	.\include\GL\glext.h	9732;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	.\include\GL\glext.h	9733;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	.\include\GL\glext.h	9734;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	.\include\GL\glext.h	9735;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	.\include\GL\glext.h	9721;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	.\include\GL\glext.h	9722;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	.\include\GL\glext.h	9723;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	.\include\GL\glext.h	9724;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	.\include\GL\glext.h	9725;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	.\include\GL\glext.h	9726;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	.\include\GL\glext.h	9727;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	.\include\GL\glext.h	9728;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	.\include\GL\glext.h	9729;"	d
GL_EXCLUSION_KHR	.\include\GL\glext.h	4947;"	d
GL_EXCLUSION_NV	.\include\GL\glext.h	9454;"	d
GL_EXCLUSIVE_EXT	.\include\GL\glext.h	8945;"	d
GL_EXPAND_NEGATE_NV	.\include\GL\glext.h	10738;"	d
GL_EXPAND_NORMAL_NV	.\include\GL\glext.h	10737;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	.\include\GL\glext.h	5672;"	d
GL_EXT_422_pixels	.\include\GL\glext.h	6450;"	d
GL_EXT_EGL_image_storage	.\include\GL\glext.h	6458;"	d
GL_EXT_abgr	.\include\GL\glext.h	6469;"	d
GL_EXT_bgra	.\include\GL\glext.h	6474;"	d
GL_EXT_bindable_uniform	.\include\GL\glext.h	6480;"	d
GL_EXT_blend_color	.\include\GL\glext.h	6498;"	d
GL_EXT_blend_equation_separate	.\include\GL\glext.h	6511;"	d
GL_EXT_blend_func_separate	.\include\GL\glext.h	6521;"	d
GL_EXT_blend_logic_op	.\include\GL\glext.h	6533;"	d
GL_EXT_blend_minmax	.\include\GL\glext.h	6537;"	d
GL_EXT_blend_subtract	.\include\GL\glext.h	6549;"	d
GL_EXT_clip_volume_hint	.\include\GL\glext.h	6555;"	d
GL_EXT_cmyka	.\include\GL\glext.h	6560;"	d
GL_EXT_color_subtable	.\include\GL\glext.h	6568;"	d
GL_EXT_compiled_vertex_array	.\include\GL\glext.h	6578;"	d
GL_EXT_convolution	.\include\GL\glext.h	6590;"	d
GL_EXT_coordinate_frame	.\include\GL\glext.h	6642;"	d
GL_EXT_copy_texture	.\include\GL\glext.h	6706;"	d
GL_EXT_cull_vertex	.\include\GL\glext.h	6722;"	d
GL_EXT_debug_label	.\include\GL\glext.h	6735;"	d
GL_EXT_debug_marker	.\include\GL\glext.h	6751;"	d
GL_EXT_depth_bounds_test	.\include\GL\glext.h	6763;"	d
GL_EXT_direct_state_access	.\include\GL\glext.h	6773;"	d
GL_EXT_draw_buffers2	.\include\GL\glext.h	7292;"	d
GL_EXT_draw_instanced	.\include\GL\glext.h	7300;"	d
GL_EXT_draw_range_elements	.\include\GL\glext.h	7310;"	d
GL_EXT_external_buffer	.\include\GL\glext.h	7320;"	d
GL_EXT_fog_coord	.\include\GL\glext.h	7331;"	d
GL_EXT_framebuffer_blit	.\include\GL\glext.h	7355;"	d
GL_EXT_framebuffer_multisample	.\include\GL\glext.h	7367;"	d
GL_EXT_framebuffer_multisample_blit_scaled	.\include\GL\glext.h	7378;"	d
GL_EXT_framebuffer_object	.\include\GL\glext.h	7384;"	d
GL_EXT_framebuffer_sRGB	.\include\GL\glext.h	7475;"	d
GL_EXT_geometry_shader4	.\include\GL\glext.h	7481;"	d
GL_EXT_gpu_program_parameters	.\include\GL\glext.h	7509;"	d
GL_EXT_gpu_shader4	.\include\GL\glext.h	7519;"	d
GL_EXT_histogram	.\include\GL\glext.h	7575;"	d
GL_EXT_index_array_formats	.\include\GL\glext.h	7615;"	d
GL_EXT_index_func	.\include\GL\glext.h	7627;"	d
GL_EXT_index_material	.\include\GL\glext.h	7638;"	d
GL_EXT_index_texture	.\include\GL\glext.h	7649;"	d
GL_EXT_light_texture	.\include\GL\glext.h	7653;"	d
GL_EXT_memory_object	.\include\GL\glext.h	7674;"	d
GL_EXT_memory_object_fd	.\include\GL\glext.h	7729;"	d
GL_EXT_memory_object_win32	.\include\GL\glext.h	7738;"	d
GL_EXT_misc_attribute	.\include\GL\glext.h	7757;"	d
GL_EXT_multi_draw_arrays	.\include\GL\glext.h	7761;"	d
GL_EXT_multisample	.\include\GL\glext.h	7771;"	d
GL_EXT_packed_depth_stencil	.\include\GL\glext.h	7798;"	d
GL_EXT_packed_float	.\include\GL\glext.h	7806;"	d
GL_EXT_packed_pixels	.\include\GL\glext.h	7813;"	d
GL_EXT_paletted_texture	.\include\GL\glext.h	7822;"	d
GL_EXT_pixel_buffer_object	.\include\GL\glext.h	7843;"	d
GL_EXT_pixel_transform	.\include\GL\glext.h	7851;"	d
GL_EXT_pixel_transform_color_table	.\include\GL\glext.h	7878;"	d
GL_EXT_point_parameters	.\include\GL\glext.h	7882;"	d
GL_EXT_polygon_offset	.\include\GL\glext.h	7896;"	d
GL_EXT_polygon_offset_clamp	.\include\GL\glext.h	7907;"	d
GL_EXT_post_depth_coverage	.\include\GL\glext.h	7916;"	d
GL_EXT_provoking_vertex	.\include\GL\glext.h	7920;"	d
GL_EXT_raster_multisample	.\include\GL\glext.h	7932;"	d
GL_EXT_rescale_normal	.\include\GL\glext.h	7946;"	d
GL_EXT_secondary_color	.\include\GL\glext.h	7951;"	d
GL_EXT_semaphore	.\include\GL\glext.h	7998;"	d
GL_EXT_semaphore_fd	.\include\GL\glext.h	8027;"	d
GL_EXT_semaphore_win32	.\include\GL\glext.h	8035;"	d
GL_EXT_separate_shader_objects	.\include\GL\glext.h	8047;"	d
GL_EXT_separate_specular_color	.\include\GL\glext.h	8060;"	d
GL_EXT_shader_framebuffer_fetch	.\include\GL\glext.h	8067;"	d
GL_EXT_shader_framebuffer_fetch_non_coherent	.\include\GL\glext.h	8072;"	d
GL_EXT_shader_image_load_formatted	.\include\GL\glext.h	8080;"	d
GL_EXT_shader_image_load_store	.\include\GL\glext.h	8084;"	d
GL_EXT_shader_integer_mix	.\include\GL\glext.h	8149;"	d
GL_EXT_shadow_funcs	.\include\GL\glext.h	8153;"	d
GL_EXT_shared_texture_palette	.\include\GL\glext.h	8157;"	d
GL_EXT_sparse_texture2	.\include\GL\glext.h	8162;"	d
GL_EXT_stencil_clear_tag	.\include\GL\glext.h	8166;"	d
GL_EXT_stencil_two_side	.\include\GL\glext.h	8176;"	d
GL_EXT_stencil_wrap	.\include\GL\glext.h	8186;"	d
GL_EXT_subtexture	.\include\GL\glext.h	8192;"	d
GL_EXT_texture	.\include\GL\glext.h	8202;"	d
GL_EXT_texture3D	.\include\GL\glext.h	8249;"	d
GL_EXT_texture_array	.\include\GL\glext.h	8268;"	d
GL_EXT_texture_buffer_object	.\include\GL\glext.h	8284;"	d
GL_EXT_texture_compression_latc	.\include\GL\glext.h	8297;"	d
GL_EXT_texture_compression_rgtc	.\include\GL\glext.h	8305;"	d
GL_EXT_texture_compression_s3tc	.\include\GL\glext.h	8313;"	d
GL_EXT_texture_cube_map	.\include\GL\glext.h	8321;"	d
GL_EXT_texture_env_add	.\include\GL\glext.h	8337;"	d
GL_EXT_texture_env_combine	.\include\GL\glext.h	8341;"	d
GL_EXT_texture_env_dot3	.\include\GL\glext.h	8366;"	d
GL_EXT_texture_filter_anisotropic	.\include\GL\glext.h	8372;"	d
GL_EXT_texture_filter_minmax	.\include\GL\glext.h	8378;"	d
GL_EXT_texture_integer	.\include\GL\glext.h	8384;"	d
GL_EXT_texture_lod_bias	.\include\GL\glext.h	8449;"	d
GL_EXT_texture_mirror_clamp	.\include\GL\glext.h	8456;"	d
GL_EXT_texture_object	.\include\GL\glext.h	8463;"	d
GL_EXT_texture_perturb_normal	.\include\GL\glext.h	8486;"	d
GL_EXT_texture_sRGB	.\include\GL\glext.h	8496;"	d
GL_EXT_texture_sRGB_R8	.\include\GL\glext.h	8516;"	d
GL_EXT_texture_sRGB_decode	.\include\GL\glext.h	8521;"	d
GL_EXT_texture_shared_exponent	.\include\GL\glext.h	8528;"	d
GL_EXT_texture_snorm	.\include\GL\glext.h	8535;"	d
GL_EXT_texture_swizzle	.\include\GL\glext.h	8555;"	d
GL_EXT_timer_query	.\include\GL\glext.h	8564;"	d
GL_EXT_transform_feedback	.\include\GL\glext.h	8575;"	d
GL_EXT_vertex_array	.\include\GL\glext.h	8610;"	d
GL_EXT_vertex_array_bgra	.\include\GL\glext.h	8666;"	d
GL_EXT_vertex_attrib_64bit	.\include\GL\glext.h	8670;"	d
GL_EXT_vertex_shader	.\include\GL\glext.h	8708;"	d
GL_EXT_vertex_weighting	.\include\GL\glext.h	8908;"	d
GL_EXT_win32_keyed_mutex	.\include\GL\glext.h	8933;"	d
GL_EXT_window_rectangles	.\include\GL\glext.h	8943;"	d
GL_EXT_x11_sync_object	.\include\GL\glext.h	8957;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	.\include\GL\glext.h	11979;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	.\include\GL\glext.h	11977;"	d
GL_EYE_LINEAR_NV	.\include\GL\glext.h	10472;"	d
GL_EYE_LINE_SGIS	.\include\GL\glext.h	11983;"	d
GL_EYE_PLANE_ABSOLUTE_NV	.\include\GL\glext.h	9833;"	d
GL_EYE_POINT_SGIS	.\include\GL\glext.h	11981;"	d
GL_EYE_RADIAL_NV	.\include\GL\glext.h	9832;"	d
GL_E_TIMES_F_NV	.\include\GL\glext.h	10733;"	d
GL_FACTOR_MAX_AMD	.\include\GL\glext.h	5370;"	d
GL_FACTOR_MIN_AMD	.\include\GL\glext.h	5369;"	d
GL_FAILURE_NV	.\include\GL\glext.h	11717;"	d
GL_FENCE_APPLE	.\include\GL\glext.h	5827;"	d
GL_FENCE_CONDITION_NV	.\include\GL\glext.h	9786;"	d
GL_FENCE_STATUS_NV	.\include\GL\glext.h	9785;"	d
GL_FIELDS_NV	.\include\GL\glext.h	10659;"	d
GL_FIELD_LOWER_NV	.\include\GL\glext.h	11704;"	d
GL_FIELD_UPPER_NV	.\include\GL\glext.h	11703;"	d
GL_FILE_NAME_NV	.\include\GL\glext.h	10331;"	d
GL_FILL_RECTANGLE_NV	.\include\GL\glext.h	9807;"	d
GL_FILTER	.\include\GL\glext.h	2292;"	d
GL_FILTER4_SGIS	.\include\GL\glext.h	12056;"	d
GL_FIRST_TO_REST_NV	.\include\GL\glext.h	10381;"	d
GL_FIRST_VERTEX_CONVENTION	.\include\GL\glext.h	1413;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	.\include\GL\glext.h	7922;"	d
GL_FIXED	.\include\GL\glext.h	1810;"	d
GL_FIXED_OES	.\include\GL\glext.h	5102;"	d
GL_FIXED_ONLY	.\include\GL\glext.h	910;"	d
GL_FIXED_ONLY_ARB	.\include\GL\glext.h	2979;"	d
GL_FLOAT16_MAT2_AMD	.\include\GL\glext.h	5470;"	d
GL_FLOAT16_MAT2x3_AMD	.\include\GL\glext.h	5473;"	d
GL_FLOAT16_MAT2x4_AMD	.\include\GL\glext.h	5474;"	d
GL_FLOAT16_MAT3_AMD	.\include\GL\glext.h	5471;"	d
GL_FLOAT16_MAT3x2_AMD	.\include\GL\glext.h	5475;"	d
GL_FLOAT16_MAT3x4_AMD	.\include\GL\glext.h	5476;"	d
GL_FLOAT16_MAT4_AMD	.\include\GL\glext.h	5472;"	d
GL_FLOAT16_MAT4x2_AMD	.\include\GL\glext.h	5477;"	d
GL_FLOAT16_MAT4x3_AMD	.\include\GL\glext.h	5478;"	d
GL_FLOAT16_NV	.\include\GL\glext.h	5466;"	d
GL_FLOAT16_VEC2_NV	.\include\GL\glext.h	5467;"	d
GL_FLOAT16_VEC3_NV	.\include\GL\glext.h	5468;"	d
GL_FLOAT16_VEC4_NV	.\include\GL\glext.h	5469;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	.\include\GL\glext.h	986;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	.\include\GL\glext.h	9670;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	.\include\GL\glext.h	9825;"	d
GL_FLOAT_MAT2	.\include\GL\glext.h	617;"	d
GL_FLOAT_MAT2_ARB	.\include\GL\glext.h	4094;"	d
GL_FLOAT_MAT2x3	.\include\GL\glext.h	846;"	d
GL_FLOAT_MAT2x4	.\include\GL\glext.h	847;"	d
GL_FLOAT_MAT3	.\include\GL\glext.h	618;"	d
GL_FLOAT_MAT3_ARB	.\include\GL\glext.h	4095;"	d
GL_FLOAT_MAT3x2	.\include\GL\glext.h	848;"	d
GL_FLOAT_MAT3x4	.\include\GL\glext.h	849;"	d
GL_FLOAT_MAT4	.\include\GL\glext.h	619;"	d
GL_FLOAT_MAT4_ARB	.\include\GL\glext.h	4096;"	d
GL_FLOAT_MAT4x2	.\include\GL\glext.h	850;"	d
GL_FLOAT_MAT4x3	.\include\GL\glext.h	851;"	d
GL_FLOAT_R16_NV	.\include\GL\glext.h	9816;"	d
GL_FLOAT_R32_NV	.\include\GL\glext.h	9817;"	d
GL_FLOAT_RG16_NV	.\include\GL\glext.h	9818;"	d
GL_FLOAT_RG32_NV	.\include\GL\glext.h	9819;"	d
GL_FLOAT_RGB16_NV	.\include\GL\glext.h	9820;"	d
GL_FLOAT_RGB32_NV	.\include\GL\glext.h	9821;"	d
GL_FLOAT_RGBA16_NV	.\include\GL\glext.h	9822;"	d
GL_FLOAT_RGBA32_NV	.\include\GL\glext.h	9823;"	d
GL_FLOAT_RGBA_MODE_NV	.\include\GL\glext.h	9826;"	d
GL_FLOAT_RGBA_NV	.\include\GL\glext.h	9815;"	d
GL_FLOAT_RGB_NV	.\include\GL\glext.h	9814;"	d
GL_FLOAT_RG_NV	.\include\GL\glext.h	9813;"	d
GL_FLOAT_R_NV	.\include\GL\glext.h	9812;"	d
GL_FLOAT_VEC2	.\include\GL\glext.h	607;"	d
GL_FLOAT_VEC2_ARB	.\include\GL\glext.h	4084;"	d
GL_FLOAT_VEC3	.\include\GL\glext.h	608;"	d
GL_FLOAT_VEC3_ARB	.\include\GL\glext.h	4085;"	d
GL_FLOAT_VEC4	.\include\GL\glext.h	609;"	d
GL_FLOAT_VEC4_ARB	.\include\GL\glext.h	4086;"	d
GL_FOG_COORD	.\include\GL\glext.h	509;"	d
GL_FOG_COORDINATE	.\include\GL\glext.h	341;"	d
GL_FOG_COORDINATE_ARRAY	.\include\GL\glext.h	347;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	506;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4714;"	d
GL_FOG_COORDINATE_ARRAY_EXT	.\include\GL\glext.h	7339;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	.\include\GL\glext.h	9078;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9086;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	.\include\GL\glext.h	346;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	.\include\GL\glext.h	7338;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	.\include\GL\glext.h	345;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	.\include\GL\glext.h	7337;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	.\include\GL\glext.h	344;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	.\include\GL\glext.h	7336;"	d
GL_FOG_COORDINATE_EXT	.\include\GL\glext.h	7333;"	d
GL_FOG_COORDINATE_SOURCE	.\include\GL\glext.h	340;"	d
GL_FOG_COORDINATE_SOURCE_EXT	.\include\GL\glext.h	7332;"	d
GL_FOG_COORD_ARRAY	.\include\GL\glext.h	514;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11370;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	515;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	.\include\GL\glext.h	11380;"	d
GL_FOG_COORD_ARRAY_POINTER	.\include\GL\glext.h	513;"	d
GL_FOG_COORD_ARRAY_STRIDE	.\include\GL\glext.h	512;"	d
GL_FOG_COORD_ARRAY_TYPE	.\include\GL\glext.h	511;"	d
GL_FOG_COORD_SRC	.\include\GL\glext.h	508;"	d
GL_FOG_DISTANCE_MODE_NV	.\include\GL\glext.h	9831;"	d
GL_FOG_FUNC_POINTS_SGIS	.\include\GL\glext.h	11911;"	d
GL_FOG_FUNC_SGIS	.\include\GL\glext.h	11910;"	d
GL_FOG_OFFSET_SGIX	.\include\GL\glext.h	12188;"	d
GL_FOG_OFFSET_VALUE_SGIX	.\include\GL\glext.h	12189;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	.\include\GL\glext.h	12735;"	d
GL_FONT_ASCENDER_BIT_NV	.\include\GL\glext.h	10444;"	d
GL_FONT_DESCENDER_BIT_NV	.\include\GL\glext.h	10445;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	.\include\GL\glext.h	10461;"	d
GL_FONT_HAS_KERNING_BIT_NV	.\include\GL\glext.h	10451;"	d
GL_FONT_HEIGHT_BIT_NV	.\include\GL\glext.h	10446;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	.\include\GL\glext.h	10448;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	.\include\GL\glext.h	10447;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	.\include\GL\glext.h	10467;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	.\include\GL\glext.h	10462;"	d
GL_FONT_UNAVAILABLE_NV	.\include\GL\glext.h	10463;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	.\include\GL\glext.h	10449;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	.\include\GL\glext.h	10450;"	d
GL_FONT_UNINTELLIGIBLE_NV	.\include\GL\glext.h	10464;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	.\include\GL\glext.h	10443;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	.\include\GL\glext.h	10441;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	.\include\GL\glext.h	10439;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	.\include\GL\glext.h	10442;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	.\include\GL\glext.h	10440;"	d
GL_FORCE_BLUE_TO_ONE_NV	.\include\GL\glext.h	11160;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	.\include\GL\glext.h	11801;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	.\include\GL\glext.h	11800;"	d
GL_FRACTIONAL_EVEN	.\include\GL\glext.h	1686;"	d
GL_FRACTIONAL_ODD	.\include\GL\glext.h	1685;"	d
GL_FRAGMENT_COLOR_EXT	.\include\GL\glext.h	7656;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	.\include\GL\glext.h	12196;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	.\include\GL\glext.h	12197;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	.\include\GL\glext.h	12195;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	.\include\GL\glext.h	9839;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	.\include\GL\glext.h	9838;"	d
GL_FRAGMENT_DEPTH	.\include\GL\glext.h	342;"	d
GL_FRAGMENT_DEPTH_EXT	.\include\GL\glext.h	7334;"	d
GL_FRAGMENT_INPUT_NV	.\include\GL\glext.h	10489;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	.\include\GL\glext.h	1652;"	d
GL_FRAGMENT_LIGHT0_SGIX	.\include\GL\glext.h	12206;"	d
GL_FRAGMENT_LIGHT1_SGIX	.\include\GL\glext.h	12207;"	d
GL_FRAGMENT_LIGHT2_SGIX	.\include\GL\glext.h	12208;"	d
GL_FRAGMENT_LIGHT3_SGIX	.\include\GL\glext.h	12209;"	d
GL_FRAGMENT_LIGHT4_SGIX	.\include\GL\glext.h	12210;"	d
GL_FRAGMENT_LIGHT5_SGIX	.\include\GL\glext.h	12211;"	d
GL_FRAGMENT_LIGHT6_SGIX	.\include\GL\glext.h	12212;"	d
GL_FRAGMENT_LIGHT7_SGIX	.\include\GL\glext.h	12213;"	d
GL_FRAGMENT_LIGHTING_SGIX	.\include\GL\glext.h	12194;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	.\include\GL\glext.h	12204;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	.\include\GL\glext.h	12202;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	.\include\GL\glext.h	12205;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	.\include\GL\glext.h	12203;"	d
GL_FRAGMENT_MATERIAL_EXT	.\include\GL\glext.h	7654;"	d
GL_FRAGMENT_NORMAL_EXT	.\include\GL\glext.h	7655;"	d
GL_FRAGMENT_PROGRAM_ARB	.\include\GL\glext.h	3171;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	.\include\GL\glext.h	9852;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	.\include\GL\glext.h	10036;"	d
GL_FRAGMENT_PROGRAM_NV	.\include\GL\glext.h	9849;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	10310;"	d
GL_FRAGMENT_SHADER	.\include\GL\glext.h	599;"	d
GL_FRAGMENT_SHADER_ARB	.\include\GL\glext.h	3297;"	d
GL_FRAGMENT_SHADER_ATI	.\include\GL\glext.h	6067;"	d
GL_FRAGMENT_SHADER_BIT	.\include\GL\glext.h	1831;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	.\include\GL\glext.h	637;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	.\include\GL\glext.h	3299;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	.\include\GL\glext.h	8068;"	d
GL_FRAGMENT_SHADER_INVOCATIONS	.\include\GL\glext.h	2847;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	.\include\GL\glext.h	3875;"	d
GL_FRAGMENT_SUBROUTINE	.\include\GL\glext.h	2358;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2364;"	d
GL_FRAGMENT_TEXTURE	.\include\GL\glext.h	2297;"	d
GL_FRAMEBUFFER	.\include\GL\glext.h	1063;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	.\include\GL\glext.h	993;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	.\include\GL\glext.h	992;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	.\include\GL\glext.h	988;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	.\include\GL\glext.h	989;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	.\include\GL\glext.h	994;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	.\include\GL\glext.h	991;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	.\include\GL\glext.h	1397;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	.\include\GL\glext.h	3326;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	.\include\GL\glext.h	7499;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	.\include\GL\glext.h	1018;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	.\include\GL\glext.h	7390;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	.\include\GL\glext.h	1017;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	.\include\GL\glext.h	7389;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	.\include\GL\glext.h	990;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	.\include\GL\glext.h	995;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	.\include\GL\glext.h	7393;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	.\include\GL\glext.h	11807;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	.\include\GL\glext.h	1020;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	.\include\GL\glext.h	7392;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	.\include\GL\glext.h	1021;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	.\include\GL\glext.h	7500;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	.\include\GL\glext.h	1019;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	.\include\GL\glext.h	7391;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	.\include\GL\glext.h	11806;"	d
GL_FRAMEBUFFER_BARRIER_BIT	.\include\GL\glext.h	2079;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	.\include\GL\glext.h	8136;"	d
GL_FRAMEBUFFER_BINDING	.\include\GL\glext.h	1010;"	d
GL_FRAMEBUFFER_BINDING_EXT	.\include\GL\glext.h	7387;"	d
GL_FRAMEBUFFER_BLEND	.\include\GL\glext.h	2278;"	d
GL_FRAMEBUFFER_COMPLETE	.\include\GL\glext.h	1022;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	.\include\GL\glext.h	7394;"	d
GL_FRAMEBUFFER_DEFAULT	.\include\GL\glext.h	996;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	.\include\GL\glext.h	2245;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	.\include\GL\glext.h	2242;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	.\include\GL\glext.h	2243;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	.\include\GL\glext.h	2244;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	.\include\GL\glext.h	2241;"	d
GL_FRAMEBUFFER_EXT	.\include\GL\glext.h	7421;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	.\include\GL\glext.h	1023;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	.\include\GL\glext.h	7395;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	.\include\GL\glext.h	7397;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	.\include\GL\glext.h	1025;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	.\include\GL\glext.h	7399;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	.\include\GL\glext.h	7398;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	.\include\GL\glext.h	3328;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	.\include\GL\glext.h	7498;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	.\include\GL\glext.h	1398;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	.\include\GL\glext.h	3327;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	.\include\GL\glext.h	7497;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	.\include\GL\glext.h	1024;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	.\include\GL\glext.h	7396;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	.\include\GL\glext.h	1078;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	.\include\GL\glext.h	7369;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	.\include\GL\glext.h	1026;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	.\include\GL\glext.h	7400;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	.\include\GL\glext.h	11809;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	.\include\GL\glext.h	3998;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	.\include\GL\glext.h	10828;"	d
GL_FRAMEBUFFER_RENDERABLE	.\include\GL\glext.h	2276;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	.\include\GL\glext.h	2277;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	.\include\GL\glext.h	3999;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	.\include\GL\glext.h	10829;"	d
GL_FRAMEBUFFER_SRGB	.\include\GL\glext.h	1083;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	.\include\GL\glext.h	7477;"	d
GL_FRAMEBUFFER_SRGB_EXT	.\include\GL\glext.h	7476;"	d
GL_FRAMEBUFFER_UNDEFINED	.\include\GL\glext.h	997;"	d
GL_FRAMEBUFFER_UNSUPPORTED	.\include\GL\glext.h	1027;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	.\include\GL\glext.h	7401;"	d
GL_FRAMEZOOM_FACTOR_SGIX	.\include\GL\glext.h	12257;"	d
GL_FRAMEZOOM_SGIX	.\include\GL\glext.h	12256;"	d
GL_FRAME_NV	.\include\GL\glext.h	10658;"	d
GL_FRONT_FACE_COMMAND_NV	.\include\GL\glext.h	9540;"	d
GL_FULL_RANGE_EXT	.\include\GL\glext.h	8806;"	d
GL_FULL_STIPPLE_HINT_PGI	.\include\GL\glext.h	11837;"	d
GL_FULL_SUPPORT	.\include\GL\glext.h	2319;"	d
GL_FUNC_ADD	.\include\GL\glext.h	364;"	d
GL_FUNC_ADD_EXT	.\include\GL\glext.h	6540;"	d
GL_FUNC_REVERSE_SUBTRACT	.\include\GL\glext.h	365;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	.\include\GL\glext.h	6551;"	d
GL_FUNC_SUBTRACT	.\include\GL\glext.h	366;"	d
GL_FUNC_SUBTRACT_EXT	.\include\GL\glext.h	6550;"	d
GL_GENERATE_MIPMAP	.\include\GL\glext.h	338;"	d
GL_GENERATE_MIPMAP_HINT	.\include\GL\glext.h	339;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	.\include\GL\glext.h	11924;"	d
GL_GENERATE_MIPMAP_SGIS	.\include\GL\glext.h	11923;"	d
GL_GENERIC_ATTRIB_NV	.\include\GL\glext.h	11171;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	.\include\GL\glext.h	12347;"	d
GL_GEOMETRY_DEFORMATION_SGIX	.\include\GL\glext.h	12348;"	d
GL_GEOMETRY_INPUT_TYPE	.\include\GL\glext.h	1401;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	.\include\GL\glext.h	3331;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	.\include\GL\glext.h	7484;"	d
GL_GEOMETRY_OUTPUT_TYPE	.\include\GL\glext.h	1402;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	.\include\GL\glext.h	3332;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	.\include\GL\glext.h	7485;"	d
GL_GEOMETRY_PROGRAM_NV	.\include\GL\glext.h	9929;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	10309;"	d
GL_GEOMETRY_SHADER	.\include\GL\glext.h	1399;"	d
GL_GEOMETRY_SHADER_ARB	.\include\GL\glext.h	3329;"	d
GL_GEOMETRY_SHADER_BIT	.\include\GL\glext.h	1832;"	d
GL_GEOMETRY_SHADER_EXT	.\include\GL\glext.h	7482;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	.\include\GL\glext.h	1648;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED	.\include\GL\glext.h	2846;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	.\include\GL\glext.h	3874;"	d
GL_GEOMETRY_SUBROUTINE	.\include\GL\glext.h	2357;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2363;"	d
GL_GEOMETRY_TEXTURE	.\include\GL\glext.h	2296;"	d
GL_GEOMETRY_VERTICES_OUT	.\include\GL\glext.h	1400;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	.\include\GL\glext.h	3330;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	.\include\GL\glext.h	7483;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	.\include\GL\glext.h	2284;"	d
GL_GET_TEXTURE_IMAGE_TYPE	.\include\GL\glext.h	2285;"	d
GL_GLEXT_VERSION	.\include\GL\glext.h	54;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	.\include\GL\glext.h	12568;"	d
GL_GLOBAL_ALPHA_SUN	.\include\GL\glext.h	12567;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	.\include\GL\glext.h	10438;"	d
GL_GLYPH_HEIGHT_BIT_NV	.\include\GL\glext.h	10431;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	.\include\GL\glext.h	10434;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	.\include\GL\glext.h	10432;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	.\include\GL\glext.h	10433;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	.\include\GL\glext.h	10437;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	.\include\GL\glext.h	10435;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	.\include\GL\glext.h	10436;"	d
GL_GLYPH_WIDTH_BIT_NV	.\include\GL\glext.h	10430;"	d
GL_GPU_ADDRESS_NV	.\include\GL\glext.h	10879;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	.\include\GL\glext.h	9354;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	.\include\GL\glext.h	9352;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	.\include\GL\glext.h	9356;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	.\include\GL\glext.h	9355;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	.\include\GL\glext.h	9353;"	d
GL_GREEN_BIT_ATI	.\include\GL\glext.h	6159;"	d
GL_GREEN_INTEGER	.\include\GL\glext.h	951;"	d
GL_GREEN_INTEGER_EXT	.\include\GL\glext.h	8422;"	d
GL_GREEN_MAX_CLAMP_INGR	.\include\GL\glext.h	9123;"	d
GL_GREEN_MIN_CLAMP_INGR	.\include\GL\glext.h	9119;"	d
GL_GREEN_NV	.\include\GL\glext.h	9455;"	d
GL_GREMEDY_frame_terminator	.\include\GL\glext.h	8966;"	d
GL_GREMEDY_string_marker	.\include\GL\glext.h	8974;"	d
GL_GUILTY_CONTEXT_RESET	.\include\GL\glext.h	2577;"	d
GL_GUILTY_CONTEXT_RESET_ARB	.\include\GL\glext.h	3937;"	d
GL_HALF_APPLE	.\include\GL\glext.h	5850;"	d
GL_HALF_BIAS_NEGATE_NV	.\include\GL\glext.h	10740;"	d
GL_HALF_BIAS_NORMAL_NV	.\include\GL\glext.h	10739;"	d
GL_HALF_BIT_ATI	.\include\GL\glext.h	6164;"	d
GL_HALF_FLOAT	.\include\GL\glext.h	1084;"	d
GL_HALF_FLOAT_ARB	.\include\GL\glext.h	3464;"	d
GL_HALF_FLOAT_NV	.\include\GL\glext.h	10060;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_EXT	.\include\GL\glext.h	7746;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT	.\include\GL\glext.h	7747;"	d
GL_HANDLE_TYPE_D3D12_FENCE_EXT	.\include\GL\glext.h	8036;"	d
GL_HANDLE_TYPE_D3D12_RESOURCE_EXT	.\include\GL\glext.h	7745;"	d
GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT	.\include\GL\glext.h	7744;"	d
GL_HANDLE_TYPE_OPAQUE_FD_EXT	.\include\GL\glext.h	7730;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_EXT	.\include\GL\glext.h	7739;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT	.\include\GL\glext.h	7740;"	d
GL_HARDLIGHT_KHR	.\include\GL\glext.h	4944;"	d
GL_HARDLIGHT_NV	.\include\GL\glext.h	9456;"	d
GL_HARDMIX_NV	.\include\GL\glext.h	9457;"	d
GL_HIGH_FLOAT	.\include\GL\glext.h	1815;"	d
GL_HIGH_INT	.\include\GL\glext.h	1818;"	d
GL_HILO16_NV	.\include\GL\glext.h	11097;"	d
GL_HILO8_NV	.\include\GL\glext.h	11158;"	d
GL_HILO_NV	.\include\GL\glext.h	11093;"	d
GL_HISTOGRAM	.\include\GL\glext.h	3493;"	d
GL_HISTOGRAM_ALPHA_SIZE	.\include\GL\glext.h	3500;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	.\include\GL\glext.h	7583;"	d
GL_HISTOGRAM_BLUE_SIZE	.\include\GL\glext.h	3499;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	.\include\GL\glext.h	7582;"	d
GL_HISTOGRAM_EXT	.\include\GL\glext.h	7576;"	d
GL_HISTOGRAM_FORMAT	.\include\GL\glext.h	3496;"	d
GL_HISTOGRAM_FORMAT_EXT	.\include\GL\glext.h	7579;"	d
GL_HISTOGRAM_GREEN_SIZE	.\include\GL\glext.h	3498;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	.\include\GL\glext.h	7581;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	.\include\GL\glext.h	3501;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	.\include\GL\glext.h	7584;"	d
GL_HISTOGRAM_RED_SIZE	.\include\GL\glext.h	3497;"	d
GL_HISTOGRAM_RED_SIZE_EXT	.\include\GL\glext.h	7580;"	d
GL_HISTOGRAM_SINK	.\include\GL\glext.h	3502;"	d
GL_HISTOGRAM_SINK_EXT	.\include\GL\glext.h	7585;"	d
GL_HISTOGRAM_WIDTH	.\include\GL\glext.h	3495;"	d
GL_HISTOGRAM_WIDTH_EXT	.\include\GL\glext.h	7578;"	d
GL_HI_BIAS_NV	.\include\GL\glext.h	11123;"	d
GL_HI_SCALE_NV	.\include\GL\glext.h	11117;"	d
GL_HORIZONTAL_LINE_TO_NV	.\include\GL\glext.h	10399;"	d
GL_HP_convolution_border_modes	.\include\GL\glext.h	8982;"	d
GL_HP_image_transform	.\include\GL\glext.h	8990;"	d
GL_HP_occlusion_test	.\include\GL\glext.h	9023;"	d
GL_HP_texture_lighting	.\include\GL\glext.h	9029;"	d
GL_HSL_COLOR_KHR	.\include\GL\glext.h	4950;"	d
GL_HSL_COLOR_NV	.\include\GL\glext.h	9458;"	d
GL_HSL_HUE_KHR	.\include\GL\glext.h	4948;"	d
GL_HSL_HUE_NV	.\include\GL\glext.h	9459;"	d
GL_HSL_LUMINOSITY_KHR	.\include\GL\glext.h	4951;"	d
GL_HSL_LUMINOSITY_NV	.\include\GL\glext.h	9460;"	d
GL_HSL_SATURATION_KHR	.\include\GL\glext.h	4949;"	d
GL_HSL_SATURATION_NV	.\include\GL\glext.h	9461;"	d
GL_IBM_cull_vertex	.\include\GL\glext.h	9036;"	d
GL_IBM_multimode_draw_arrays	.\include\GL\glext.h	9041;"	d
GL_IBM_rasterpos_clip	.\include\GL\glext.h	9051;"	d
GL_IBM_static_data	.\include\GL\glext.h	9056;"	d
GL_IBM_texture_mirrored_repeat	.\include\GL\glext.h	9066;"	d
GL_IBM_vertex_array_lists	.\include\GL\glext.h	9071;"	d
GL_IDENTITY_NV	.\include\GL\glext.h	11424;"	d
GL_IGNORE_BORDER_HP	.\include\GL\glext.h	8983;"	d
GL_IMAGE_1D	.\include\GL\glext.h	2090;"	d
GL_IMAGE_1D_ARRAY	.\include\GL\glext.h	2096;"	d
GL_IMAGE_1D_ARRAY_EXT	.\include\GL\glext.h	8098;"	d
GL_IMAGE_1D_EXT	.\include\GL\glext.h	8092;"	d
GL_IMAGE_2D	.\include\GL\glext.h	2091;"	d
GL_IMAGE_2D_ARRAY	.\include\GL\glext.h	2097;"	d
GL_IMAGE_2D_ARRAY_EXT	.\include\GL\glext.h	8099;"	d
GL_IMAGE_2D_EXT	.\include\GL\glext.h	8093;"	d
GL_IMAGE_2D_MULTISAMPLE	.\include\GL\glext.h	2099;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	2100;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	.\include\GL\glext.h	8102;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	.\include\GL\glext.h	8101;"	d
GL_IMAGE_2D_RECT	.\include\GL\glext.h	2093;"	d
GL_IMAGE_2D_RECT_EXT	.\include\GL\glext.h	8095;"	d
GL_IMAGE_3D	.\include\GL\glext.h	2092;"	d
GL_IMAGE_3D_EXT	.\include\GL\glext.h	8094;"	d
GL_IMAGE_BINDING_ACCESS	.\include\GL\glext.h	2089;"	d
GL_IMAGE_BINDING_ACCESS_EXT	.\include\GL\glext.h	8091;"	d
GL_IMAGE_BINDING_FORMAT	.\include\GL\glext.h	2124;"	d
GL_IMAGE_BINDING_FORMAT_EXT	.\include\GL\glext.h	8126;"	d
GL_IMAGE_BINDING_LAYER	.\include\GL\glext.h	2088;"	d
GL_IMAGE_BINDING_LAYERED	.\include\GL\glext.h	2087;"	d
GL_IMAGE_BINDING_LAYERED_EXT	.\include\GL\glext.h	8089;"	d
GL_IMAGE_BINDING_LAYER_EXT	.\include\GL\glext.h	8090;"	d
GL_IMAGE_BINDING_LEVEL	.\include\GL\glext.h	2086;"	d
GL_IMAGE_BINDING_LEVEL_EXT	.\include\GL\glext.h	8088;"	d
GL_IMAGE_BINDING_NAME	.\include\GL\glext.h	2085;"	d
GL_IMAGE_BINDING_NAME_EXT	.\include\GL\glext.h	8087;"	d
GL_IMAGE_BUFFER	.\include\GL\glext.h	2095;"	d
GL_IMAGE_BUFFER_EXT	.\include\GL\glext.h	8097;"	d
GL_IMAGE_CLASS_10_10_10_2	.\include\GL\glext.h	2331;"	d
GL_IMAGE_CLASS_11_11_10	.\include\GL\glext.h	2330;"	d
GL_IMAGE_CLASS_1_X_16	.\include\GL\glext.h	2326;"	d
GL_IMAGE_CLASS_1_X_32	.\include\GL\glext.h	2323;"	d
GL_IMAGE_CLASS_1_X_8	.\include\GL\glext.h	2329;"	d
GL_IMAGE_CLASS_2_X_16	.\include\GL\glext.h	2325;"	d
GL_IMAGE_CLASS_2_X_32	.\include\GL\glext.h	2322;"	d
GL_IMAGE_CLASS_2_X_8	.\include\GL\glext.h	2328;"	d
GL_IMAGE_CLASS_4_X_16	.\include\GL\glext.h	2324;"	d
GL_IMAGE_CLASS_4_X_32	.\include\GL\glext.h	2321;"	d
GL_IMAGE_CLASS_4_X_8	.\include\GL\glext.h	2327;"	d
GL_IMAGE_COMPATIBILITY_CLASS	.\include\GL\glext.h	2306;"	d
GL_IMAGE_CUBE	.\include\GL\glext.h	2094;"	d
GL_IMAGE_CUBE_EXT	.\include\GL\glext.h	8096;"	d
GL_IMAGE_CUBE_MAP_ARRAY	.\include\GL\glext.h	2098;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	.\include\GL\glext.h	8100;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	.\include\GL\glext.h	9000;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	.\include\GL\glext.h	2127;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	.\include\GL\glext.h	2126;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	.\include\GL\glext.h	2125;"	d
GL_IMAGE_MAG_FILTER_HP	.\include\GL\glext.h	8998;"	d
GL_IMAGE_MIN_FILTER_HP	.\include\GL\glext.h	8999;"	d
GL_IMAGE_PIXEL_FORMAT	.\include\GL\glext.h	2307;"	d
GL_IMAGE_PIXEL_TYPE	.\include\GL\glext.h	2308;"	d
GL_IMAGE_ROTATE_ANGLE_HP	.\include\GL\glext.h	8995;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	.\include\GL\glext.h	8996;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	.\include\GL\glext.h	8997;"	d
GL_IMAGE_SCALE_X_HP	.\include\GL\glext.h	8991;"	d
GL_IMAGE_SCALE_Y_HP	.\include\GL\glext.h	8992;"	d
GL_IMAGE_TEXEL_SIZE	.\include\GL\glext.h	2305;"	d
GL_IMAGE_TRANSFORM_2D_HP	.\include\GL\glext.h	9003;"	d
GL_IMAGE_TRANSLATE_X_HP	.\include\GL\glext.h	8993;"	d
GL_IMAGE_TRANSLATE_Y_HP	.\include\GL\glext.h	8994;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	.\include\GL\glext.h	1812;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	.\include\GL\glext.h	5324;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	.\include\GL\glext.h	1811;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	.\include\GL\glext.h	5323;"	d
GL_INCLUSIVE_EXT	.\include\GL\glext.h	8944;"	d
GL_INCR_WRAP	.\include\GL\glext.h	330;"	d
GL_INCR_WRAP_EXT	.\include\GL\glext.h	8187;"	d
GL_INDEX	.\include\GL\glext.h	1080;"	d
GL_INDEX_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11366;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	502;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4710;"	d
GL_INDEX_ARRAY_COUNT_EXT	.\include\GL\glext.h	8630;"	d
GL_INDEX_ARRAY_EXT	.\include\GL\glext.h	8614;"	d
GL_INDEX_ARRAY_LENGTH_NV	.\include\GL\glext.h	11376;"	d
GL_INDEX_ARRAY_LIST_IBM	.\include\GL\glext.h	9075;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9083;"	d
GL_INDEX_ARRAY_POINTER_EXT	.\include\GL\glext.h	8640;"	d
GL_INDEX_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8629;"	d
GL_INDEX_ARRAY_TYPE_EXT	.\include\GL\glext.h	8628;"	d
GL_INDEX_BIT_PGI	.\include\GL\glext.h	11857;"	d
GL_INDEX_MATERIAL_EXT	.\include\GL\glext.h	7639;"	d
GL_INDEX_MATERIAL_FACE_EXT	.\include\GL\glext.h	7641;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	.\include\GL\glext.h	7640;"	d
GL_INDEX_TEST_EXT	.\include\GL\glext.h	7628;"	d
GL_INDEX_TEST_FUNC_EXT	.\include\GL\glext.h	7629;"	d
GL_INDEX_TEST_REF_EXT	.\include\GL\glext.h	7630;"	d
GL_INFO_LOG_LENGTH	.\include\GL\glext.h	630;"	d
GL_INGR_blend_func_separate	.\include\GL\glext.h	9109;"	d
GL_INGR_color_clamp	.\include\GL\glext.h	9117;"	d
GL_INGR_interlace_read	.\include\GL\glext.h	9129;"	d
GL_INNOCENT_CONTEXT_RESET	.\include\GL\glext.h	2578;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	.\include\GL\glext.h	3938;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	.\include\GL\glext.h	12275;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	.\include\GL\glext.h	12276;"	d
GL_INT16_NV	.\include\GL\glext.h	5494;"	d
GL_INT16_VEC2_NV	.\include\GL\glext.h	5495;"	d
GL_INT16_VEC3_NV	.\include\GL\glext.h	5496;"	d
GL_INT16_VEC4_NV	.\include\GL\glext.h	5497;"	d
GL_INT64_ARB	.\include\GL\glext.h	3378;"	d
GL_INT64_NV	.\include\GL\glext.h	5488;"	d
GL_INT64_VEC2_ARB	.\include\GL\glext.h	3379;"	d
GL_INT64_VEC2_NV	.\include\GL\glext.h	5498;"	d
GL_INT64_VEC3_ARB	.\include\GL\glext.h	3380;"	d
GL_INT64_VEC3_NV	.\include\GL\glext.h	5499;"	d
GL_INT64_VEC4_ARB	.\include\GL\glext.h	3381;"	d
GL_INT64_VEC4_NV	.\include\GL\glext.h	5500;"	d
GL_INT8_NV	.\include\GL\glext.h	5490;"	d
GL_INT8_VEC2_NV	.\include\GL\glext.h	5491;"	d
GL_INT8_VEC3_NV	.\include\GL\glext.h	5492;"	d
GL_INT8_VEC4_NV	.\include\GL\glext.h	5493;"	d
GL_INTEL_blackhole_render	.\include\GL\glext.h	9134;"	d
GL_INTEL_conservative_rasterization	.\include\GL\glext.h	9139;"	d
GL_INTEL_fragment_shader_ordering	.\include\GL\glext.h	9144;"	d
GL_INTEL_framebuffer_CMAA	.\include\GL\glext.h	9148;"	d
GL_INTEL_map_texture	.\include\GL\glext.h	9156;"	d
GL_INTEL_parallel_arrays	.\include\GL\glext.h	9172;"	d
GL_INTEL_performance_query	.\include\GL\glext.h	9191;"	d
GL_INTENSITY12_EXT	.\include\GL\glext.h	8220;"	d
GL_INTENSITY16F_ARB	.\include\GL\glext.h	4496;"	d
GL_INTENSITY16I_EXT	.\include\GL\glext.h	8412;"	d
GL_INTENSITY16UI_EXT	.\include\GL\glext.h	8394;"	d
GL_INTENSITY16_EXT	.\include\GL\glext.h	8221;"	d
GL_INTENSITY16_SNORM	.\include\GL\glext.h	8547;"	d
GL_INTENSITY32F_ARB	.\include\GL\glext.h	4490;"	d
GL_INTENSITY32I_EXT	.\include\GL\glext.h	8406;"	d
GL_INTENSITY32UI_EXT	.\include\GL\glext.h	8388;"	d
GL_INTENSITY4_EXT	.\include\GL\glext.h	8218;"	d
GL_INTENSITY8I_EXT	.\include\GL\glext.h	8418;"	d
GL_INTENSITY8UI_EXT	.\include\GL\glext.h	8400;"	d
GL_INTENSITY8_EXT	.\include\GL\glext.h	8219;"	d
GL_INTENSITY8_SNORM	.\include\GL\glext.h	8543;"	d
GL_INTENSITY_EXT	.\include\GL\glext.h	8217;"	d
GL_INTENSITY_FLOAT16_APPLE	.\include\GL\glext.h	5860;"	d
GL_INTENSITY_FLOAT16_ATI	.\include\GL\glext.h	6282;"	d
GL_INTENSITY_FLOAT32_APPLE	.\include\GL\glext.h	5854;"	d
GL_INTENSITY_FLOAT32_ATI	.\include\GL\glext.h	6276;"	d
GL_INTENSITY_SNORM	.\include\GL\glext.h	8539;"	d
GL_INTERLACE_OML	.\include\GL\glext.h	11784;"	d
GL_INTERLACE_READ_INGR	.\include\GL\glext.h	9130;"	d
GL_INTERLACE_READ_OML	.\include\GL\glext.h	11785;"	d
GL_INTERLACE_SGIX	.\include\GL\glext.h	12295;"	d
GL_INTERLEAVED_ATTRIBS	.\include\GL\glext.h	934;"	d
GL_INTERLEAVED_ATTRIBS_EXT	.\include\GL\glext.h	8580;"	d
GL_INTERLEAVED_ATTRIBS_NV	.\include\GL\glext.h	11186;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	.\include\GL\glext.h	2255;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	.\include\GL\glext.h	2262;"	d
GL_INTERNALFORMAT_BLUE_SIZE	.\include\GL\glext.h	2254;"	d
GL_INTERNALFORMAT_BLUE_TYPE	.\include\GL\glext.h	2261;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	.\include\GL\glext.h	2256;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	.\include\GL\glext.h	2263;"	d
GL_INTERNALFORMAT_GREEN_SIZE	.\include\GL\glext.h	2253;"	d
GL_INTERNALFORMAT_GREEN_TYPE	.\include\GL\glext.h	2260;"	d
GL_INTERNALFORMAT_PREFERRED	.\include\GL\glext.h	2251;"	d
GL_INTERNALFORMAT_RED_SIZE	.\include\GL\glext.h	2252;"	d
GL_INTERNALFORMAT_RED_TYPE	.\include\GL\glext.h	2259;"	d
GL_INTERNALFORMAT_SHARED_SIZE	.\include\GL\glext.h	2258;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	.\include\GL\glext.h	2257;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	.\include\GL\glext.h	2264;"	d
GL_INTERNALFORMAT_SUPPORTED	.\include\GL\glext.h	2250;"	d
GL_INTERPOLATE	.\include\GL\glext.h	214;"	d
GL_INTERPOLATE_ARB	.\include\GL\glext.h	4450;"	d
GL_INTERPOLATE_EXT	.\include\GL\glext.h	8347;"	d
GL_INT_2_10_10_10_REV	.\include\GL\glext.h	1512;"	d
GL_INT_IMAGE_1D	.\include\GL\glext.h	2101;"	d
GL_INT_IMAGE_1D_ARRAY	.\include\GL\glext.h	2107;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	.\include\GL\glext.h	8109;"	d
GL_INT_IMAGE_1D_EXT	.\include\GL\glext.h	8103;"	d
GL_INT_IMAGE_2D	.\include\GL\glext.h	2102;"	d
GL_INT_IMAGE_2D_ARRAY	.\include\GL\glext.h	2108;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	.\include\GL\glext.h	8110;"	d
GL_INT_IMAGE_2D_EXT	.\include\GL\glext.h	8104;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	.\include\GL\glext.h	2110;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	2111;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	.\include\GL\glext.h	8113;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	.\include\GL\glext.h	8112;"	d
GL_INT_IMAGE_2D_RECT	.\include\GL\glext.h	2104;"	d
GL_INT_IMAGE_2D_RECT_EXT	.\include\GL\glext.h	8106;"	d
GL_INT_IMAGE_3D	.\include\GL\glext.h	2103;"	d
GL_INT_IMAGE_3D_EXT	.\include\GL\glext.h	8105;"	d
GL_INT_IMAGE_BUFFER	.\include\GL\glext.h	2106;"	d
GL_INT_IMAGE_BUFFER_EXT	.\include\GL\glext.h	8108;"	d
GL_INT_IMAGE_CUBE	.\include\GL\glext.h	2105;"	d
GL_INT_IMAGE_CUBE_EXT	.\include\GL\glext.h	8107;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	.\include\GL\glext.h	2109;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	.\include\GL\glext.h	8111;"	d
GL_INT_SAMPLER_1D	.\include\GL\glext.h	965;"	d
GL_INT_SAMPLER_1D_ARRAY	.\include\GL\glext.h	969;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	.\include\GL\glext.h	7535;"	d
GL_INT_SAMPLER_1D_EXT	.\include\GL\glext.h	7530;"	d
GL_INT_SAMPLER_2D	.\include\GL\glext.h	966;"	d
GL_INT_SAMPLER_2D_ARRAY	.\include\GL\glext.h	970;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	.\include\GL\glext.h	7536;"	d
GL_INT_SAMPLER_2D_EXT	.\include\GL\glext.h	7531;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	.\include\GL\glext.h	1445;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1448;"	d
GL_INT_SAMPLER_2D_RECT	.\include\GL\glext.h	1298;"	d
GL_INT_SAMPLER_2D_RECT_EXT	.\include\GL\glext.h	7534;"	d
GL_INT_SAMPLER_3D	.\include\GL\glext.h	967;"	d
GL_INT_SAMPLER_3D_EXT	.\include\GL\glext.h	7532;"	d
GL_INT_SAMPLER_BUFFER	.\include\GL\glext.h	1299;"	d
GL_INT_SAMPLER_BUFFER_AMD	.\include\GL\glext.h	5777;"	d
GL_INT_SAMPLER_BUFFER_EXT	.\include\GL\glext.h	7537;"	d
GL_INT_SAMPLER_CUBE	.\include\GL\glext.h	968;"	d
GL_INT_SAMPLER_CUBE_EXT	.\include\GL\glext.h	7533;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	.\include\GL\glext.h	1644;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4423;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	.\include\GL\glext.h	9769;"	d
GL_INT_VEC2	.\include\GL\glext.h	610;"	d
GL_INT_VEC2_ARB	.\include\GL\glext.h	4087;"	d
GL_INT_VEC3	.\include\GL\glext.h	611;"	d
GL_INT_VEC3_ARB	.\include\GL\glext.h	4088;"	d
GL_INT_VEC4	.\include\GL\glext.h	612;"	d
GL_INT_VEC4_ARB	.\include\GL\glext.h	4089;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	.\include\GL\glext.h	987;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	.\include\GL\glext.h	7385;"	d
GL_INVALID_INDEX	.\include\GL\glext.h	1355;"	d
GL_INVARIANT_DATATYPE_EXT	.\include\GL\glext.h	8816;"	d
GL_INVARIANT_EXT	.\include\GL\glext.h	8775;"	d
GL_INVARIANT_VALUE_EXT	.\include\GL\glext.h	8815;"	d
GL_INVERSE_NV	.\include\GL\glext.h	11425;"	d
GL_INVERSE_TRANSPOSE_NV	.\include\GL\glext.h	11427;"	d
GL_INVERTED_SCREEN_W_REND	.\include\GL\glext.h	11877;"	d
GL_INVERT_OVG_NV	.\include\GL\glext.h	9462;"	d
GL_INVERT_RGB_NV	.\include\GL\glext.h	9463;"	d
GL_IR_INSTRUMENT1_SGIX	.\include\GL\glext.h	12300;"	d
GL_ISOLINES	.\include\GL\glext.h	1684;"	d
GL_IS_PER_PATCH	.\include\GL\glext.h	2394;"	d
GL_IS_ROW_MAJOR	.\include\GL\glext.h	2378;"	d
GL_ITALIC_BIT_NV	.\include\GL\glext.h	10429;"	d
GL_IUI_N3F_V2F_EXT	.\include\GL\glext.h	7618;"	d
GL_IUI_N3F_V3F_EXT	.\include\GL\glext.h	7619;"	d
GL_IUI_V2F_EXT	.\include\GL\glext.h	7616;"	d
GL_IUI_V3F_EXT	.\include\GL\glext.h	7617;"	d
GL_KHR_blend_equation_advanced	.\include\GL\glext.h	4936;"	d
GL_KHR_blend_equation_advanced_coherent	.\include\GL\glext.h	4959;"	d
GL_KHR_context_flush_control	.\include\GL\glext.h	4964;"	d
GL_KHR_debug	.\include\GL\glext.h	4968;"	d
GL_KHR_no_error	.\include\GL\glext.h	4972;"	d
GL_KHR_parallel_shader_compile	.\include\GL\glext.h	4977;"	d
GL_KHR_robust_buffer_access_behavior	.\include\GL\glext.h	4987;"	d
GL_KHR_robustness	.\include\GL\glext.h	4991;"	d
GL_KHR_texture_compression_astc_hdr	.\include\GL\glext.h	4996;"	d
GL_KHR_texture_compression_astc_ldr	.\include\GL\glext.h	5028;"	d
GL_KHR_texture_compression_astc_sliced_3d	.\include\GL\glext.h	5032;"	d
GL_LARGE_CCW_ARC_TO_NV	.\include\GL\glext.h	10415;"	d
GL_LARGE_CW_ARC_TO_NV	.\include\GL\glext.h	10417;"	d
GL_LAST_VERTEX_CONVENTION	.\include\GL\glext.h	1414;"	d
GL_LAST_VERTEX_CONVENTION_EXT	.\include\GL\glext.h	7923;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	.\include\GL\glext.h	11708;"	d
GL_LAYER_NV	.\include\GL\glext.h	11190;"	d
GL_LAYER_PROVOKING_VERTEX	.\include\GL\glext.h	1842;"	d
GL_LAYOUT_COLOR_ATTACHMENT_EXT	.\include\GL\glext.h	8000;"	d
GL_LAYOUT_DEFAULT_INTEL	.\include\GL\glext.h	9158;"	d
GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT	.\include\GL\glext.h	8007;"	d
GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT	.\include\GL\glext.h	8006;"	d
GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT	.\include\GL\glext.h	8001;"	d
GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT	.\include\GL\glext.h	8002;"	d
GL_LAYOUT_GENERAL_EXT	.\include\GL\glext.h	7999;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	.\include\GL\glext.h	9160;"	d
GL_LAYOUT_LINEAR_INTEL	.\include\GL\glext.h	9159;"	d
GL_LAYOUT_SHADER_READ_ONLY_EXT	.\include\GL\glext.h	8003;"	d
GL_LAYOUT_TRANSFER_DST_EXT	.\include\GL\glext.h	8005;"	d
GL_LAYOUT_TRANSFER_SRC_EXT	.\include\GL\glext.h	8004;"	d
GL_LERP_ATI	.\include\GL\glext.h	6139;"	d
GL_LGPU_SEPARATE_STORAGE_BIT_NVX	.\include\GL\glext.h	9361;"	d
GL_LIGHTEN_KHR	.\include\GL\glext.h	4941;"	d
GL_LIGHTEN_NV	.\include\GL\glext.h	9464;"	d
GL_LIGHT_ENV_MODE_SGIX	.\include\GL\glext.h	12201;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	.\include\GL\glext.h	107;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	.\include\GL\glext.h	8061;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	.\include\GL\glext.h	5912;"	d
GL_LINEARBURN_NV	.\include\GL\glext.h	9465;"	d
GL_LINEARDODGE_NV	.\include\GL\glext.h	9466;"	d
GL_LINEARLIGHT_NV	.\include\GL\glext.h	9467;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	.\include\GL\glext.h	12148;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	.\include\GL\glext.h	12159;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	.\include\GL\glext.h	11895;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	.\include\GL\glext.h	11896;"	d
GL_LINEAR_DETAIL_SGIS	.\include\GL\glext.h	11894;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	.\include\GL\glext.h	12004;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	.\include\GL\glext.h	12005;"	d
GL_LINEAR_SHARPEN_SGIS	.\include\GL\glext.h	12003;"	d
GL_LINEAR_TILING_EXT	.\include\GL\glext.h	7681;"	d
GL_LINES_ADJACENCY	.\include\GL\glext.h	1391;"	d
GL_LINES_ADJACENCY_ARB	.\include\GL\glext.h	3320;"	d
GL_LINES_ADJACENCY_EXT	.\include\GL\glext.h	7493;"	d
GL_LINE_STRIP_ADJACENCY	.\include\GL\glext.h	1392;"	d
GL_LINE_STRIP_ADJACENCY_ARB	.\include\GL\glext.h	3321;"	d
GL_LINE_STRIP_ADJACENCY_EXT	.\include\GL\glext.h	7494;"	d
GL_LINE_TO_NV	.\include\GL\glext.h	10397;"	d
GL_LINE_WIDTH_COMMAND_NV	.\include\GL\glext.h	9535;"	d
GL_LINK_STATUS	.\include\GL\glext.h	628;"	d
GL_LIST_PRIORITY_SGIX	.\include\GL\glext.h	12305;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	.\include\GL\glext.h	8818;"	d
GL_LOCAL_CONSTANT_EXT	.\include\GL\glext.h	8776;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	.\include\GL\glext.h	8817;"	d
GL_LOCAL_EXT	.\include\GL\glext.h	8777;"	d
GL_LOCATION	.\include\GL\glext.h	2392;"	d
GL_LOCATION_COMPONENT	.\include\GL\glext.h	2532;"	d
GL_LOCATION_INDEX	.\include\GL\glext.h	2393;"	d
GL_LOSE_CONTEXT_ON_RESET	.\include\GL\glext.h	2581;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	.\include\GL\glext.h	3936;"	d
GL_LOWER_LEFT	.\include\GL\glext.h	641;"	d
GL_LOW_FLOAT	.\include\GL\glext.h	1813;"	d
GL_LOW_INT	.\include\GL\glext.h	1816;"	d
GL_LO_BIAS_NV	.\include\GL\glext.h	11124;"	d
GL_LO_SCALE_NV	.\include\GL\glext.h	11118;"	d
GL_LUID_SIZE_EXT	.\include\GL\glext.h	7743;"	d
GL_LUMINANCE12_ALPHA12_EXT	.\include\GL\glext.h	8215;"	d
GL_LUMINANCE12_ALPHA4_EXT	.\include\GL\glext.h	8214;"	d
GL_LUMINANCE12_EXT	.\include\GL\glext.h	8209;"	d
GL_LUMINANCE16F_ARB	.\include\GL\glext.h	4497;"	d
GL_LUMINANCE16I_EXT	.\include\GL\glext.h	8413;"	d
GL_LUMINANCE16UI_EXT	.\include\GL\glext.h	8395;"	d
GL_LUMINANCE16_ALPHA16_EXT	.\include\GL\glext.h	8216;"	d
GL_LUMINANCE16_ALPHA16_SNORM	.\include\GL\glext.h	8546;"	d
GL_LUMINANCE16_EXT	.\include\GL\glext.h	8210;"	d
GL_LUMINANCE16_SNORM	.\include\GL\glext.h	8545;"	d
GL_LUMINANCE32F_ARB	.\include\GL\glext.h	4491;"	d
GL_LUMINANCE32I_EXT	.\include\GL\glext.h	8407;"	d
GL_LUMINANCE32UI_EXT	.\include\GL\glext.h	8389;"	d
GL_LUMINANCE4_ALPHA4_EXT	.\include\GL\glext.h	8211;"	d
GL_LUMINANCE4_EXT	.\include\GL\glext.h	8207;"	d
GL_LUMINANCE6_ALPHA2_EXT	.\include\GL\glext.h	8212;"	d
GL_LUMINANCE8I_EXT	.\include\GL\glext.h	8419;"	d
GL_LUMINANCE8UI_EXT	.\include\GL\glext.h	8401;"	d
GL_LUMINANCE8_ALPHA8_EXT	.\include\GL\glext.h	8213;"	d
GL_LUMINANCE8_ALPHA8_SNORM	.\include\GL\glext.h	8542;"	d
GL_LUMINANCE8_EXT	.\include\GL\glext.h	8208;"	d
GL_LUMINANCE8_SNORM	.\include\GL\glext.h	8541;"	d
GL_LUMINANCE_ALPHA16F_ARB	.\include\GL\glext.h	4498;"	d
GL_LUMINANCE_ALPHA16I_EXT	.\include\GL\glext.h	8414;"	d
GL_LUMINANCE_ALPHA16UI_EXT	.\include\GL\glext.h	8396;"	d
GL_LUMINANCE_ALPHA32F_ARB	.\include\GL\glext.h	4492;"	d
GL_LUMINANCE_ALPHA32I_EXT	.\include\GL\glext.h	8408;"	d
GL_LUMINANCE_ALPHA32UI_EXT	.\include\GL\glext.h	8390;"	d
GL_LUMINANCE_ALPHA8I_EXT	.\include\GL\glext.h	8420;"	d
GL_LUMINANCE_ALPHA8UI_EXT	.\include\GL\glext.h	8402;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	.\include\GL\glext.h	5862;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	.\include\GL\glext.h	6284;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	.\include\GL\glext.h	5856;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	.\include\GL\glext.h	6278;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	.\include\GL\glext.h	8430;"	d
GL_LUMINANCE_ALPHA_SNORM	.\include\GL\glext.h	8538;"	d
GL_LUMINANCE_FLOAT16_APPLE	.\include\GL\glext.h	5861;"	d
GL_LUMINANCE_FLOAT16_ATI	.\include\GL\glext.h	6283;"	d
GL_LUMINANCE_FLOAT32_APPLE	.\include\GL\glext.h	5855;"	d
GL_LUMINANCE_FLOAT32_ATI	.\include\GL\glext.h	6277;"	d
GL_LUMINANCE_INTEGER_EXT	.\include\GL\glext.h	8429;"	d
GL_LUMINANCE_SNORM	.\include\GL\glext.h	8537;"	d
GL_MAD_ATI	.\include\GL\glext.h	6138;"	d
GL_MAGNITUDE_BIAS_NV	.\include\GL\glext.h	11127;"	d
GL_MAGNITUDE_SCALE_NV	.\include\GL\glext.h	11121;"	d
GL_MAJOR_VERSION	.\include\GL\glext.h	894;"	d
GL_MANUAL_GENERATE_MIPMAP	.\include\GL\glext.h	2287;"	d
GL_MAP1_BINORMAL_EXT	.\include\GL\glext.h	6655;"	d
GL_MAP1_TANGENT_EXT	.\include\GL\glext.h	6653;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	.\include\GL\glext.h	11466;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	.\include\GL\glext.h	11476;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	.\include\GL\glext.h	11477;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	.\include\GL\glext.h	11478;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	.\include\GL\glext.h	11479;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	.\include\GL\glext.h	11480;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	.\include\GL\glext.h	11481;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	.\include\GL\glext.h	11467;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	.\include\GL\glext.h	11468;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	.\include\GL\glext.h	11469;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	.\include\GL\glext.h	11470;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	.\include\GL\glext.h	11471;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	.\include\GL\glext.h	11472;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	.\include\GL\glext.h	11473;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	.\include\GL\glext.h	11474;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	.\include\GL\glext.h	11475;"	d
GL_MAP2_BINORMAL_EXT	.\include\GL\glext.h	6656;"	d
GL_MAP2_TANGENT_EXT	.\include\GL\glext.h	6654;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	.\include\GL\glext.h	11482;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	.\include\GL\glext.h	11492;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	.\include\GL\glext.h	11493;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	.\include\GL\glext.h	11494;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	.\include\GL\glext.h	11495;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	.\include\GL\glext.h	11496;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	.\include\GL\glext.h	11497;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	.\include\GL\glext.h	11483;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	.\include\GL\glext.h	11484;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	.\include\GL\glext.h	11485;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	.\include\GL\glext.h	11486;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	.\include\GL\glext.h	11487;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	.\include\GL\glext.h	11488;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	.\include\GL\glext.h	11489;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	.\include\GL\glext.h	11490;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	.\include\GL\glext.h	11491;"	d
GL_MAP_ATTRIB_U_ORDER_NV	.\include\GL\glext.h	9717;"	d
GL_MAP_ATTRIB_V_ORDER_NV	.\include\GL\glext.h	9718;"	d
GL_MAP_COHERENT_BIT	.\include\GL\glext.h	2525;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	.\include\GL\glext.h	1089;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	.\include\GL\glext.h	1088;"	d
GL_MAP_INVALIDATE_RANGE_BIT	.\include\GL\glext.h	1087;"	d
GL_MAP_PERSISTENT_BIT	.\include\GL\glext.h	2524;"	d
GL_MAP_READ_BIT	.\include\GL\glext.h	1085;"	d
GL_MAP_TESSELLATION_NV	.\include\GL\glext.h	9716;"	d
GL_MAP_UNSYNCHRONIZED_BIT	.\include\GL\glext.h	1090;"	d
GL_MAP_WRITE_BIT	.\include\GL\glext.h	1086;"	d
GL_MATERIAL_SIDE_HINT_PGI	.\include\GL\glext.h	11852;"	d
GL_MATRIX0_ARB	.\include\GL\glext.h	3217;"	d
GL_MATRIX0_NV	.\include\GL\glext.h	11430;"	d
GL_MATRIX10_ARB	.\include\GL\glext.h	3227;"	d
GL_MATRIX11_ARB	.\include\GL\glext.h	3228;"	d
GL_MATRIX12_ARB	.\include\GL\glext.h	3229;"	d
GL_MATRIX13_ARB	.\include\GL\glext.h	3230;"	d
GL_MATRIX14_ARB	.\include\GL\glext.h	3231;"	d
GL_MATRIX15_ARB	.\include\GL\glext.h	3232;"	d
GL_MATRIX16_ARB	.\include\GL\glext.h	3233;"	d
GL_MATRIX17_ARB	.\include\GL\glext.h	3234;"	d
GL_MATRIX18_ARB	.\include\GL\glext.h	3235;"	d
GL_MATRIX19_ARB	.\include\GL\glext.h	3236;"	d
GL_MATRIX1_ARB	.\include\GL\glext.h	3218;"	d
GL_MATRIX1_NV	.\include\GL\glext.h	11431;"	d
GL_MATRIX20_ARB	.\include\GL\glext.h	3237;"	d
GL_MATRIX21_ARB	.\include\GL\glext.h	3238;"	d
GL_MATRIX22_ARB	.\include\GL\glext.h	3239;"	d
GL_MATRIX23_ARB	.\include\GL\glext.h	3240;"	d
GL_MATRIX24_ARB	.\include\GL\glext.h	3241;"	d
GL_MATRIX25_ARB	.\include\GL\glext.h	3242;"	d
GL_MATRIX26_ARB	.\include\GL\glext.h	3243;"	d
GL_MATRIX27_ARB	.\include\GL\glext.h	3244;"	d
GL_MATRIX28_ARB	.\include\GL\glext.h	3245;"	d
GL_MATRIX29_ARB	.\include\GL\glext.h	3246;"	d
GL_MATRIX2_ARB	.\include\GL\glext.h	3219;"	d
GL_MATRIX2_NV	.\include\GL\glext.h	11432;"	d
GL_MATRIX30_ARB	.\include\GL\glext.h	3247;"	d
GL_MATRIX31_ARB	.\include\GL\glext.h	3248;"	d
GL_MATRIX3_ARB	.\include\GL\glext.h	3220;"	d
GL_MATRIX3_NV	.\include\GL\glext.h	11433;"	d
GL_MATRIX4_ARB	.\include\GL\glext.h	3221;"	d
GL_MATRIX4_NV	.\include\GL\glext.h	11434;"	d
GL_MATRIX5_ARB	.\include\GL\glext.h	3222;"	d
GL_MATRIX5_NV	.\include\GL\glext.h	11435;"	d
GL_MATRIX6_ARB	.\include\GL\glext.h	3223;"	d
GL_MATRIX6_NV	.\include\GL\glext.h	11436;"	d
GL_MATRIX7_ARB	.\include\GL\glext.h	3224;"	d
GL_MATRIX7_NV	.\include\GL\glext.h	11437;"	d
GL_MATRIX8_ARB	.\include\GL\glext.h	3225;"	d
GL_MATRIX9_ARB	.\include\GL\glext.h	3226;"	d
GL_MATRIX_EXT	.\include\GL\glext.h	8773;"	d
GL_MATRIX_INDEX_ARRAY_ARB	.\include\GL\glext.h	3672;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	.\include\GL\glext.h	3677;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	.\include\GL\glext.h	3674;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	.\include\GL\glext.h	3676;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	.\include\GL\glext.h	3675;"	d
GL_MATRIX_PALETTE_ARB	.\include\GL\glext.h	3668;"	d
GL_MATRIX_STRIDE	.\include\GL\glext.h	2377;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	.\include\GL\glext.h	11859;"	d
GL_MAT_AMBIENT_BIT_PGI	.\include\GL\glext.h	11858;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	.\include\GL\glext.h	11862;"	d
GL_MAT_DIFFUSE_BIT_PGI	.\include\GL\glext.h	11860;"	d
GL_MAT_EMISSION_BIT_PGI	.\include\GL\glext.h	11861;"	d
GL_MAT_SHININESS_BIT_PGI	.\include\GL\glext.h	11863;"	d
GL_MAT_SPECULAR_BIT_PGI	.\include\GL\glext.h	11864;"	d
GL_MAX	.\include\GL\glext.h	368;"	d
GL_MAX_3D_TEXTURE_SIZE	.\include\GL\glext.h	84;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	.\include\GL\glext.h	8258;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	.\include\GL\glext.h	12025;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	.\include\GL\glext.h	12199;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	.\include\GL\glext.h	906;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	.\include\GL\glext.h	8275;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	.\include\GL\glext.h	12131;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	.\include\GL\glext.h	12122;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	.\include\GL\glext.h	12132;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	.\include\GL\glext.h	12130;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	.\include\GL\glext.h	2066;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	.\include\GL\glext.h	2065;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	.\include\GL\glext.h	6484;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	.\include\GL\glext.h	12155;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	.\include\GL\glext.h	12156;"	d
GL_MAX_CLIP_DISTANCES	.\include\GL\glext.h	893;"	d
GL_MAX_COARSE_FRAGMENT_SAMPLES_NV	.\include\GL\glext.h	10954;"	d
GL_MAX_COLOR_ATTACHMENTS	.\include\GL\glext.h	1028;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	.\include\GL\glext.h	7402;"	d
GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD	.\include\GL\glext.h	5429;"	d
GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD	.\include\GL\glext.h	5430;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	.\include\GL\glext.h	3509;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	.\include\GL\glext.h	12497;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	.\include\GL\glext.h	1450;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	.\include\GL\glext.h	2064;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2058;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	.\include\GL\glext.h	2574;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	.\include\GL\glext.h	2193;"	d
GL_MAX_COMBINED_DIMENSIONS	.\include\GL\glext.h	2269;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	.\include\GL\glext.h	1335;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	.\include\GL\glext.h	1334;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	.\include\GL\glext.h	2133;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	.\include\GL\glext.h	2084;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	.\include\GL\glext.h	8086;"	d
GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV	.\include\GL\glext.h	10214;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	.\include\GL\glext.h	2410;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2405;"	d
GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV	.\include\GL\glext.h	10222;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	.\include\GL\glext.h	1701;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	.\include\GL\glext.h	1702;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	605;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	.\include\GL\glext.h	4872;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	.\include\GL\glext.h	1330;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	.\include\GL\glext.h	1333;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	.\include\GL\glext.h	2192;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2191;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	.\include\GL\glext.h	3001;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	.\include\GL\glext.h	3003;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	.\include\GL\glext.h	2188;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2404;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	.\include\GL\glext.h	2189;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	2187;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	.\include\GL\glext.h	2186;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	.\include\GL\glext.h	2190;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	.\include\GL\glext.h	3000;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	.\include\GL\glext.h	3002;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	.\include\GL\glext.h	2195;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	.\include\GL\glext.h	2194;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	.\include\GL\glext.h	2196;"	d
GL_MAX_CONVOLUTION_HEIGHT	.\include\GL\glext.h	3484;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	.\include\GL\glext.h	6602;"	d
GL_MAX_CONVOLUTION_WIDTH	.\include\GL\glext.h	3483;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	.\include\GL\glext.h	6601;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	.\include\GL\glext.h	175;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	.\include\GL\glext.h	4413;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	.\include\GL\glext.h	8333;"	d
GL_MAX_CULL_DISTANCES	.\include\GL\glext.h	2573;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	.\include\GL\glext.h	2229;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	.\include\GL\glext.h	2220;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	.\include\GL\glext.h	5381;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	.\include\GL\glext.h	3050;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	.\include\GL\glext.h	2219;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	.\include\GL\glext.h	5380;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	.\include\GL\glext.h	3049;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	.\include\GL\glext.h	9663;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	.\include\GL\glext.h	9662;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	.\include\GL\glext.h	12351;"	d
GL_MAX_DEPTH	.\include\GL\glext.h	2267;"	d
GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD	.\include\GL\glext.h	5431;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	.\include\GL\glext.h	1451;"	d
GL_MAX_DETACHED_BUFFERS_NV	.\include\GL\glext.h	10186;"	d
GL_MAX_DETACHED_TEXTURES_NV	.\include\GL\glext.h	10185;"	d
GL_MAX_DRAW_BUFFERS	.\include\GL\glext.h	578;"	d
GL_MAX_DRAW_BUFFERS_ARB	.\include\GL\glext.h	3094;"	d
GL_MAX_DRAW_BUFFERS_ATI	.\include\GL\glext.h	6005;"	d
GL_MAX_DRAW_MESH_TASKS_COUNT_NV	.\include\GL\glext.h	10230;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	.\include\GL\glext.h	1501;"	d
GL_MAX_ELEMENTS_INDICES	.\include\GL\glext.h	95;"	d
GL_MAX_ELEMENTS_INDICES_EXT	.\include\GL\glext.h	7312;"	d
GL_MAX_ELEMENTS_VERTICES	.\include\GL\glext.h	94;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	.\include\GL\glext.h	7311;"	d
GL_MAX_ELEMENT_INDEX	.\include\GL\glext.h	2184;"	d
GL_MAX_EXT	.\include\GL\glext.h	6539;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	.\include\GL\glext.h	11912;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	.\include\GL\glext.h	2063;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2057;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	.\include\GL\glext.h	6482;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	.\include\GL\glext.h	2132;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	.\include\GL\glext.h	1409;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	.\include\GL\glext.h	1651;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	.\include\GL\glext.h	10035;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	.\include\GL\glext.h	12198;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	.\include\GL\glext.h	9848;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2403;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	.\include\GL\glext.h	1329;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	.\include\GL\glext.h	601;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	.\include\GL\glext.h	3298;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	.\include\GL\glext.h	1824;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	.\include\GL\glext.h	2247;"	d
GL_MAX_FRAMEBUFFER_LAYERS	.\include\GL\glext.h	2248;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	.\include\GL\glext.h	2249;"	d
GL_MAX_FRAMEBUFFER_WIDTH	.\include\GL\glext.h	2246;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	.\include\GL\glext.h	12258;"	d
GL_MAX_GENERAL_COMBINERS_NV	.\include\GL\glext.h	10758;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	.\include\GL\glext.h	2062;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2056;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	.\include\GL\glext.h	6483;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	.\include\GL\glext.h	2131;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	.\include\GL\glext.h	1407;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	.\include\GL\glext.h	1408;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	.\include\GL\glext.h	1404;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	.\include\GL\glext.h	3336;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	.\include\GL\glext.h	7491;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	.\include\GL\glext.h	10033;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	.\include\GL\glext.h	1649;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2400;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	1396;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	.\include\GL\glext.h	3325;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	.\include\GL\glext.h	7486;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	.\include\GL\glext.h	1405;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	.\include\GL\glext.h	3337;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	.\include\GL\glext.h	7492;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	.\include\GL\glext.h	1328;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	.\include\GL\glext.h	1403;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	.\include\GL\glext.h	3335;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	.\include\GL\glext.h	7490;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	.\include\GL\glext.h	3333;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	.\include\GL\glext.h	7487;"	d
GL_MAX_HEIGHT	.\include\GL\glext.h	2266;"	d
GL_MAX_IMAGE_SAMPLES	.\include\GL\glext.h	2123;"	d
GL_MAX_IMAGE_SAMPLES_EXT	.\include\GL\glext.h	8125;"	d
GL_MAX_IMAGE_UNITS	.\include\GL\glext.h	2083;"	d
GL_MAX_IMAGE_UNITS_EXT	.\include\GL\glext.h	8085;"	d
GL_MAX_INTEGER_SAMPLES	.\include\GL\glext.h	1452;"	d
GL_MAX_LABEL_LENGTH	.\include\GL\glext.h	2237;"	d
GL_MAX_LAYERS	.\include\GL\glext.h	2268;"	d
GL_MAX_LGPU_GPUS_NVX	.\include\GL\glext.h	9362;"	d
GL_MAX_MAP_TESSELLATION_NV	.\include\GL\glext.h	9736;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	.\include\GL\glext.h	3669;"	d
GL_MAX_MESH_ATOMIC_COUNTERS_NV	.\include\GL\glext.h	10212;"	d
GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV	.\include\GL\glext.h	10211;"	d
GL_MAX_MESH_IMAGE_UNIFORMS_NV	.\include\GL\glext.h	10209;"	d
GL_MAX_MESH_OUTPUT_PRIMITIVES_NV	.\include\GL\glext.h	10228;"	d
GL_MAX_MESH_OUTPUT_VERTICES_NV	.\include\GL\glext.h	10227;"	d
GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV	.\include\GL\glext.h	10213;"	d
GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV	.\include\GL\glext.h	10208;"	d
GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV	.\include\GL\glext.h	10225;"	d
GL_MAX_MESH_UNIFORM_BLOCKS_NV	.\include\GL\glext.h	10207;"	d
GL_MAX_MESH_UNIFORM_COMPONENTS_NV	.\include\GL\glext.h	10210;"	d
GL_MAX_MESH_VIEWS_NV	.\include\GL\glext.h	10231;"	d
GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV	.\include\GL\glext.h	10223;"	d
GL_MAX_MESH_WORK_GROUP_SIZE_NV	.\include\GL\glext.h	10234;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	.\include\GL\glext.h	9919;"	d
GL_MAX_NAME_LENGTH	.\include\GL\glext.h	2368;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	.\include\GL\glext.h	2369;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	.\include\GL\glext.h	2370;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	.\include\GL\glext.h	8783;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	.\include\GL\glext.h	8786;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	.\include\GL\glext.h	8787;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	.\include\GL\glext.h	8785;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	.\include\GL\glext.h	8784;"	d
GL_MAX_PALETTE_MATRICES_ARB	.\include\GL\glext.h	3670;"	d
GL_MAX_PATCH_VERTICES	.\include\GL\glext.h	1687;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	.\include\GL\glext.h	7859;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	.\include\GL\glext.h	6229;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	.\include\GL\glext.h	4773;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	.\include\GL\glext.h	3201;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	.\include\GL\glext.h	3189;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	.\include\GL\glext.h	9991;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	.\include\GL\glext.h	9873;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	.\include\GL\glext.h	3193;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	.\include\GL\glext.h	9872;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	.\include\GL\glext.h	9993;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	.\include\GL\glext.h	9994;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	.\include\GL\glext.h	9874;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	.\include\GL\glext.h	3177;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	.\include\GL\glext.h	3192;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	.\include\GL\glext.h	9876;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	.\include\GL\glext.h	9875;"	d
GL_MAX_PROGRAM_MATRICES_ARB	.\include\GL\glext.h	3212;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	.\include\GL\glext.h	3213;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	.\include\GL\glext.h	4775;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	.\include\GL\glext.h	3204;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	.\include\GL\glext.h	3191;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	.\include\GL\glext.h	3179;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	.\include\GL\glext.h	3187;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	.\include\GL\glext.h	3183;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	.\include\GL\glext.h	3206;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	.\include\GL\glext.h	3205;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	.\include\GL\glext.h	9930;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	.\include\GL\glext.h	3185;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	.\include\GL\glext.h	10306;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	.\include\GL\glext.h	10307;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	.\include\GL\glext.h	10982;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	.\include\GL\glext.h	9992;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	.\include\GL\glext.h	10040;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	.\include\GL\glext.h	10039;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	.\include\GL\glext.h	3181;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	.\include\GL\glext.h	908;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT	.\include\GL\glext.h	7547;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	.\include\GL\glext.h	9988;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	.\include\GL\glext.h	4505;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	.\include\GL\glext.h	1638;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	.\include\GL\glext.h	4504;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	.\include\GL\glext.h	10038;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	.\include\GL\glext.h	3203;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	.\include\GL\glext.h	3202;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	.\include\GL\glext.h	9931;"	d
GL_MAX_RASTER_SAMPLES_EXT	.\include\GL\glext.h	7935;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	.\include\GL\glext.h	9737;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	.\include\GL\glext.h	1309;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	.\include\GL\glext.h	4538;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	.\include\GL\glext.h	11053;"	d
GL_MAX_RENDERBUFFER_SIZE	.\include\GL\glext.h	999;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	.\include\GL\glext.h	7386;"	d
GL_MAX_SAMPLES	.\include\GL\glext.h	1079;"	d
GL_MAX_SAMPLES_EXT	.\include\GL\glext.h	7370;"	d
GL_MAX_SAMPLE_MASK_WORDS	.\include\GL\glext.h	1435;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	.\include\GL\glext.h	9771;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	.\include\GL\glext.h	1417;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	.\include\GL\glext.h	10880;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	.\include\GL\glext.h	3859;"	d
GL_MAX_SHADER_COMPILER_THREADS_KHR	.\include\GL\glext.h	4978;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	.\include\GL\glext.h	2407;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	.\include\GL\glext.h	2406;"	d
GL_MAX_SHININESS_NV	.\include\GL\glext.h	10171;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	.\include\GL\glext.h	5728;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	.\include\GL\glext.h	4294;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	.\include\GL\glext.h	5729;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	.\include\GL\glext.h	4295;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	.\include\GL\glext.h	5727;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	.\include\GL\glext.h	4293;"	d
GL_MAX_SPOT_EXPONENT_NV	.\include\GL\glext.h	10172;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	.\include\GL\glext.h	9608;"	d
GL_MAX_SUBROUTINES	.\include\GL\glext.h	1671;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	.\include\GL\glext.h	1672;"	d
GL_MAX_TASK_ATOMIC_COUNTERS_NV	.\include\GL\glext.h	10220;"	d
GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV	.\include\GL\glext.h	10219;"	d
GL_MAX_TASK_IMAGE_UNIFORMS_NV	.\include\GL\glext.h	10217;"	d
GL_MAX_TASK_OUTPUT_COUNT_NV	.\include\GL\glext.h	10229;"	d
GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV	.\include\GL\glext.h	10221;"	d
GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV	.\include\GL\glext.h	10216;"	d
GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV	.\include\GL\glext.h	10226;"	d
GL_MAX_TASK_UNIFORM_BLOCKS_NV	.\include\GL\glext.h	10215;"	d
GL_MAX_TASK_UNIFORM_COMPONENTS_NV	.\include\GL\glext.h	10218;"	d
GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV	.\include\GL\glext.h	10224;"	d
GL_MAX_TASK_WORK_GROUP_SIZE_NV	.\include\GL\glext.h	10235;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	.\include\GL\glext.h	2060;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2054;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	.\include\GL\glext.h	2129;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	.\include\GL\glext.h	1699;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	.\include\GL\glext.h	1693;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2401;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	1691;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	.\include\GL\glext.h	1695;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	.\include\GL\glext.h	1697;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	.\include\GL\glext.h	1689;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	.\include\GL\glext.h	2061;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2055;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	.\include\GL\glext.h	2130;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	.\include\GL\glext.h	1700;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	.\include\GL\glext.h	1696;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2402;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	1692;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	.\include\GL\glext.h	1698;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	.\include\GL\glext.h	1690;"	d
GL_MAX_TESS_GEN_LEVEL	.\include\GL\glext.h	1688;"	d
GL_MAX_TESS_PATCH_COMPONENTS	.\include\GL\glext.h	1694;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	.\include\GL\glext.h	1303;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	.\include\GL\glext.h	4339;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	.\include\GL\glext.h	8286;"	d
GL_MAX_TEXTURE_COORDS	.\include\GL\glext.h	649;"	d
GL_MAX_TEXTURE_COORDS_ARB	.\include\GL\glext.h	3214;"	d
GL_MAX_TEXTURE_COORDS_NV	.\include\GL\glext.h	9850;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	598;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	.\include\GL\glext.h	3215;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	.\include\GL\glext.h	9851;"	d
GL_MAX_TEXTURE_LOD_BIAS	.\include\GL\glext.h	328;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	.\include\GL\glext.h	8450;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY	.\include\GL\glext.h	2855;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	.\include\GL\glext.h	8374;"	d
GL_MAX_TEXTURE_UNITS	.\include\GL\glext.h	185;"	d
GL_MAX_TEXTURE_UNITS_ARB	.\include\GL\glext.h	3753;"	d
GL_MAX_TRACK_MATRICES_NV	.\include\GL\glext.h	11429;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	.\include\GL\glext.h	11428;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	.\include\GL\glext.h	1711;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	.\include\GL\glext.h	932;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	.\include\GL\glext.h	8585;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	.\include\GL\glext.h	11184;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	.\include\GL\glext.h	933;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	.\include\GL\glext.h	8586;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	.\include\GL\glext.h	11185;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	.\include\GL\glext.h	925;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	.\include\GL\glext.h	8587;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	.\include\GL\glext.h	11174;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	.\include\GL\glext.h	1332;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	.\include\GL\glext.h	1331;"	d
GL_MAX_UNIFORM_LOCATIONS	.\include\GL\glext.h	2240;"	d
GL_MAX_VARYING_COMPONENTS	.\include\GL\glext.h	911;"	d
GL_MAX_VARYING_COMPONENTS_EXT	.\include\GL\glext.h	7489;"	d
GL_MAX_VARYING_FLOATS	.\include\GL\glext.h	603;"	d
GL_MAX_VARYING_FLOATS_ARB	.\include\GL\glext.h	4870;"	d
GL_MAX_VARYING_VECTORS	.\include\GL\glext.h	1823;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	.\include\GL\glext.h	11299;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	.\include\GL\glext.h	2059;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	.\include\GL\glext.h	2053;"	d
GL_MAX_VERTEX_ATTRIBS	.\include\GL\glext.h	596;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	.\include\GL\glext.h	4770;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	.\include\GL\glext.h	2426;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	.\include\GL\glext.h	2425;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	.\include\GL\glext.h	2521;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	.\include\GL\glext.h	6481;"	d
GL_MAX_VERTEX_HINT_PGI	.\include\GL\glext.h	11853;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	.\include\GL\glext.h	2128;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	.\include\GL\glext.h	1406;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	.\include\GL\glext.h	8778;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	.\include\GL\glext.h	8780;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	.\include\GL\glext.h	8782;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	.\include\GL\glext.h	8781;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	.\include\GL\glext.h	2399;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	.\include\GL\glext.h	8779;"	d
GL_MAX_VERTEX_STREAMS	.\include\GL\glext.h	1653;"	d
GL_MAX_VERTEX_STREAMS_ATI	.\include\GL\glext.h	6345;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	.\include\GL\glext.h	604;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	.\include\GL\glext.h	4871;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	.\include\GL\glext.h	1327;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	.\include\GL\glext.h	602;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	.\include\GL\glext.h	4869;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	.\include\GL\glext.h	1822;"	d
GL_MAX_VERTEX_UNITS_ARB	.\include\GL\glext.h	4631;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	.\include\GL\glext.h	3334;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	.\include\GL\glext.h	7488;"	d
GL_MAX_VIEWPORTS	.\include\GL\glext.h	1839;"	d
GL_MAX_VIEWS_OVR	.\include\GL\glext.h	11808;"	d
GL_MAX_WIDTH	.\include\GL\glext.h	2265;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	.\include\GL\glext.h	8948;"	d
GL_MEDIUM_FLOAT	.\include\GL\glext.h	1814;"	d
GL_MEDIUM_INT	.\include\GL\glext.h	1817;"	d
GL_MEMORY_ATTACHABLE_ALIGNMENT_NV	.\include\GL\glext.h	10179;"	d
GL_MEMORY_ATTACHABLE_NV	.\include\GL\glext.h	10181;"	d
GL_MEMORY_ATTACHABLE_SIZE_NV	.\include\GL\glext.h	10180;"	d
GL_MESAX_texture_stack	.\include\GL\glext.h	9237;"	d
GL_MESA_pack_invert	.\include\GL\glext.h	9247;"	d
GL_MESA_program_binary_formats	.\include\GL\glext.h	9252;"	d
GL_MESA_resize_buffers	.\include\GL\glext.h	9257;"	d
GL_MESA_shader_integer_functions	.\include\GL\glext.h	9265;"	d
GL_MESA_tile_raster_order	.\include\GL\glext.h	9269;"	d
GL_MESA_window_pos	.\include\GL\glext.h	9276;"	d
GL_MESA_ycbcr_texture	.\include\GL\glext.h	9330;"	d
GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV	.\include\GL\glext.h	10233;"	d
GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV	.\include\GL\glext.h	10232;"	d
GL_MESH_OUTPUT_TYPE_NV	.\include\GL\glext.h	10240;"	d
GL_MESH_PRIMITIVES_OUT_NV	.\include\GL\glext.h	10239;"	d
GL_MESH_SHADER_BIT_NV	.\include\GL\glext.h	10251;"	d
GL_MESH_SHADER_NV	.\include\GL\glext.h	10205;"	d
GL_MESH_SUBROUTINE_NV	.\include\GL\glext.h	10247;"	d
GL_MESH_SUBROUTINE_UNIFORM_NV	.\include\GL\glext.h	10249;"	d
GL_MESH_VERTICES_OUT_NV	.\include\GL\glext.h	10238;"	d
GL_MESH_WORK_GROUP_SIZE_NV	.\include\GL\glext.h	10236;"	d
GL_MIN	.\include\GL\glext.h	367;"	d
GL_MINMAX	.\include\GL\glext.h	3503;"	d
GL_MINMAX_EXT	.\include\GL\glext.h	7586;"	d
GL_MINMAX_FORMAT	.\include\GL\glext.h	3504;"	d
GL_MINMAX_FORMAT_EXT	.\include\GL\glext.h	7587;"	d
GL_MINMAX_SINK	.\include\GL\glext.h	3505;"	d
GL_MINMAX_SINK_EXT	.\include\GL\glext.h	7588;"	d
GL_MINOR_VERSION	.\include\GL\glext.h	895;"	d
GL_MINUS_CLAMPED_NV	.\include\GL\glext.h	9468;"	d
GL_MINUS_NV	.\include\GL\glext.h	9469;"	d
GL_MIN_EXT	.\include\GL\glext.h	6538;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	.\include\GL\glext.h	1650;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	.\include\GL\glext.h	10034;"	d
GL_MIN_LOD_WARNING_AMD	.\include\GL\glext.h	5731;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	.\include\GL\glext.h	2040;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	.\include\GL\glext.h	907;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT	.\include\GL\glext.h	7546;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	.\include\GL\glext.h	9987;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	.\include\GL\glext.h	1637;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	.\include\GL\glext.h	4503;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	.\include\GL\glext.h	10037;"	d
GL_MIN_SAMPLE_SHADING_VALUE	.\include\GL\glext.h	1636;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	.\include\GL\glext.h	4013;"	d
GL_MIN_SPARSE_LEVEL_AMD	.\include\GL\glext.h	5730;"	d
GL_MIPMAP	.\include\GL\glext.h	2286;"	d
GL_MIRRORED_REPEAT	.\include\GL\glext.h	327;"	d
GL_MIRRORED_REPEAT_ARB	.\include\GL\glext.h	4514;"	d
GL_MIRRORED_REPEAT_IBM	.\include\GL\glext.h	9067;"	d
GL_MIRROR_CLAMP_ATI	.\include\GL\glext.h	6289;"	d
GL_MIRROR_CLAMP_EXT	.\include\GL\glext.h	8457;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	.\include\GL\glext.h	8459;"	d
GL_MIRROR_CLAMP_TO_EDGE	.\include\GL\glext.h	2539;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	.\include\GL\glext.h	6290;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	.\include\GL\glext.h	8458;"	d
GL_MITER_REVERT_NV	.\include\GL\glext.h	10374;"	d
GL_MITER_TRUNCATE_NV	.\include\GL\glext.h	10375;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	.\include\GL\glext.h	9901;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	.\include\GL\glext.h	9902;"	d
GL_MODELVIEW0_ARB	.\include\GL\glext.h	4641;"	d
GL_MODELVIEW0_EXT	.\include\GL\glext.h	8914;"	d
GL_MODELVIEW0_MATRIX_EXT	.\include\GL\glext.h	8911;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	.\include\GL\glext.h	8909;"	d
GL_MODELVIEW10_ARB	.\include\GL\glext.h	4651;"	d
GL_MODELVIEW11_ARB	.\include\GL\glext.h	4652;"	d
GL_MODELVIEW12_ARB	.\include\GL\glext.h	4653;"	d
GL_MODELVIEW13_ARB	.\include\GL\glext.h	4654;"	d
GL_MODELVIEW14_ARB	.\include\GL\glext.h	4655;"	d
GL_MODELVIEW15_ARB	.\include\GL\glext.h	4656;"	d
GL_MODELVIEW16_ARB	.\include\GL\glext.h	4657;"	d
GL_MODELVIEW17_ARB	.\include\GL\glext.h	4658;"	d
GL_MODELVIEW18_ARB	.\include\GL\glext.h	4659;"	d
GL_MODELVIEW19_ARB	.\include\GL\glext.h	4660;"	d
GL_MODELVIEW1_ARB	.\include\GL\glext.h	4642;"	d
GL_MODELVIEW1_EXT	.\include\GL\glext.h	8915;"	d
GL_MODELVIEW1_MATRIX_EXT	.\include\GL\glext.h	8912;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	.\include\GL\glext.h	8910;"	d
GL_MODELVIEW20_ARB	.\include\GL\glext.h	4661;"	d
GL_MODELVIEW21_ARB	.\include\GL\glext.h	4662;"	d
GL_MODELVIEW22_ARB	.\include\GL\glext.h	4663;"	d
GL_MODELVIEW23_ARB	.\include\GL\glext.h	4664;"	d
GL_MODELVIEW24_ARB	.\include\GL\glext.h	4665;"	d
GL_MODELVIEW25_ARB	.\include\GL\glext.h	4666;"	d
GL_MODELVIEW26_ARB	.\include\GL\glext.h	4667;"	d
GL_MODELVIEW27_ARB	.\include\GL\glext.h	4668;"	d
GL_MODELVIEW28_ARB	.\include\GL\glext.h	4669;"	d
GL_MODELVIEW29_ARB	.\include\GL\glext.h	4670;"	d
GL_MODELVIEW2_ARB	.\include\GL\glext.h	4643;"	d
GL_MODELVIEW30_ARB	.\include\GL\glext.h	4671;"	d
GL_MODELVIEW31_ARB	.\include\GL\glext.h	4672;"	d
GL_MODELVIEW3_ARB	.\include\GL\glext.h	4644;"	d
GL_MODELVIEW4_ARB	.\include\GL\glext.h	4645;"	d
GL_MODELVIEW5_ARB	.\include\GL\glext.h	4646;"	d
GL_MODELVIEW6_ARB	.\include\GL\glext.h	4647;"	d
GL_MODELVIEW7_ARB	.\include\GL\glext.h	4648;"	d
GL_MODELVIEW8_ARB	.\include\GL\glext.h	4649;"	d
GL_MODELVIEW9_ARB	.\include\GL\glext.h	4650;"	d
GL_MODELVIEW_PROJECTION_NV	.\include\GL\glext.h	11423;"	d
GL_MODULATE_ADD_ATI	.\include\GL\glext.h	6266;"	d
GL_MODULATE_SIGNED_ADD_ATI	.\include\GL\glext.h	6267;"	d
GL_MODULATE_SUBTRACT_ATI	.\include\GL\glext.h	6268;"	d
GL_MOVE_TO_CONTINUES_NV	.\include\GL\glext.h	10393;"	d
GL_MOVE_TO_NV	.\include\GL\glext.h	10395;"	d
GL_MOVE_TO_RESETS_NV	.\include\GL\glext.h	10392;"	d
GL_MOV_ATI	.\include\GL\glext.h	6132;"	d
GL_MULTICAST_GPUS_NV	.\include\GL\glext.h	9953;"	d
GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV	.\include\GL\glext.h	9956;"	d
GL_MULTIPLY_KHR	.\include\GL\glext.h	4937;"	d
GL_MULTIPLY_NV	.\include\GL\glext.h	9470;"	d
GL_MULTISAMPLE	.\include\GL\glext.h	158;"	d
GL_MULTISAMPLES_NV	.\include\GL\glext.h	10159;"	d
GL_MULTISAMPLE_3DFX	.\include\GL\glext.h	5347;"	d
GL_MULTISAMPLE_ARB	.\include\GL\glext.h	3702;"	d
GL_MULTISAMPLE_BIT	.\include\GL\glext.h	190;"	d
GL_MULTISAMPLE_BIT_3DFX	.\include\GL\glext.h	5350;"	d
GL_MULTISAMPLE_BIT_ARB	.\include\GL\glext.h	3710;"	d
GL_MULTISAMPLE_BIT_EXT	.\include\GL\glext.h	7788;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	.\include\GL\glext.h	9920;"	d
GL_MULTISAMPLE_EXT	.\include\GL\glext.h	7772;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	.\include\GL\glext.h	10271;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	.\include\GL\glext.h	2882;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	.\include\GL\glext.h	2881;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	.\include\GL\glext.h	7937;"	d
GL_MULTISAMPLE_SGIS	.\include\GL\glext.h	11929;"	d
GL_MUL_ATI	.\include\GL\glext.h	6134;"	d
GL_MVP_MATRIX_EXT	.\include\GL\glext.h	8808;"	d
GL_NAMED_STRING_LENGTH_ARB	.\include\GL\glext.h	4236;"	d
GL_NAMED_STRING_TYPE_ARB	.\include\GL\glext.h	4237;"	d
GL_NAME_LENGTH	.\include\GL\glext.h	2371;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	.\include\GL\glext.h	11826;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	.\include\GL\glext.h	11827;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	.\include\GL\glext.h	11825;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	.\include\GL\glext.h	12158;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	.\include\GL\glext.h	12157;"	d
GL_NEGATE_BIT_ATI	.\include\GL\glext.h	6169;"	d
GL_NEGATIVE_ONE_EXT	.\include\GL\glext.h	8804;"	d
GL_NEGATIVE_ONE_TO_ONE	.\include\GL\glext.h	2565;"	d
GL_NEGATIVE_W_EXT	.\include\GL\glext.h	8801;"	d
GL_NEGATIVE_X_EXT	.\include\GL\glext.h	8798;"	d
GL_NEGATIVE_Y_EXT	.\include\GL\glext.h	8799;"	d
GL_NEGATIVE_Z_EXT	.\include\GL\glext.h	8800;"	d
GL_NEXT_BUFFER_NV	.\include\GL\glext.h	11191;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	.\include\GL\glext.h	11706;"	d
GL_NOP_COMMAND_NV	.\include\GL\glext.h	9523;"	d
GL_NORMALIZED_RANGE_EXT	.\include\GL\glext.h	8805;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11364;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	500;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4708;"	d
GL_NORMAL_ARRAY_COUNT_EXT	.\include\GL\glext.h	8623;"	d
GL_NORMAL_ARRAY_EXT	.\include\GL\glext.h	8612;"	d
GL_NORMAL_ARRAY_LENGTH_NV	.\include\GL\glext.h	11374;"	d
GL_NORMAL_ARRAY_LIST_IBM	.\include\GL\glext.h	9073;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9081;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	.\include\GL\glext.h	9175;"	d
GL_NORMAL_ARRAY_POINTER_EXT	.\include\GL\glext.h	8638;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8622;"	d
GL_NORMAL_ARRAY_TYPE_EXT	.\include\GL\glext.h	8621;"	d
GL_NORMAL_BIT_PGI	.\include\GL\glext.h	11865;"	d
GL_NORMAL_MAP	.\include\GL\glext.h	191;"	d
GL_NORMAL_MAP_ARB	.\include\GL\glext.h	4402;"	d
GL_NORMAL_MAP_EXT	.\include\GL\glext.h	8322;"	d
GL_NORMAL_MAP_NV	.\include\GL\glext.h	10998;"	d
GL_NO_RESET_NOTIFICATION	.\include\GL\glext.h	2582;"	d
GL_NO_RESET_NOTIFICATION_ARB	.\include\GL\glext.h	3941;"	d
GL_NUM_ACTIVE_VARIABLES	.\include\GL\glext.h	2382;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	.\include\GL\glext.h	1673;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	.\include\GL\glext.h	181;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	.\include\GL\glext.h	4368;"	d
GL_NUM_DEVICE_UUIDS_EXT	.\include\GL\glext.h	7682;"	d
GL_NUM_EXTENSIONS	.\include\GL\glext.h	896;"	d
GL_NUM_FILL_STREAMS_NV	.\include\GL\glext.h	10661;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	.\include\GL\glext.h	6145;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	.\include\GL\glext.h	6144;"	d
GL_NUM_GENERAL_COMBINERS_NV	.\include\GL\glext.h	10759;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	.\include\GL\glext.h	6149;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	.\include\GL\glext.h	6147;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	.\include\GL\glext.h	6148;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	.\include\GL\glext.h	6150;"	d
GL_NUM_PASSES_ATI	.\include\GL\glext.h	6146;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	.\include\GL\glext.h	1828;"	d
GL_NUM_SAMPLE_COUNTS	.\include\GL\glext.h	2039;"	d
GL_NUM_SHADER_BINARY_FORMATS	.\include\GL\glext.h	1821;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	.\include\GL\glext.h	2170;"	d
GL_NUM_SPARSE_LEVELS_ARB	.\include\GL\glext.h	4288;"	d
GL_NUM_SPIR_V_EXTENSIONS	.\include\GL\glext.h	2853;"	d
GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD	.\include\GL\glext.h	5432;"	d
GL_NUM_TILING_TYPES_EXT	.\include\GL\glext.h	7678;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	.\include\GL\glext.h	11705;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	.\include\GL\glext.h	4289;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	.\include\GL\glext.h	8949;"	d
GL_NVX_blend_equation_advanced_multi_draw_buffers	.\include\GL\glext.h	9337;"	d
GL_NVX_conditional_render	.\include\GL\glext.h	9341;"	d
GL_NVX_gpu_memory_info	.\include\GL\glext.h	9351;"	d
GL_NVX_linked_gpu_multicast	.\include\GL\glext.h	9360;"	d
GL_NV_alpha_to_coverage_dither_control	.\include\GL\glext.h	9374;"	d
GL_NV_bindless_multi_draw_indirect	.\include\GL\glext.h	9386;"	d
GL_NV_bindless_multi_draw_indirect_count	.\include\GL\glext.h	9396;"	d
GL_NV_bindless_texture	.\include\GL\glext.h	9406;"	d
GL_NV_blend_equation_advanced	.\include\GL\glext.h	9438;"	d
GL_NV_blend_equation_advanced_coherent	.\include\GL\glext.h	9497;"	d
GL_NV_blend_minmax_factor	.\include\GL\glext.h	9502;"	d
GL_NV_blend_square	.\include\GL\glext.h	9506;"	d
GL_NV_clip_space_w_scaling	.\include\GL\glext.h	9510;"	d
GL_NV_command_list	.\include\GL\glext.h	9521;"	d
GL_NV_compute_program5	.\include\GL\glext.h	9580;"	d
GL_NV_compute_shader_derivatives	.\include\GL\glext.h	9586;"	d
GL_NV_conditional_render	.\include\GL\glext.h	9590;"	d
GL_NV_conservative_raster	.\include\GL\glext.h	9604;"	d
GL_NV_conservative_raster_dilate	.\include\GL\glext.h	9616;"	d
GL_NV_conservative_raster_pre_snap	.\include\GL\glext.h	9627;"	d
GL_NV_conservative_raster_pre_snap_triangles	.\include\GL\glext.h	9632;"	d
GL_NV_conservative_raster_underestimation	.\include\GL\glext.h	9643;"	d
GL_NV_copy_depth_to_color	.\include\GL\glext.h	9647;"	d
GL_NV_copy_image	.\include\GL\glext.h	9653;"	d
GL_NV_deep_texture3D	.\include\GL\glext.h	9661;"	d
GL_NV_depth_buffer_float	.\include\GL\glext.h	9667;"	d
GL_NV_depth_clamp	.\include\GL\glext.h	9683;"	d
GL_NV_draw_texture	.\include\GL\glext.h	9688;"	d
GL_NV_draw_vulkan_image	.\include\GL\glext.h	9696;"	d
GL_NV_evaluators	.\include\GL\glext.h	9713;"	d
GL_NV_explicit_multisample	.\include\GL\glext.h	9761;"	d
GL_NV_fence	.\include\GL\glext.h	9783;"	d
GL_NV_fill_rectangle	.\include\GL\glext.h	9806;"	d
GL_NV_float_buffer	.\include\GL\glext.h	9811;"	d
GL_NV_fog_distance	.\include\GL\glext.h	9830;"	d
GL_NV_fragment_coverage_to_color	.\include\GL\glext.h	9837;"	d
GL_NV_fragment_program	.\include\GL\glext.h	9847;"	d
GL_NV_fragment_program2	.\include\GL\glext.h	9871;"	d
GL_NV_fragment_program4	.\include\GL\glext.h	9880;"	d
GL_NV_fragment_program_option	.\include\GL\glext.h	9884;"	d
GL_NV_fragment_shader_barycentric	.\include\GL\glext.h	9888;"	d
GL_NV_fragment_shader_interlock	.\include\GL\glext.h	9892;"	d
GL_NV_framebuffer_mixed_samples	.\include\GL\glext.h	9896;"	d
GL_NV_framebuffer_multisample_coverage	.\include\GL\glext.h	9916;"	d
GL_NV_geometry_program4	.\include\GL\glext.h	9928;"	d
GL_NV_geometry_shader4	.\include\GL\glext.h	9943;"	d
GL_NV_geometry_shader_passthrough	.\include\GL\glext.h	9947;"	d
GL_NV_gpu_multicast	.\include\GL\glext.h	9951;"	d
GL_NV_gpu_program4	.\include\GL\glext.h	9986;"	d
GL_NV_gpu_program5	.\include\GL\glext.h	10032;"	d
GL_NV_gpu_program5_mem_extended	.\include\GL\glext.h	10050;"	d
GL_NV_gpu_shader5	.\include\GL\glext.h	10054;"	d
GL_NV_half_float	.\include\GL\glext.h	10058;"	d
GL_NV_internalformat_sample_query	.\include\GL\glext.h	10158;"	d
GL_NV_light_max_exponent	.\include\GL\glext.h	10170;"	d
GL_NV_memory_attachment	.\include\GL\glext.h	10176;"	d
GL_NV_mesh_shader	.\include\GL\glext.h	10204;"	d
GL_NV_multisample_coverage	.\include\GL\glext.h	10266;"	d
GL_NV_multisample_filter_hint	.\include\GL\glext.h	10270;"	d
GL_NV_occlusion_query	.\include\GL\glext.h	10275;"	d
GL_NV_packed_depth_stencil	.\include\GL\glext.h	10299;"	d
GL_NV_parameter_buffer_object	.\include\GL\glext.h	10305;"	d
GL_NV_parameter_buffer_object2	.\include\GL\glext.h	10322;"	d
GL_NV_path_rendering	.\include\GL\glext.h	10326;"	d
GL_NV_path_rendering_shared_edge	.\include\GL\glext.h	10623;"	d
GL_NV_pixel_data_range	.\include\GL\glext.h	10628;"	d
GL_NV_point_sprite	.\include\GL\glext.h	10644;"	d
GL_NV_present_video	.\include\GL\glext.h	10657;"	d
GL_NV_primitive_restart	.\include\GL\glext.h	10681;"	d
GL_NV_query_resource	.\include\GL\glext.h	10693;"	d
GL_NV_query_resource_tag	.\include\GL\glext.h	10707;"	d
GL_NV_register_combiners	.\include\GL\glext.h	10719;"	d
GL_NV_register_combiners2	.\include\GL\glext.h	10800;"	d
GL_NV_representative_fragment_test	.\include\GL\glext.h	10811;"	d
GL_NV_robustness_video_memory_purge	.\include\GL\glext.h	10816;"	d
GL_NV_sample_locations	.\include\GL\glext.h	10821;"	d
GL_NV_sample_mask_override_coverage	.\include\GL\glext.h	10841;"	d
GL_NV_scissor_exclusive	.\include\GL\glext.h	10845;"	d
GL_NV_shader_atomic_counters	.\include\GL\glext.h	10857;"	d
GL_NV_shader_atomic_float	.\include\GL\glext.h	10861;"	d
GL_NV_shader_atomic_float64	.\include\GL\glext.h	10865;"	d
GL_NV_shader_atomic_fp16_vector	.\include\GL\glext.h	10869;"	d
GL_NV_shader_atomic_int64	.\include\GL\glext.h	10873;"	d
GL_NV_shader_buffer_load	.\include\GL\glext.h	10877;"	d
GL_NV_shader_buffer_store	.\include\GL\glext.h	10912;"	d
GL_NV_shader_storage_buffer_object	.\include\GL\glext.h	10917;"	d
GL_NV_shader_texture_footprint	.\include\GL\glext.h	10921;"	d
GL_NV_shader_thread_group	.\include\GL\glext.h	10925;"	d
GL_NV_shader_thread_shuffle	.\include\GL\glext.h	10932;"	d
GL_NV_shading_rate_image	.\include\GL\glext.h	10936;"	d
GL_NV_stereo_view_rendering	.\include\GL\glext.h	10977;"	d
GL_NV_tessellation_program5	.\include\GL\glext.h	10981;"	d
GL_NV_texgen_emboss	.\include\GL\glext.h	10990;"	d
GL_NV_texgen_reflection	.\include\GL\glext.h	10997;"	d
GL_NV_texture_barrier	.\include\GL\glext.h	11003;"	d
GL_NV_texture_compression_vtc	.\include\GL\glext.h	11011;"	d
GL_NV_texture_env_combine4	.\include\GL\glext.h	11015;"	d
GL_NV_texture_expand_normal	.\include\GL\glext.h	11024;"	d
GL_NV_texture_multisample	.\include\GL\glext.h	11029;"	d
GL_NV_texture_rectangle	.\include\GL\glext.h	11049;"	d
GL_NV_texture_rectangle_compressed	.\include\GL\glext.h	11057;"	d
GL_NV_texture_shader	.\include\GL\glext.h	11061;"	d
GL_NV_texture_shader2	.\include\GL\glext.h	11138;"	d
GL_NV_texture_shader3	.\include\GL\glext.h	11143;"	d
GL_NV_transform_feedback	.\include\GL\glext.h	11164;"	d
GL_NV_transform_feedback2	.\include\GL\glext.h	11225;"	d
GL_NV_uniform_buffer_unified_memory	.\include\GL\glext.h	11249;"	d
GL_NV_vdpau_interop	.\include\GL\glext.h	11256;"	d
GL_NV_vdpau_interop2	.\include\GL\glext.h	11287;"	d
GL_NV_vertex_array_range	.\include\GL\glext.h	11295;"	d
GL_NV_vertex_array_range2	.\include\GL\glext.h	11310;"	d
GL_NV_vertex_attrib_integer_64bit	.\include\GL\glext.h	11315;"	d
GL_NV_vertex_buffer_unified_memory	.\include\GL\glext.h	11359;"	d
GL_NV_vertex_program	.\include\GL\glext.h	11414;"	d
GL_NV_vertex_program1_1	.\include\GL\glext.h	11631;"	d
GL_NV_vertex_program2	.\include\GL\glext.h	11635;"	d
GL_NV_vertex_program2_option	.\include\GL\glext.h	11639;"	d
GL_NV_vertex_program3	.\include\GL\glext.h	11643;"	d
GL_NV_vertex_program4	.\include\GL\glext.h	11647;"	d
GL_NV_video_capture	.\include\GL\glext.h	11700;"	d
GL_NV_viewport_array2	.\include\GL\glext.h	11759;"	d
GL_NV_viewport_swizzle	.\include\GL\glext.h	11763;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	.\include\GL\glext.h	4873;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	.\include\GL\glext.h	4874;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	.\include\GL\glext.h	4111;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	.\include\GL\glext.h	4112;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	.\include\GL\glext.h	4110;"	d
GL_OBJECT_BUFFER_SIZE_ATI	.\include\GL\glext.h	6299;"	d
GL_OBJECT_BUFFER_USAGE_ATI	.\include\GL\glext.h	6300;"	d
GL_OBJECT_COMPILE_STATUS_ARB	.\include\GL\glext.h	4106;"	d
GL_OBJECT_DELETE_STATUS_ARB	.\include\GL\glext.h	4105;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	.\include\GL\glext.h	11980;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	.\include\GL\glext.h	11978;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	.\include\GL\glext.h	4109;"	d
GL_OBJECT_LINEAR_NV	.\include\GL\glext.h	10473;"	d
GL_OBJECT_LINE_SGIS	.\include\GL\glext.h	11984;"	d
GL_OBJECT_LINK_STATUS_ARB	.\include\GL\glext.h	4107;"	d
GL_OBJECT_POINT_SGIS	.\include\GL\glext.h	11982;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	.\include\GL\glext.h	4113;"	d
GL_OBJECT_SUBTYPE_ARB	.\include\GL\glext.h	4083;"	d
GL_OBJECT_TYPE	.\include\GL\glext.h	1418;"	d
GL_OBJECT_TYPE_ARB	.\include\GL\glext.h	4082;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	.\include\GL\glext.h	4108;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	.\include\GL\glext.h	5623;"	d
GL_OCCLUSION_TEST_HP	.\include\GL\glext.h	9024;"	d
GL_OCCLUSION_TEST_RESULT_HP	.\include\GL\glext.h	9025;"	d
GL_OES_byte_coordinates	.\include\GL\glext.h	5036;"	d
GL_OES_compressed_paletted_texture	.\include\GL\glext.h	5086;"	d
GL_OES_fixed_point	.\include\GL\glext.h	5100;"	d
GL_OES_query_matrix	.\include\GL\glext.h	5314;"	d
GL_OES_read_format	.\include\GL\glext.h	5322;"	d
GL_OES_single_precision	.\include\GL\glext.h	5328;"	d
GL_OFFSET	.\include\GL\glext.h	2374;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	.\include\GL\glext.h	11150;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11151;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	.\include\GL\glext.h	11148;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11149;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	.\include\GL\glext.h	11144;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	.\include\GL\glext.h	11145;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11146;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	.\include\GL\glext.h	11147;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	.\include\GL\glext.h	11078;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	.\include\GL\glext.h	11076;"	d
GL_OFFSET_TEXTURE_2D_NV	.\include\GL\glext.h	11083;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	.\include\GL\glext.h	11077;"	d
GL_OFFSET_TEXTURE_BIAS_NV	.\include\GL\glext.h	11075;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	.\include\GL\glext.h	11073;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11062;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	.\include\GL\glext.h	11063;"	d
GL_OFFSET_TEXTURE_SCALE_NV	.\include\GL\glext.h	11074;"	d
GL_OML_interlace	.\include\GL\glext.h	11783;"	d
GL_OML_resample	.\include\GL\glext.h	11789;"	d
GL_OML_subsample	.\include\GL\glext.h	11799;"	d
GL_ONE_EXT	.\include\GL\glext.h	8803;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	.\include\GL\glext.h	363;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	.\include\GL\glext.h	6502;"	d
GL_ONE_MINUS_CONSTANT_COLOR	.\include\GL\glext.h	361;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	.\include\GL\glext.h	6500;"	d
GL_ONE_MINUS_SRC1_ALPHA	.\include\GL\glext.h	1500;"	d
GL_ONE_MINUS_SRC1_COLOR	.\include\GL\glext.h	1499;"	d
GL_OPERAND0_ALPHA	.\include\GL\glext.h	209;"	d
GL_OPERAND0_ALPHA_ARB	.\include\GL\glext.h	4445;"	d
GL_OPERAND0_ALPHA_EXT	.\include\GL\glext.h	8360;"	d
GL_OPERAND0_RGB	.\include\GL\glext.h	206;"	d
GL_OPERAND0_RGB_ARB	.\include\GL\glext.h	4442;"	d
GL_OPERAND0_RGB_EXT	.\include\GL\glext.h	8357;"	d
GL_OPERAND1_ALPHA	.\include\GL\glext.h	210;"	d
GL_OPERAND1_ALPHA_ARB	.\include\GL\glext.h	4446;"	d
GL_OPERAND1_ALPHA_EXT	.\include\GL\glext.h	8361;"	d
GL_OPERAND1_RGB	.\include\GL\glext.h	207;"	d
GL_OPERAND1_RGB_ARB	.\include\GL\glext.h	4443;"	d
GL_OPERAND1_RGB_EXT	.\include\GL\glext.h	8358;"	d
GL_OPERAND2_ALPHA	.\include\GL\glext.h	211;"	d
GL_OPERAND2_ALPHA_ARB	.\include\GL\glext.h	4447;"	d
GL_OPERAND2_ALPHA_EXT	.\include\GL\glext.h	8362;"	d
GL_OPERAND2_RGB	.\include\GL\glext.h	208;"	d
GL_OPERAND2_RGB_ARB	.\include\GL\glext.h	4444;"	d
GL_OPERAND2_RGB_EXT	.\include\GL\glext.h	8359;"	d
GL_OPERAND3_ALPHA_NV	.\include\GL\glext.h	11020;"	d
GL_OPERAND3_RGB_NV	.\include\GL\glext.h	11019;"	d
GL_OPTIMAL_TILING_EXT	.\include\GL\glext.h	7680;"	d
GL_OP_ADD_EXT	.\include\GL\glext.h	8716;"	d
GL_OP_CLAMP_EXT	.\include\GL\glext.h	8723;"	d
GL_OP_CROSS_PRODUCT_EXT	.\include\GL\glext.h	8732;"	d
GL_OP_DOT3_EXT	.\include\GL\glext.h	8713;"	d
GL_OP_DOT4_EXT	.\include\GL\glext.h	8714;"	d
GL_OP_EXP_BASE_2_EXT	.\include\GL\glext.h	8726;"	d
GL_OP_FLOOR_EXT	.\include\GL\glext.h	8724;"	d
GL_OP_FRAC_EXT	.\include\GL\glext.h	8718;"	d
GL_OP_INDEX_EXT	.\include\GL\glext.h	8711;"	d
GL_OP_LOG_BASE_2_EXT	.\include\GL\glext.h	8727;"	d
GL_OP_MADD_EXT	.\include\GL\glext.h	8717;"	d
GL_OP_MAX_EXT	.\include\GL\glext.h	8719;"	d
GL_OP_MIN_EXT	.\include\GL\glext.h	8720;"	d
GL_OP_MOV_EXT	.\include\GL\glext.h	8734;"	d
GL_OP_MULTIPLY_MATRIX_EXT	.\include\GL\glext.h	8733;"	d
GL_OP_MUL_EXT	.\include\GL\glext.h	8715;"	d
GL_OP_NEGATE_EXT	.\include\GL\glext.h	8712;"	d
GL_OP_POWER_EXT	.\include\GL\glext.h	8728;"	d
GL_OP_RECIP_EXT	.\include\GL\glext.h	8729;"	d
GL_OP_RECIP_SQRT_EXT	.\include\GL\glext.h	8730;"	d
GL_OP_ROUND_EXT	.\include\GL\glext.h	8725;"	d
GL_OP_SET_GE_EXT	.\include\GL\glext.h	8721;"	d
GL_OP_SET_LT_EXT	.\include\GL\glext.h	8722;"	d
GL_OP_SUB_EXT	.\include\GL\glext.h	8731;"	d
GL_OUTPUT_COLOR0_EXT	.\include\GL\glext.h	8736;"	d
GL_OUTPUT_COLOR1_EXT	.\include\GL\glext.h	8737;"	d
GL_OUTPUT_FOG_EXT	.\include\GL\glext.h	8770;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	.\include\GL\glext.h	8738;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	.\include\GL\glext.h	8748;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	.\include\GL\glext.h	8749;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	.\include\GL\glext.h	8750;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	.\include\GL\glext.h	8751;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	.\include\GL\glext.h	8752;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	.\include\GL\glext.h	8753;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	.\include\GL\glext.h	8754;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	.\include\GL\glext.h	8755;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	.\include\GL\glext.h	8756;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	.\include\GL\glext.h	8757;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	.\include\GL\glext.h	8739;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	.\include\GL\glext.h	8758;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	.\include\GL\glext.h	8759;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	.\include\GL\glext.h	8760;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	.\include\GL\glext.h	8761;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	.\include\GL\glext.h	8762;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	.\include\GL\glext.h	8763;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	.\include\GL\glext.h	8764;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	.\include\GL\glext.h	8765;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	.\include\GL\glext.h	8766;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	.\include\GL\glext.h	8767;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	.\include\GL\glext.h	8740;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	.\include\GL\glext.h	8768;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	.\include\GL\glext.h	8769;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	.\include\GL\glext.h	8741;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	.\include\GL\glext.h	8742;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	.\include\GL\glext.h	8743;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	.\include\GL\glext.h	8744;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	.\include\GL\glext.h	8745;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	.\include\GL\glext.h	8746;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	.\include\GL\glext.h	8747;"	d
GL_OUTPUT_VERTEX_EXT	.\include\GL\glext.h	8735;"	d
GL_OVERLAY_KHR	.\include\GL\glext.h	4939;"	d
GL_OVERLAY_NV	.\include\GL\glext.h	9471;"	d
GL_OVR_multiview	.\include\GL\glext.h	11805;"	d
GL_OVR_multiview2	.\include\GL\glext.h	11817;"	d
GL_PACK_CMYK_HINT_EXT	.\include\GL\glext.h	6563;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	.\include\GL\glext.h	2037;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	.\include\GL\glext.h	2036;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	.\include\GL\glext.h	2038;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	.\include\GL\glext.h	2035;"	d
GL_PACK_IMAGE_DEPTH_SGIS	.\include\GL\glext.h	12018;"	d
GL_PACK_IMAGE_HEIGHT	.\include\GL\glext.h	77;"	d
GL_PACK_IMAGE_HEIGHT_EXT	.\include\GL\glext.h	8251;"	d
GL_PACK_INVERT_MESA	.\include\GL\glext.h	9248;"	d
GL_PACK_RESAMPLE_OML	.\include\GL\glext.h	11790;"	d
GL_PACK_RESAMPLE_SGIX	.\include\GL\glext.h	12376;"	d
GL_PACK_ROW_BYTES_APPLE	.\include\GL\glext.h	5906;"	d
GL_PACK_SKIP_IMAGES	.\include\GL\glext.h	76;"	d
GL_PACK_SKIP_IMAGES_EXT	.\include\GL\glext.h	8250;"	d
GL_PACK_SKIP_VOLUMES_SGIS	.\include\GL\glext.h	12017;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	.\include\GL\glext.h	12424;"	d
GL_PALETTE4_R5_G6_B5_OES	.\include\GL\glext.h	5089;"	d
GL_PALETTE4_RGB5_A1_OES	.\include\GL\glext.h	5091;"	d
GL_PALETTE4_RGB8_OES	.\include\GL\glext.h	5087;"	d
GL_PALETTE4_RGBA4_OES	.\include\GL\glext.h	5090;"	d
GL_PALETTE4_RGBA8_OES	.\include\GL\glext.h	5088;"	d
GL_PALETTE8_R5_G6_B5_OES	.\include\GL\glext.h	5094;"	d
GL_PALETTE8_RGB5_A1_OES	.\include\GL\glext.h	5096;"	d
GL_PALETTE8_RGB8_OES	.\include\GL\glext.h	5092;"	d
GL_PALETTE8_RGBA4_OES	.\include\GL\glext.h	5095;"	d
GL_PALETTE8_RGBA8_OES	.\include\GL\glext.h	5093;"	d
GL_PARALLEL_ARRAYS_INTEL	.\include\GL\glext.h	9173;"	d
GL_PARAMETER_BUFFER	.\include\GL\glext.h	2838;"	d
GL_PARAMETER_BUFFER_ARB	.\include\GL\glext.h	3607;"	d
GL_PARAMETER_BUFFER_BINDING	.\include\GL\glext.h	2839;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	.\include\GL\glext.h	3608;"	d
GL_PARTIAL_SUCCESS_NV	.\include\GL\glext.h	11715;"	d
GL_PASS_THROUGH_NV	.\include\GL\glext.h	11081;"	d
GL_PATCHES	.\include\GL\glext.h	1675;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	.\include\GL\glext.h	1677;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	.\include\GL\glext.h	1678;"	d
GL_PATCH_VERTICES	.\include\GL\glext.h	1676;"	d
GL_PATH_CLIENT_LENGTH_NV	.\include\GL\glext.h	10342;"	d
GL_PATH_COMMAND_COUNT_NV	.\include\GL\glext.h	10364;"	d
GL_PATH_COMPUTED_LENGTH_NV	.\include\GL\glext.h	10367;"	d
GL_PATH_COORD_COUNT_NV	.\include\GL\glext.h	10365;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	.\include\GL\glext.h	10390;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	.\include\GL\glext.h	10366;"	d
GL_PATH_DASH_CAPS_NV	.\include\GL\glext.h	10338;"	d
GL_PATH_DASH_OFFSET_NV	.\include\GL\glext.h	10341;"	d
GL_PATH_DASH_OFFSET_RESET_NV	.\include\GL\glext.h	10391;"	d
GL_PATH_END_CAPS_NV	.\include\GL\glext.h	10333;"	d
GL_PATH_ERROR_POSITION_NV	.\include\GL\glext.h	10378;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	.\include\GL\glext.h	10368;"	d
GL_PATH_FILL_COVER_MODE_NV	.\include\GL\glext.h	10345;"	d
GL_PATH_FILL_MASK_NV	.\include\GL\glext.h	10344;"	d
GL_PATH_FILL_MODE_NV	.\include\GL\glext.h	10343;"	d
GL_PATH_FOG_GEN_MODE_NV	.\include\GL\glext.h	10475;"	d
GL_PATH_FORMAT_PS_NV	.\include\GL\glext.h	10328;"	d
GL_PATH_FORMAT_SVG_NV	.\include\GL\glext.h	10327;"	d
GL_PATH_GEN_COEFF_NV	.\include\GL\glext.h	10383;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	.\include\GL\glext.h	10478;"	d
GL_PATH_GEN_COMPONENTS_NV	.\include\GL\glext.h	10384;"	d
GL_PATH_GEN_MODE_NV	.\include\GL\glext.h	10382;"	d
GL_PATH_INITIAL_DASH_CAP_NV	.\include\GL\glext.h	10339;"	d
GL_PATH_INITIAL_END_CAP_NV	.\include\GL\glext.h	10334;"	d
GL_PATH_JOIN_STYLE_NV	.\include\GL\glext.h	10336;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	.\include\GL\glext.h	10483;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	.\include\GL\glext.h	10487;"	d
GL_PATH_MITER_LIMIT_NV	.\include\GL\glext.h	10337;"	d
GL_PATH_MODELVIEW_MATRIX_NV	.\include\GL\glext.h	10482;"	d
GL_PATH_MODELVIEW_NV	.\include\GL\glext.h	10480;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	.\include\GL\glext.h	10481;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	.\include\GL\glext.h	10350;"	d
GL_PATH_PROJECTION_MATRIX_NV	.\include\GL\glext.h	10486;"	d
GL_PATH_PROJECTION_NV	.\include\GL\glext.h	10479;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	.\include\GL\glext.h	10485;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	.\include\GL\glext.h	10388;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	.\include\GL\glext.h	10389;"	d
GL_PATH_STENCIL_FUNC_NV	.\include\GL\glext.h	10385;"	d
GL_PATH_STENCIL_REF_NV	.\include\GL\glext.h	10386;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	.\include\GL\glext.h	10387;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	.\include\GL\glext.h	10369;"	d
GL_PATH_STROKE_COVER_MODE_NV	.\include\GL\glext.h	10346;"	d
GL_PATH_STROKE_MASK_NV	.\include\GL\glext.h	10347;"	d
GL_PATH_STROKE_WIDTH_NV	.\include\GL\glext.h	10332;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	.\include\GL\glext.h	10340;"	d
GL_PATH_TERMINAL_END_CAP_NV	.\include\GL\glext.h	10335;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	.\include\GL\glext.h	10484;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	.\include\GL\glext.h	10488;"	d
GL_PERCENTAGE_AMD	.\include\GL\glext.h	5640;"	d
GL_PERFMON_RESULT_AMD	.\include\GL\glext.h	5643;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	.\include\GL\glext.h	5641;"	d
GL_PERFMON_RESULT_SIZE_AMD	.\include\GL\glext.h	5642;"	d
GL_PERFORMANCE_MONITOR_AMD	.\include\GL\glext.h	5607;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	.\include\GL\glext.h	9207;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	.\include\GL\glext.h	9206;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	.\include\GL\glext.h	9205;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	.\include\GL\glext.h	9203;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	.\include\GL\glext.h	9204;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	.\include\GL\glext.h	9210;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	.\include\GL\glext.h	9198;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	.\include\GL\glext.h	9199;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	.\include\GL\glext.h	9197;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	.\include\GL\glext.h	9209;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	.\include\GL\glext.h	9201;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	.\include\GL\glext.h	9200;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	.\include\GL\glext.h	9202;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	.\include\GL\glext.h	9196;"	d
GL_PERFQUERY_FLUSH_INTEL	.\include\GL\glext.h	9195;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	.\include\GL\glext.h	9193;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	.\include\GL\glext.h	9211;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	.\include\GL\glext.h	9208;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	.\include\GL\glext.h	9192;"	d
GL_PERFQUERY_WAIT_INTEL	.\include\GL\glext.h	9194;"	d
GL_PERTURB_EXT	.\include\GL\glext.h	8487;"	d
GL_PER_GPU_STORAGE_BIT_NV	.\include\GL\glext.h	9952;"	d
GL_PER_GPU_STORAGE_NV	.\include\GL\glext.h	9955;"	d
GL_PER_STAGE_CONSTANTS_NV	.\include\GL\glext.h	10801;"	d
GL_PGI_misc_hints	.\include\GL\glext.h	11821;"	d
GL_PGI_vertex_hints	.\include\GL\glext.h	11849;"	d
GL_PHONG_HINT_WIN	.\include\GL\glext.h	12730;"	d
GL_PHONG_WIN	.\include\GL\glext.h	12729;"	d
GL_PINLIGHT_NV	.\include\GL\glext.h	9472;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD	.\include\GL\glext.h	5445;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD	.\include\GL\glext.h	5446;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	.\include\GL\glext.h	2076;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	.\include\GL\glext.h	8133;"	d
GL_PIXEL_COUNTER_BITS_NV	.\include\GL\glext.h	10276;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	.\include\GL\glext.h	10279;"	d
GL_PIXEL_COUNT_NV	.\include\GL\glext.h	10278;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	.\include\GL\glext.h	7855;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	.\include\GL\glext.h	11957;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	.\include\GL\glext.h	11956;"	d
GL_PIXEL_GROUP_COLOR_SGIS	.\include\GL\glext.h	11958;"	d
GL_PIXEL_MAG_FILTER_EXT	.\include\GL\glext.h	7853;"	d
GL_PIXEL_MIN_FILTER_EXT	.\include\GL\glext.h	7854;"	d
GL_PIXEL_PACK_BUFFER	.\include\GL\glext.h	842;"	d
GL_PIXEL_PACK_BUFFER_ARB	.\include\GL\glext.h	3883;"	d
GL_PIXEL_PACK_BUFFER_BINDING	.\include\GL\glext.h	844;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	.\include\GL\glext.h	3885;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	.\include\GL\glext.h	7846;"	d
GL_PIXEL_PACK_BUFFER_EXT	.\include\GL\glext.h	7844;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	.\include\GL\glext.h	12427;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	.\include\GL\glext.h	12428;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	.\include\GL\glext.h	12426;"	d
GL_PIXEL_TEXTURE_SGIS	.\include\GL\glext.h	11955;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	.\include\GL\glext.h	12325;"	d
GL_PIXEL_TEX_GEN_SGIX	.\include\GL\glext.h	12324;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	.\include\GL\glext.h	12334;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	.\include\GL\glext.h	12335;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	.\include\GL\glext.h	12341;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	.\include\GL\glext.h	12340;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	.\include\GL\glext.h	12339;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	.\include\GL\glext.h	12338;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	.\include\GL\glext.h	12337;"	d
GL_PIXEL_TILE_WIDTH_SGIX	.\include\GL\glext.h	12336;"	d
GL_PIXEL_TRANSFORM_2D_EXT	.\include\GL\glext.h	7852;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	.\include\GL\glext.h	7860;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	.\include\GL\glext.h	7858;"	d
GL_PIXEL_UNPACK_BUFFER	.\include\GL\glext.h	843;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	.\include\GL\glext.h	3884;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	.\include\GL\glext.h	845;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	.\include\GL\glext.h	3886;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	.\include\GL\glext.h	7847;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	.\include\GL\glext.h	7845;"	d
GL_PLUS_CLAMPED_ALPHA_NV	.\include\GL\glext.h	9473;"	d
GL_PLUS_CLAMPED_NV	.\include\GL\glext.h	9474;"	d
GL_PLUS_DARKER_NV	.\include\GL\glext.h	9475;"	d
GL_PLUS_NV	.\include\GL\glext.h	9476;"	d
GL_PN_TRIANGLES_ATI	.\include\GL\glext.h	6228;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	.\include\GL\glext.h	6231;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	.\include\GL\glext.h	6235;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	.\include\GL\glext.h	6236;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	.\include\GL\glext.h	6230;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	.\include\GL\glext.h	6234;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	.\include\GL\glext.h	6233;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	.\include\GL\glext.h	6232;"	d
GL_POINT_DISTANCE_ATTENUATION	.\include\GL\glext.h	337;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	.\include\GL\glext.h	3894;"	d
GL_POINT_FADE_THRESHOLD_SIZE	.\include\GL\glext.h	323;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	.\include\GL\glext.h	3893;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	.\include\GL\glext.h	7885;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	.\include\GL\glext.h	11991;"	d
GL_POINT_SIZE_MAX	.\include\GL\glext.h	336;"	d
GL_POINT_SIZE_MAX_ARB	.\include\GL\glext.h	3892;"	d
GL_POINT_SIZE_MAX_EXT	.\include\GL\glext.h	7884;"	d
GL_POINT_SIZE_MAX_SGIS	.\include\GL\glext.h	11990;"	d
GL_POINT_SIZE_MIN	.\include\GL\glext.h	335;"	d
GL_POINT_SIZE_MIN_ARB	.\include\GL\glext.h	3891;"	d
GL_POINT_SIZE_MIN_EXT	.\include\GL\glext.h	7883;"	d
GL_POINT_SIZE_MIN_SGIS	.\include\GL\glext.h	11989;"	d
GL_POINT_SPRITE	.\include\GL\glext.h	647;"	d
GL_POINT_SPRITE_ARB	.\include\GL\glext.h	3905;"	d
GL_POINT_SPRITE_COORD_ORIGIN	.\include\GL\glext.h	640;"	d
GL_POINT_SPRITE_NV	.\include\GL\glext.h	10645;"	d
GL_POINT_SPRITE_R_MODE_NV	.\include\GL\glext.h	10647;"	d
GL_POLYGON_OFFSET_BIAS_EXT	.\include\GL\glext.h	7899;"	d
GL_POLYGON_OFFSET_CLAMP	.\include\GL\glext.h	2851;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	.\include\GL\glext.h	7908;"	d
GL_POLYGON_OFFSET_COMMAND_NV	.\include\GL\glext.h	9536;"	d
GL_POLYGON_OFFSET_EXT	.\include\GL\glext.h	7897;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	.\include\GL\glext.h	7898;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	.\include\GL\glext.h	3517;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	.\include\GL\glext.h	12505;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	.\include\GL\glext.h	3513;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	.\include\GL\glext.h	12501;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	.\include\GL\glext.h	3516;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	.\include\GL\glext.h	12504;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	.\include\GL\glext.h	3512;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	.\include\GL\glext.h	12500;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	.\include\GL\glext.h	3520;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	.\include\GL\glext.h	12512;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	.\include\GL\glext.h	3515;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	.\include\GL\glext.h	12503;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	.\include\GL\glext.h	3511;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	.\include\GL\glext.h	12499;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	.\include\GL\glext.h	3514;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	.\include\GL\glext.h	12502;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	.\include\GL\glext.h	3510;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	.\include\GL\glext.h	12498;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	.\include\GL\glext.h	3492;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	.\include\GL\glext.h	6610;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	.\include\GL\glext.h	3488;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	.\include\GL\glext.h	6606;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	.\include\GL\glext.h	3491;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	.\include\GL\glext.h	6609;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	.\include\GL\glext.h	3487;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	.\include\GL\glext.h	6605;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	.\include\GL\glext.h	3519;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	.\include\GL\glext.h	12511;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	.\include\GL\glext.h	3490;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	.\include\GL\glext.h	6608;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	.\include\GL\glext.h	3486;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	.\include\GL\glext.h	6604;"	d
GL_POST_CONVOLUTION_RED_BIAS	.\include\GL\glext.h	3489;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	.\include\GL\glext.h	6607;"	d
GL_POST_CONVOLUTION_RED_SCALE	.\include\GL\glext.h	3485;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	.\include\GL\glext.h	6603;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	.\include\GL\glext.h	9004;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	.\include\GL\glext.h	12467;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	.\include\GL\glext.h	12465;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	.\include\GL\glext.h	12468;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	.\include\GL\glext.h	12466;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	.\include\GL\glext.h	11822;"	d
GL_PRESENT_DURATION_NV	.\include\GL\glext.h	10663;"	d
GL_PRESENT_TIME_NV	.\include\GL\glext.h	10662;"	d
GL_PRESERVE_ATI	.\include\GL\glext.h	6297;"	d
GL_PREVIOUS	.\include\GL\glext.h	218;"	d
GL_PREVIOUS_ARB	.\include\GL\glext.h	4454;"	d
GL_PREVIOUS_EXT	.\include\GL\glext.h	8350;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	.\include\GL\glext.h	11079;"	d
GL_PRIMARY_COLOR	.\include\GL\glext.h	217;"	d
GL_PRIMARY_COLOR_ARB	.\include\GL\glext.h	4453;"	d
GL_PRIMARY_COLOR_EXT	.\include\GL\glext.h	8349;"	d
GL_PRIMARY_COLOR_NV	.\include\GL\glext.h	10476;"	d
GL_PRIMITIVES_GENERATED	.\include\GL\glext.h	929;"	d
GL_PRIMITIVES_GENERATED_EXT	.\include\GL\glext.h	8582;"	d
GL_PRIMITIVES_GENERATED_NV	.\include\GL\glext.h	11181;"	d
GL_PRIMITIVES_SUBMITTED	.\include\GL\glext.h	2842;"	d
GL_PRIMITIVES_SUBMITTED_ARB	.\include\GL\glext.h	3870;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	.\include\GL\glext.h	2880;"	d
GL_PRIMITIVE_ID_NV	.\include\GL\glext.h	11170;"	d
GL_PRIMITIVE_RESTART	.\include\GL\glext.h	1319;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	.\include\GL\glext.h	2182;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	.\include\GL\glext.h	2522;"	d
GL_PRIMITIVE_RESTART_INDEX	.\include\GL\glext.h	1320;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	.\include\GL\glext.h	10683;"	d
GL_PRIMITIVE_RESTART_NV	.\include\GL\glext.h	10682;"	d
GL_PROGRAM	.\include\GL\glext.h	2233;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	.\include\GL\glext.h	3997;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	.\include\GL\glext.h	10827;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	.\include\GL\glext.h	3995;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	.\include\GL\glext.h	10825;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	.\include\GL\glext.h	4772;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	.\include\GL\glext.h	3195;"	d
GL_PROGRAM_ATTRIBS_ARB	.\include\GL\glext.h	3188;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	.\include\GL\glext.h	9989;"	d
GL_PROGRAM_BINARY_FORMATS	.\include\GL\glext.h	1829;"	d
GL_PROGRAM_BINARY_FORMAT_MESA	.\include\GL\glext.h	9253;"	d
GL_PROGRAM_BINARY_LENGTH	.\include\GL\glext.h	1827;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	.\include\GL\glext.h	1826;"	d
GL_PROGRAM_BINDING_ARB	.\include\GL\glext.h	3175;"	d
GL_PROGRAM_ERROR_POSITION_ARB	.\include\GL\glext.h	3208;"	d
GL_PROGRAM_ERROR_POSITION_NV	.\include\GL\glext.h	11449;"	d
GL_PROGRAM_ERROR_STRING_ARB	.\include\GL\glext.h	3216;"	d
GL_PROGRAM_ERROR_STRING_NV	.\include\GL\glext.h	9853;"	d
GL_PROGRAM_FORMAT_ARB	.\include\GL\glext.h	3174;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	.\include\GL\glext.h	3172;"	d
GL_PROGRAM_INPUT	.\include\GL\glext.h	2350;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	.\include\GL\glext.h	3176;"	d
GL_PROGRAM_LENGTH_ARB	.\include\GL\glext.h	3173;"	d
GL_PROGRAM_LENGTH_NV	.\include\GL\glext.h	11421;"	d
GL_PROGRAM_MATRIX_EXT	.\include\GL\glext.h	6774;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	.\include\GL\glext.h	6776;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	.\include\GL\glext.h	4774;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	.\include\GL\glext.h	3198;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	.\include\GL\glext.h	3190;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	.\include\GL\glext.h	3178;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	.\include\GL\glext.h	3186;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	.\include\GL\glext.h	3182;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	.\include\GL\glext.h	3200;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	.\include\GL\glext.h	3199;"	d
GL_PROGRAM_OBJECT_ARB	.\include\GL\glext.h	4080;"	d
GL_PROGRAM_OBJECT_EXT	.\include\GL\glext.h	6737;"	d
GL_PROGRAM_OUTPUT	.\include\GL\glext.h	2351;"	d
GL_PROGRAM_PARAMETERS_ARB	.\include\GL\glext.h	3184;"	d
GL_PROGRAM_PARAMETER_NV	.\include\GL\glext.h	11442;"	d
GL_PROGRAM_PIPELINE	.\include\GL\glext.h	2235;"	d
GL_PROGRAM_PIPELINE_BINDING	.\include\GL\glext.h	1838;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	.\include\GL\glext.h	6736;"	d
GL_PROGRAM_POINT_SIZE	.\include\GL\glext.h	1395;"	d
GL_PROGRAM_POINT_SIZE_ARB	.\include\GL\glext.h	3324;"	d
GL_PROGRAM_POINT_SIZE_EXT	.\include\GL\glext.h	7501;"	d
GL_PROGRAM_RESIDENT_NV	.\include\GL\glext.h	11445;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	.\include\GL\glext.h	9990;"	d
GL_PROGRAM_SEPARABLE	.\include\GL\glext.h	1836;"	d
GL_PROGRAM_STRING_ARB	.\include\GL\glext.h	3207;"	d
GL_PROGRAM_STRING_NV	.\include\GL\glext.h	11422;"	d
GL_PROGRAM_TARGET_NV	.\include\GL\glext.h	11444;"	d
GL_PROGRAM_TEMPORARIES_ARB	.\include\GL\glext.h	3180;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	.\include\GL\glext.h	3197;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	.\include\GL\glext.h	3196;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	.\include\GL\glext.h	3194;"	d
GL_PROTECTED_MEMORY_OBJECT_EXT	.\include\GL\glext.h	7677;"	d
GL_PROVOKING_VERTEX	.\include\GL\glext.h	1415;"	d
GL_PROVOKING_VERTEX_EXT	.\include\GL\glext.h	7924;"	d
GL_PROXY_COLOR_TABLE	.\include\GL\glext.h	3521;"	d
GL_PROXY_COLOR_TABLE_SGI	.\include\GL\glext.h	12513;"	d
GL_PROXY_HISTOGRAM	.\include\GL\glext.h	3494;"	d
GL_PROXY_HISTOGRAM_EXT	.\include\GL\glext.h	7577;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	.\include\GL\glext.h	3523;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	.\include\GL\glext.h	12515;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	.\include\GL\glext.h	3522;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	.\include\GL\glext.h	12514;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	.\include\GL\glext.h	9005;"	d
GL_PROXY_TEXTURE_1D_ARRAY	.\include\GL\glext.h	913;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	.\include\GL\glext.h	8270;"	d
GL_PROXY_TEXTURE_1D_EXT	.\include\GL\glext.h	8243;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	.\include\GL\glext.h	9240;"	d
GL_PROXY_TEXTURE_2D_ARRAY	.\include\GL\glext.h	915;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	.\include\GL\glext.h	8272;"	d
GL_PROXY_TEXTURE_2D_EXT	.\include\GL\glext.h	8244;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	.\include\GL\glext.h	1437;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1439;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	.\include\GL\glext.h	9241;"	d
GL_PROXY_TEXTURE_3D	.\include\GL\glext.h	81;"	d
GL_PROXY_TEXTURE_3D_EXT	.\include\GL\glext.h	8255;"	d
GL_PROXY_TEXTURE_4D_SGIS	.\include\GL\glext.h	12022;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	.\include\GL\glext.h	12547;"	d
GL_PROXY_TEXTURE_CUBE_MAP	.\include\GL\glext.h	174;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	.\include\GL\glext.h	4412;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	.\include\GL\glext.h	1641;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4420;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	.\include\GL\glext.h	8332;"	d
GL_PROXY_TEXTURE_RECTANGLE	.\include\GL\glext.h	1308;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	.\include\GL\glext.h	4537;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11052;"	d
GL_PURGEABLE_APPLE	.\include\GL\glext.h	5885;"	d
GL_PURGED_CONTEXT_RESET_NV	.\include\GL\glext.h	10817;"	d
GL_QUADRATIC_CURVE_TO_NV	.\include\GL\glext.h	10403;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	.\include\GL\glext.h	1412;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	.\include\GL\glext.h	7921;"	d
GL_QUAD_ALPHA4_SGIS	.\include\GL\glext.h	12090;"	d
GL_QUAD_ALPHA8_SGIS	.\include\GL\glext.h	12091;"	d
GL_QUAD_INTENSITY4_SGIS	.\include\GL\glext.h	12094;"	d
GL_QUAD_INTENSITY8_SGIS	.\include\GL\glext.h	12095;"	d
GL_QUAD_LUMINANCE4_SGIS	.\include\GL\glext.h	12092;"	d
GL_QUAD_LUMINANCE8_SGIS	.\include\GL\glext.h	12093;"	d
GL_QUAD_MESH_SUN	.\include\GL\glext.h	12591;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	.\include\GL\glext.h	12097;"	d
GL_QUARTER_BIT_ATI	.\include\GL\glext.h	6165;"	d
GL_QUERY	.\include\GL\glext.h	2234;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	.\include\GL\glext.h	5628;"	d
GL_QUERY_BUFFER	.\include\GL\glext.h	2535;"	d
GL_QUERY_BUFFER_AMD	.\include\GL\glext.h	5677;"	d
GL_QUERY_BUFFER_BARRIER_BIT	.\include\GL\glext.h	2536;"	d
GL_QUERY_BUFFER_BINDING	.\include\GL\glext.h	2537;"	d
GL_QUERY_BUFFER_BINDING_AMD	.\include\GL\glext.h	5678;"	d
GL_QUERY_BY_REGION_NO_WAIT	.\include\GL\glext.h	980;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	.\include\GL\glext.h	2572;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	.\include\GL\glext.h	9594;"	d
GL_QUERY_BY_REGION_WAIT	.\include\GL\glext.h	979;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	.\include\GL\glext.h	2571;"	d
GL_QUERY_BY_REGION_WAIT_NV	.\include\GL\glext.h	9593;"	d
GL_QUERY_COUNTER_BITS	.\include\GL\glext.h	473;"	d
GL_QUERY_COUNTER_BITS_ARB	.\include\GL\glext.h	3828;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	.\include\GL\glext.h	5627;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	.\include\GL\glext.h	5625;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	.\include\GL\glext.h	5624;"	d
GL_QUERY_NO_WAIT	.\include\GL\glext.h	978;"	d
GL_QUERY_NO_WAIT_INVERTED	.\include\GL\glext.h	2570;"	d
GL_QUERY_NO_WAIT_NV	.\include\GL\glext.h	9592;"	d
GL_QUERY_OBJECT_AMD	.\include\GL\glext.h	5608;"	d
GL_QUERY_OBJECT_EXT	.\include\GL\glext.h	6740;"	d
GL_QUERY_RESOURCE_BUFFEROBJECT_NV	.\include\GL\glext.h	10699;"	d
GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV	.\include\GL\glext.h	10695;"	d
GL_QUERY_RESOURCE_RENDERBUFFER_NV	.\include\GL\glext.h	10698;"	d
GL_QUERY_RESOURCE_SYS_RESERVED_NV	.\include\GL\glext.h	10696;"	d
GL_QUERY_RESOURCE_TEXTURE_NV	.\include\GL\glext.h	10697;"	d
GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV	.\include\GL\glext.h	10694;"	d
GL_QUERY_RESULT	.\include\GL\glext.h	475;"	d
GL_QUERY_RESULT_ARB	.\include\GL\glext.h	3830;"	d
GL_QUERY_RESULT_AVAILABLE	.\include\GL\glext.h	476;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	.\include\GL\glext.h	3831;"	d
GL_QUERY_RESULT_NO_WAIT	.\include\GL\glext.h	2538;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	.\include\GL\glext.h	5679;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	.\include\GL\glext.h	5626;"	d
GL_QUERY_TARGET	.\include\GL\glext.h	2576;"	d
GL_QUERY_WAIT	.\include\GL\glext.h	977;"	d
GL_QUERY_WAIT_INVERTED	.\include\GL\glext.h	2569;"	d
GL_QUERY_WAIT_NV	.\include\GL\glext.h	9591;"	d
GL_R11F_G11F_B10F	.\include\GL\glext.h	918;"	d
GL_R11F_G11F_B10F_EXT	.\include\GL\glext.h	7807;"	d
GL_R16	.\include\GL\glext.h	1098;"	d
GL_R16F	.\include\GL\glext.h	1101;"	d
GL_R16I	.\include\GL\glext.h	1107;"	d
GL_R16UI	.\include\GL\glext.h	1108;"	d
GL_R16_SNORM	.\include\GL\glext.h	1314;"	d
GL_R1UI_C3F_V3F_SUN	.\include\GL\glext.h	12617;"	d
GL_R1UI_C4F_N3F_V3F_SUN	.\include\GL\glext.h	12619;"	d
GL_R1UI_C4UB_V3F_SUN	.\include\GL\glext.h	12616;"	d
GL_R1UI_N3F_V3F_SUN	.\include\GL\glext.h	12618;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	.\include\GL\glext.h	12622;"	d
GL_R1UI_T2F_N3F_V3F_SUN	.\include\GL\glext.h	12621;"	d
GL_R1UI_T2F_V3F_SUN	.\include\GL\glext.h	12620;"	d
GL_R1UI_V3F_SUN	.\include\GL\glext.h	12615;"	d
GL_R32F	.\include\GL\glext.h	1102;"	d
GL_R32I	.\include\GL\glext.h	1109;"	d
GL_R32UI	.\include\GL\glext.h	1110;"	d
GL_R8	.\include\GL\glext.h	1097;"	d
GL_R8I	.\include\GL\glext.h	1105;"	d
GL_R8UI	.\include\GL\glext.h	1106;"	d
GL_R8_SNORM	.\include\GL\glext.h	1310;"	d
GL_RASTERIZER_DISCARD	.\include\GL\glext.h	931;"	d
GL_RASTERIZER_DISCARD_EXT	.\include\GL\glext.h	8584;"	d
GL_RASTERIZER_DISCARD_NV	.\include\GL\glext.h	11183;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	.\include\GL\glext.h	7936;"	d
GL_RASTER_MULTISAMPLE_EXT	.\include\GL\glext.h	7933;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	.\include\GL\glext.h	9052;"	d
GL_RASTER_SAMPLES_EXT	.\include\GL\glext.h	7934;"	d
GL_READ_FRAMEBUFFER	.\include\GL\glext.h	1013;"	d
GL_READ_FRAMEBUFFER_BINDING	.\include\GL\glext.h	1015;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	.\include\GL\glext.h	7359;"	d
GL_READ_FRAMEBUFFER_EXT	.\include\GL\glext.h	7356;"	d
GL_READ_ONLY	.\include\GL\glext.h	482;"	d
GL_READ_ONLY_ARB	.\include\GL\glext.h	4717;"	d
GL_READ_PIXELS	.\include\GL\glext.h	2279;"	d
GL_READ_PIXELS_FORMAT	.\include\GL\glext.h	2280;"	d
GL_READ_PIXELS_TYPE	.\include\GL\glext.h	2281;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	.\include\GL\glext.h	10632;"	d
GL_READ_PIXEL_DATA_RANGE_NV	.\include\GL\glext.h	10630;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	.\include\GL\glext.h	10634;"	d
GL_READ_WRITE	.\include\GL\glext.h	484;"	d
GL_READ_WRITE_ARB	.\include\GL\glext.h	4719;"	d
GL_RECLAIM_MEMORY_HINT_PGI	.\include\GL\glext.h	11824;"	d
GL_RECT_NV	.\include\GL\glext.h	10422;"	d
GL_REDUCE	.\include\GL\glext.h	3479;"	d
GL_REDUCE_EXT	.\include\GL\glext.h	6597;"	d
GL_RED_BIT_ATI	.\include\GL\glext.h	6158;"	d
GL_RED_INTEGER	.\include\GL\glext.h	950;"	d
GL_RED_INTEGER_EXT	.\include\GL\glext.h	8421;"	d
GL_RED_MAX_CLAMP_INGR	.\include\GL\glext.h	9122;"	d
GL_RED_MIN_CLAMP_INGR	.\include\GL\glext.h	9118;"	d
GL_RED_NV	.\include\GL\glext.h	9477;"	d
GL_RED_SNORM	.\include\GL\glext.h	8548;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	.\include\GL\glext.h	2389;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	.\include\GL\glext.h	2388;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	.\include\GL\glext.h	2387;"	d
GL_REFERENCED_BY_MESH_SHADER_NV	.\include\GL\glext.h	10245;"	d
GL_REFERENCED_BY_TASK_SHADER_NV	.\include\GL\glext.h	10246;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	.\include\GL\glext.h	2385;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	.\include\GL\glext.h	2386;"	d
GL_REFERENCED_BY_VERTEX_SHADER	.\include\GL\glext.h	2384;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	.\include\GL\glext.h	12367;"	d
GL_REFERENCE_PLANE_SGIX	.\include\GL\glext.h	12366;"	d
GL_REFLECTION_MAP	.\include\GL\glext.h	192;"	d
GL_REFLECTION_MAP_ARB	.\include\GL\glext.h	4403;"	d
GL_REFLECTION_MAP_EXT	.\include\GL\glext.h	8323;"	d
GL_REFLECTION_MAP_NV	.\include\GL\glext.h	10999;"	d
GL_REGISTER_COMBINERS_NV	.\include\GL\glext.h	10720;"	d
GL_REG_0_ATI	.\include\GL\glext.h	6068;"	d
GL_REG_10_ATI	.\include\GL\glext.h	6078;"	d
GL_REG_11_ATI	.\include\GL\glext.h	6079;"	d
GL_REG_12_ATI	.\include\GL\glext.h	6080;"	d
GL_REG_13_ATI	.\include\GL\glext.h	6081;"	d
GL_REG_14_ATI	.\include\GL\glext.h	6082;"	d
GL_REG_15_ATI	.\include\GL\glext.h	6083;"	d
GL_REG_16_ATI	.\include\GL\glext.h	6084;"	d
GL_REG_17_ATI	.\include\GL\glext.h	6085;"	d
GL_REG_18_ATI	.\include\GL\glext.h	6086;"	d
GL_REG_19_ATI	.\include\GL\glext.h	6087;"	d
GL_REG_1_ATI	.\include\GL\glext.h	6069;"	d
GL_REG_20_ATI	.\include\GL\glext.h	6088;"	d
GL_REG_21_ATI	.\include\GL\glext.h	6089;"	d
GL_REG_22_ATI	.\include\GL\glext.h	6090;"	d
GL_REG_23_ATI	.\include\GL\glext.h	6091;"	d
GL_REG_24_ATI	.\include\GL\glext.h	6092;"	d
GL_REG_25_ATI	.\include\GL\glext.h	6093;"	d
GL_REG_26_ATI	.\include\GL\glext.h	6094;"	d
GL_REG_27_ATI	.\include\GL\glext.h	6095;"	d
GL_REG_28_ATI	.\include\GL\glext.h	6096;"	d
GL_REG_29_ATI	.\include\GL\glext.h	6097;"	d
GL_REG_2_ATI	.\include\GL\glext.h	6070;"	d
GL_REG_30_ATI	.\include\GL\glext.h	6098;"	d
GL_REG_31_ATI	.\include\GL\glext.h	6099;"	d
GL_REG_3_ATI	.\include\GL\glext.h	6071;"	d
GL_REG_4_ATI	.\include\GL\glext.h	6072;"	d
GL_REG_5_ATI	.\include\GL\glext.h	6073;"	d
GL_REG_6_ATI	.\include\GL\glext.h	6074;"	d
GL_REG_7_ATI	.\include\GL\glext.h	6075;"	d
GL_REG_8_ATI	.\include\GL\glext.h	6076;"	d
GL_REG_9_ATI	.\include\GL\glext.h	6077;"	d
GL_RELATIVE_ARC_TO_NV	.\include\GL\glext.h	10427;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	.\include\GL\glext.h	10466;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10406;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	.\include\GL\glext.h	10400;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	.\include\GL\glext.h	10416;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	.\include\GL\glext.h	10418;"	d
GL_RELATIVE_LINE_TO_NV	.\include\GL\glext.h	10398;"	d
GL_RELATIVE_MOVE_TO_NV	.\include\GL\glext.h	10396;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	.\include\GL\glext.h	10404;"	d
GL_RELATIVE_RECT_NV	.\include\GL\glext.h	10460;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	.\include\GL\glext.h	10455;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	.\include\GL\glext.h	10457;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	.\include\GL\glext.h	10459;"	d
GL_RELATIVE_ROUNDED_RECT_NV	.\include\GL\glext.h	10453;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	.\include\GL\glext.h	10412;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	.\include\GL\glext.h	10414;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10410;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	.\include\GL\glext.h	10408;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	.\include\GL\glext.h	10402;"	d
GL_RELEASED_APPLE	.\include\GL\glext.h	5881;"	d
GL_RENDERBUFFER	.\include\GL\glext.h	1064;"	d
GL_RENDERBUFFER_ALPHA_SIZE	.\include\GL\glext.h	1075;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	.\include\GL\glext.h	7433;"	d
GL_RENDERBUFFER_BINDING	.\include\GL\glext.h	1012;"	d
GL_RENDERBUFFER_BINDING_EXT	.\include\GL\glext.h	7388;"	d
GL_RENDERBUFFER_BLUE_SIZE	.\include\GL\glext.h	1074;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	.\include\GL\glext.h	7432;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	.\include\GL\glext.h	9918;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	.\include\GL\glext.h	9917;"	d
GL_RENDERBUFFER_DEPTH_SIZE	.\include\GL\glext.h	1076;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	.\include\GL\glext.h	7434;"	d
GL_RENDERBUFFER_EXT	.\include\GL\glext.h	7422;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	.\include\GL\glext.h	6217;"	d
GL_RENDERBUFFER_GREEN_SIZE	.\include\GL\glext.h	1073;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	.\include\GL\glext.h	7431;"	d
GL_RENDERBUFFER_HEIGHT	.\include\GL\glext.h	1066;"	d
GL_RENDERBUFFER_HEIGHT_EXT	.\include\GL\glext.h	7424;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	.\include\GL\glext.h	1067;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	.\include\GL\glext.h	7425;"	d
GL_RENDERBUFFER_RED_SIZE	.\include\GL\glext.h	1072;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	.\include\GL\glext.h	7430;"	d
GL_RENDERBUFFER_SAMPLES	.\include\GL\glext.h	1016;"	d
GL_RENDERBUFFER_SAMPLES_EXT	.\include\GL\glext.h	7368;"	d
GL_RENDERBUFFER_STENCIL_SIZE	.\include\GL\glext.h	1077;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	.\include\GL\glext.h	7435;"	d
GL_RENDERBUFFER_STORAGE_SAMPLES_AMD	.\include\GL\glext.h	5428;"	d
GL_RENDERBUFFER_WIDTH	.\include\GL\glext.h	1065;"	d
GL_RENDERBUFFER_WIDTH_EXT	.\include\GL\glext.h	7423;"	d
GL_RENDER_GPU_MASK_NV	.\include\GL\glext.h	9954;"	d
GL_REND_screen_coordinates	.\include\GL\glext.h	11875;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	.\include\GL\glext.h	12614;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	.\include\GL\glext.h	12613;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	.\include\GL\glext.h	12611;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	.\include\GL\glext.h	12612;"	d
GL_REPLACEMENT_CODE_SUN	.\include\GL\glext.h	12610;"	d
GL_REPLACE_EXT	.\include\GL\glext.h	8242;"	d
GL_REPLACE_MIDDLE_SUN	.\include\GL\glext.h	12607;"	d
GL_REPLACE_OLDEST_SUN	.\include\GL\glext.h	12608;"	d
GL_REPLACE_VALUE_AMD	.\include\GL\glext.h	5744;"	d
GL_REPLICATE_BORDER	.\include\GL\glext.h	3535;"	d
GL_REPLICATE_BORDER_HP	.\include\GL\glext.h	8985;"	d
GL_REPRESENTATIVE_FRAGMENT_TEST_NV	.\include\GL\glext.h	10812;"	d
GL_RESAMPLE_AVERAGE_OML	.\include\GL\glext.h	11794;"	d
GL_RESAMPLE_DECIMATE_OML	.\include\GL\glext.h	11795;"	d
GL_RESAMPLE_DECIMATE_SGIX	.\include\GL\glext.h	12380;"	d
GL_RESAMPLE_REPLICATE_OML	.\include\GL\glext.h	11792;"	d
GL_RESAMPLE_REPLICATE_SGIX	.\include\GL\glext.h	12378;"	d
GL_RESAMPLE_ZERO_FILL_OML	.\include\GL\glext.h	11793;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	.\include\GL\glext.h	12379;"	d
GL_RESCALE_NORMAL	.\include\GL\glext.h	106;"	d
GL_RESCALE_NORMAL_EXT	.\include\GL\glext.h	7947;"	d
GL_RESET_NOTIFICATION_STRATEGY	.\include\GL\glext.h	2580;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	.\include\GL\glext.h	3940;"	d
GL_RESTART_PATH_NV	.\include\GL\glext.h	10419;"	d
GL_RESTART_SUN	.\include\GL\glext.h	12606;"	d
GL_RETAINED_APPLE	.\include\GL\glext.h	5883;"	d
GL_RG	.\include\GL\glext.h	1095;"	d
GL_RG16	.\include\GL\glext.h	1100;"	d
GL_RG16F	.\include\GL\glext.h	1103;"	d
GL_RG16I	.\include\GL\glext.h	1113;"	d
GL_RG16UI	.\include\GL\glext.h	1114;"	d
GL_RG16_SNORM	.\include\GL\glext.h	1315;"	d
GL_RG32F	.\include\GL\glext.h	1104;"	d
GL_RG32I	.\include\GL\glext.h	1115;"	d
GL_RG32UI	.\include\GL\glext.h	1116;"	d
GL_RG8	.\include\GL\glext.h	1099;"	d
GL_RG8I	.\include\GL\glext.h	1111;"	d
GL_RG8UI	.\include\GL\glext.h	1112;"	d
GL_RG8_SNORM	.\include\GL\glext.h	1311;"	d
GL_RGB10_A2UI	.\include\GL\glext.h	1504;"	d
GL_RGB10_A2_EXT	.\include\GL\glext.h	8233;"	d
GL_RGB10_EXT	.\include\GL\glext.h	8226;"	d
GL_RGB12_EXT	.\include\GL\glext.h	8227;"	d
GL_RGB16F	.\include\GL\glext.h	904;"	d
GL_RGB16F_ARB	.\include\GL\glext.h	4494;"	d
GL_RGB16I	.\include\GL\glext.h	947;"	d
GL_RGB16I_EXT	.\include\GL\glext.h	8410;"	d
GL_RGB16UI	.\include\GL\glext.h	941;"	d
GL_RGB16UI_EXT	.\include\GL\glext.h	8392;"	d
GL_RGB16_EXT	.\include\GL\glext.h	8228;"	d
GL_RGB16_SNORM	.\include\GL\glext.h	1316;"	d
GL_RGB2_EXT	.\include\GL\glext.h	8222;"	d
GL_RGB32F	.\include\GL\glext.h	902;"	d
GL_RGB32F_ARB	.\include\GL\glext.h	4488;"	d
GL_RGB32I	.\include\GL\glext.h	945;"	d
GL_RGB32I_EXT	.\include\GL\glext.h	8404;"	d
GL_RGB32UI	.\include\GL\glext.h	939;"	d
GL_RGB32UI_EXT	.\include\GL\glext.h	8386;"	d
GL_RGB4_EXT	.\include\GL\glext.h	8223;"	d
GL_RGB4_S3TC	.\include\GL\glext.h	11883;"	d
GL_RGB565	.\include\GL\glext.h	1825;"	d
GL_RGB5_A1_EXT	.\include\GL\glext.h	8231;"	d
GL_RGB5_EXT	.\include\GL\glext.h	8224;"	d
GL_RGB8I	.\include\GL\glext.h	949;"	d
GL_RGB8I_EXT	.\include\GL\glext.h	8416;"	d
GL_RGB8UI	.\include\GL\glext.h	943;"	d
GL_RGB8UI_EXT	.\include\GL\glext.h	8398;"	d
GL_RGB8_EXT	.\include\GL\glext.h	8225;"	d
GL_RGB8_SNORM	.\include\GL\glext.h	1312;"	d
GL_RGB9_E5	.\include\GL\glext.h	920;"	d
GL_RGB9_E5_EXT	.\include\GL\glext.h	8529;"	d
GL_RGBA12_EXT	.\include\GL\glext.h	8234;"	d
GL_RGBA16F	.\include\GL\glext.h	903;"	d
GL_RGBA16F_ARB	.\include\GL\glext.h	4493;"	d
GL_RGBA16I	.\include\GL\glext.h	946;"	d
GL_RGBA16I_EXT	.\include\GL\glext.h	8409;"	d
GL_RGBA16UI	.\include\GL\glext.h	940;"	d
GL_RGBA16UI_EXT	.\include\GL\glext.h	8391;"	d
GL_RGBA16_EXT	.\include\GL\glext.h	8235;"	d
GL_RGBA16_SNORM	.\include\GL\glext.h	1317;"	d
GL_RGBA2_EXT	.\include\GL\glext.h	8229;"	d
GL_RGBA32F	.\include\GL\glext.h	901;"	d
GL_RGBA32F_ARB	.\include\GL\glext.h	4487;"	d
GL_RGBA32I	.\include\GL\glext.h	944;"	d
GL_RGBA32I_EXT	.\include\GL\glext.h	8403;"	d
GL_RGBA32UI	.\include\GL\glext.h	938;"	d
GL_RGBA32UI_EXT	.\include\GL\glext.h	8385;"	d
GL_RGBA4_DXT5_S3TC	.\include\GL\glext.h	11887;"	d
GL_RGBA4_EXT	.\include\GL\glext.h	8230;"	d
GL_RGBA4_S3TC	.\include\GL\glext.h	11885;"	d
GL_RGBA8I	.\include\GL\glext.h	948;"	d
GL_RGBA8I_EXT	.\include\GL\glext.h	8415;"	d
GL_RGBA8UI	.\include\GL\glext.h	942;"	d
GL_RGBA8UI_EXT	.\include\GL\glext.h	8397;"	d
GL_RGBA8_EXT	.\include\GL\glext.h	8232;"	d
GL_RGBA8_SNORM	.\include\GL\glext.h	1313;"	d
GL_RGBA_DXT5_S3TC	.\include\GL\glext.h	11886;"	d
GL_RGBA_FLOAT16_APPLE	.\include\GL\glext.h	5857;"	d
GL_RGBA_FLOAT16_ATI	.\include\GL\glext.h	6279;"	d
GL_RGBA_FLOAT32_APPLE	.\include\GL\glext.h	5851;"	d
GL_RGBA_FLOAT32_ATI	.\include\GL\glext.h	6273;"	d
GL_RGBA_FLOAT_MODE_ARB	.\include\GL\glext.h	2975;"	d
GL_RGBA_FLOAT_MODE_ATI	.\include\GL\glext.h	6222;"	d
GL_RGBA_INTEGER	.\include\GL\glext.h	954;"	d
GL_RGBA_INTEGER_EXT	.\include\GL\glext.h	8426;"	d
GL_RGBA_INTEGER_MODE_EXT	.\include\GL\glext.h	8431;"	d
GL_RGBA_S3TC	.\include\GL\glext.h	11884;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	.\include\GL\glext.h	7809;"	d
GL_RGBA_SNORM	.\include\GL\glext.h	8551;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	.\include\GL\glext.h	11065;"	d
GL_RGB_422_APPLE	.\include\GL\glext.h	5898;"	d
GL_RGB_FLOAT16_APPLE	.\include\GL\glext.h	5858;"	d
GL_RGB_FLOAT16_ATI	.\include\GL\glext.h	6280;"	d
GL_RGB_FLOAT32_APPLE	.\include\GL\glext.h	5852;"	d
GL_RGB_FLOAT32_ATI	.\include\GL\glext.h	6274;"	d
GL_RGB_INTEGER	.\include\GL\glext.h	953;"	d
GL_RGB_INTEGER_EXT	.\include\GL\glext.h	8425;"	d
GL_RGB_RAW_422_APPLE	.\include\GL\glext.h	5901;"	d
GL_RGB_S3TC	.\include\GL\glext.h	11882;"	d
GL_RGB_SCALE	.\include\GL\glext.h	212;"	d
GL_RGB_SCALE_ARB	.\include\GL\glext.h	4448;"	d
GL_RGB_SCALE_EXT	.\include\GL\glext.h	8345;"	d
GL_RGB_SNORM	.\include\GL\glext.h	8550;"	d
GL_RG_INTEGER	.\include\GL\glext.h	1096;"	d
GL_RG_SNORM	.\include\GL\glext.h	8549;"	d
GL_ROUNDED_RECT2_NV	.\include\GL\glext.h	10454;"	d
GL_ROUNDED_RECT4_NV	.\include\GL\glext.h	10456;"	d
GL_ROUNDED_RECT8_NV	.\include\GL\glext.h	10458;"	d
GL_ROUNDED_RECT_NV	.\include\GL\glext.h	10452;"	d
GL_ROUND_NV	.\include\GL\glext.h	10371;"	d
GL_S3_s3tc	.\include\GL\glext.h	11881;"	d
GL_SAMPLER	.\include\GL\glext.h	2236;"	d
GL_SAMPLER_1D	.\include\GL\glext.h	620;"	d
GL_SAMPLER_1D_ARB	.\include\GL\glext.h	4097;"	d
GL_SAMPLER_1D_ARRAY	.\include\GL\glext.h	957;"	d
GL_SAMPLER_1D_ARRAY_EXT	.\include\GL\glext.h	7521;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	.\include\GL\glext.h	959;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	.\include\GL\glext.h	7524;"	d
GL_SAMPLER_1D_SHADOW	.\include\GL\glext.h	624;"	d
GL_SAMPLER_1D_SHADOW_ARB	.\include\GL\glext.h	4101;"	d
GL_SAMPLER_2D	.\include\GL\glext.h	621;"	d
GL_SAMPLER_2D_ARB	.\include\GL\glext.h	4098;"	d
GL_SAMPLER_2D_ARRAY	.\include\GL\glext.h	958;"	d
GL_SAMPLER_2D_ARRAY_EXT	.\include\GL\glext.h	7522;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	.\include\GL\glext.h	960;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	.\include\GL\glext.h	7525;"	d
GL_SAMPLER_2D_MULTISAMPLE	.\include\GL\glext.h	1444;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1447;"	d
GL_SAMPLER_2D_RECT	.\include\GL\glext.h	1295;"	d
GL_SAMPLER_2D_RECT_ARB	.\include\GL\glext.h	4103;"	d
GL_SAMPLER_2D_RECT_SHADOW	.\include\GL\glext.h	1296;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	.\include\GL\glext.h	4104;"	d
GL_SAMPLER_2D_SHADOW	.\include\GL\glext.h	625;"	d
GL_SAMPLER_2D_SHADOW_ARB	.\include\GL\glext.h	4102;"	d
GL_SAMPLER_3D	.\include\GL\glext.h	622;"	d
GL_SAMPLER_3D_ARB	.\include\GL\glext.h	4099;"	d
GL_SAMPLER_BINDING	.\include\GL\glext.h	1503;"	d
GL_SAMPLER_BUFFER	.\include\GL\glext.h	1297;"	d
GL_SAMPLER_BUFFER_AMD	.\include\GL\glext.h	5776;"	d
GL_SAMPLER_BUFFER_EXT	.\include\GL\glext.h	7523;"	d
GL_SAMPLER_CUBE	.\include\GL\glext.h	623;"	d
GL_SAMPLER_CUBE_ARB	.\include\GL\glext.h	4100;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	.\include\GL\glext.h	1642;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4421;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	.\include\GL\glext.h	1643;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	.\include\GL\glext.h	4422;"	d
GL_SAMPLER_CUBE_SHADOW	.\include\GL\glext.h	961;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	.\include\GL\glext.h	7526;"	d
GL_SAMPLER_OBJECT_AMD	.\include\GL\glext.h	5610;"	d
GL_SAMPLER_RENDERBUFFER_NV	.\include\GL\glext.h	9768;"	d
GL_SAMPLES	.\include\GL\glext.h	163;"	d
GL_SAMPLES_3DFX	.\include\GL\glext.h	5349;"	d
GL_SAMPLES_ARB	.\include\GL\glext.h	3707;"	d
GL_SAMPLES_EXT	.\include\GL\glext.h	7784;"	d
GL_SAMPLES_PASSED	.\include\GL\glext.h	497;"	d
GL_SAMPLES_PASSED_ARB	.\include\GL\glext.h	3832;"	d
GL_SAMPLES_SGIS	.\include\GL\glext.h	11941;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	.\include\GL\glext.h	159;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	.\include\GL\glext.h	3703;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	.\include\GL\glext.h	7773;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	.\include\GL\glext.h	11930;"	d
GL_SAMPLE_ALPHA_TO_ONE	.\include\GL\glext.h	160;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	.\include\GL\glext.h	3704;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	.\include\GL\glext.h	7774;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	.\include\GL\glext.h	11931;"	d
GL_SAMPLE_BUFFERS	.\include\GL\glext.h	162;"	d
GL_SAMPLE_BUFFERS_3DFX	.\include\GL\glext.h	5348;"	d
GL_SAMPLE_BUFFERS_ARB	.\include\GL\glext.h	3706;"	d
GL_SAMPLE_BUFFERS_EXT	.\include\GL\glext.h	7783;"	d
GL_SAMPLE_BUFFERS_SGIS	.\include\GL\glext.h	11940;"	d
GL_SAMPLE_COVERAGE	.\include\GL\glext.h	161;"	d
GL_SAMPLE_COVERAGE_ARB	.\include\GL\glext.h	3705;"	d
GL_SAMPLE_COVERAGE_INVERT	.\include\GL\glext.h	165;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	.\include\GL\glext.h	3709;"	d
GL_SAMPLE_COVERAGE_VALUE	.\include\GL\glext.h	164;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	.\include\GL\glext.h	3708;"	d
GL_SAMPLE_LOCATION_ARB	.\include\GL\glext.h	3996;"	d
GL_SAMPLE_LOCATION_NV	.\include\GL\glext.h	10826;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	.\include\GL\glext.h	3994;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	.\include\GL\glext.h	10824;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	.\include\GL\glext.h	3993;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	.\include\GL\glext.h	10823;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	.\include\GL\glext.h	3992;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	.\include\GL\glext.h	10822;"	d
GL_SAMPLE_MASK	.\include\GL\glext.h	1433;"	d
GL_SAMPLE_MASK_EXT	.\include\GL\glext.h	7775;"	d
GL_SAMPLE_MASK_INVERT_EXT	.\include\GL\glext.h	7786;"	d
GL_SAMPLE_MASK_INVERT_SGIS	.\include\GL\glext.h	11943;"	d
GL_SAMPLE_MASK_NV	.\include\GL\glext.h	9763;"	d
GL_SAMPLE_MASK_SGIS	.\include\GL\glext.h	11932;"	d
GL_SAMPLE_MASK_VALUE	.\include\GL\glext.h	1434;"	d
GL_SAMPLE_MASK_VALUE_EXT	.\include\GL\glext.h	7785;"	d
GL_SAMPLE_MASK_VALUE_NV	.\include\GL\glext.h	9764;"	d
GL_SAMPLE_MASK_VALUE_SGIS	.\include\GL\glext.h	11942;"	d
GL_SAMPLE_PATTERN_EXT	.\include\GL\glext.h	7787;"	d
GL_SAMPLE_PATTERN_SGIS	.\include\GL\glext.h	11944;"	d
GL_SAMPLE_POSITION	.\include\GL\glext.h	1432;"	d
GL_SAMPLE_POSITION_NV	.\include\GL\glext.h	9762;"	d
GL_SAMPLE_SHADING	.\include\GL\glext.h	1635;"	d
GL_SAMPLE_SHADING_ARB	.\include\GL\glext.h	4012;"	d
GL_SATURATE_BIT_ATI	.\include\GL\glext.h	6167;"	d
GL_SCALAR_EXT	.\include\GL\glext.h	8771;"	d
GL_SCALEBIAS_HINT_SGIX	.\include\GL\glext.h	12385;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	.\include\GL\glext.h	7379;"	d
GL_SCALED_RESOLVE_NICEST_EXT	.\include\GL\glext.h	7380;"	d
GL_SCALE_BY_FOUR_NV	.\include\GL\glext.h	10744;"	d
GL_SCALE_BY_ONE_HALF_NV	.\include\GL\glext.h	10745;"	d
GL_SCALE_BY_TWO_NV	.\include\GL\glext.h	10743;"	d
GL_SCISSOR_BOX_EXCLUSIVE_NV	.\include\GL\glext.h	10847;"	d
GL_SCISSOR_COMMAND_NV	.\include\GL\glext.h	9539;"	d
GL_SCISSOR_TEST_EXCLUSIVE_NV	.\include\GL\glext.h	10846;"	d
GL_SCREEN_COORDINATES_REND	.\include\GL\glext.h	11876;"	d
GL_SCREEN_KHR	.\include\GL\glext.h	4938;"	d
GL_SCREEN_NV	.\include\GL\glext.h	9478;"	d
GL_SECONDARY_COLOR_ARRAY	.\include\GL\glext.h	354;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11369;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	505;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4713;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	.\include\GL\glext.h	7958;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	.\include\GL\glext.h	11379;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	.\include\GL\glext.h	9079;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9087;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	.\include\GL\glext.h	353;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	.\include\GL\glext.h	7957;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	.\include\GL\glext.h	350;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	.\include\GL\glext.h	7954;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	.\include\GL\glext.h	352;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	.\include\GL\glext.h	7956;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	.\include\GL\glext.h	351;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	.\include\GL\glext.h	7955;"	d
GL_SECONDARY_COLOR_NV	.\include\GL\glext.h	10477;"	d
GL_SECONDARY_INTERPOLATOR_ATI	.\include\GL\glext.h	6143;"	d
GL_SEPARABLE_2D	.\include\GL\glext.h	3475;"	d
GL_SEPARABLE_2D_EXT	.\include\GL\glext.h	6593;"	d
GL_SEPARATE_ATTRIBS	.\include\GL\glext.h	935;"	d
GL_SEPARATE_ATTRIBS_EXT	.\include\GL\glext.h	8581;"	d
GL_SEPARATE_ATTRIBS_NV	.\include\GL\glext.h	11187;"	d
GL_SEPARATE_SPECULAR_COLOR	.\include\GL\glext.h	109;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	.\include\GL\glext.h	8063;"	d
GL_SET_AMD	.\include\GL\glext.h	5743;"	d
GL_SGIS_detail_texture	.\include\GL\glext.h	11891;"	d
GL_SGIS_fog_function	.\include\GL\glext.h	11909;"	d
GL_SGIS_generate_mipmap	.\include\GL\glext.h	11922;"	d
GL_SGIS_multisample	.\include\GL\glext.h	11928;"	d
GL_SGIS_pixel_texture	.\include\GL\glext.h	11954;"	d
GL_SGIS_point_line_texgen	.\include\GL\glext.h	11976;"	d
GL_SGIS_point_parameters	.\include\GL\glext.h	11988;"	d
GL_SGIS_sharpen_texture	.\include\GL\glext.h	12002;"	d
GL_SGIS_texture4D	.\include\GL\glext.h	12016;"	d
GL_SGIS_texture_border_clamp	.\include\GL\glext.h	12036;"	d
GL_SGIS_texture_color_mask	.\include\GL\glext.h	12041;"	d
GL_SGIS_texture_edge_clamp	.\include\GL\glext.h	12050;"	d
GL_SGIS_texture_filter4	.\include\GL\glext.h	12055;"	d
GL_SGIS_texture_lod	.\include\GL\glext.h	12067;"	d
GL_SGIS_texture_select	.\include\GL\glext.h	12075;"	d
GL_SGIX_async	.\include\GL\glext.h	12101;"	d
GL_SGIX_async_histogram	.\include\GL\glext.h	12120;"	d
GL_SGIX_async_pixel	.\include\GL\glext.h	12126;"	d
GL_SGIX_blend_alpha_minmax	.\include\GL\glext.h	12136;"	d
GL_SGIX_calligraphic_fragment	.\include\GL\glext.h	12142;"	d
GL_SGIX_clipmap	.\include\GL\glext.h	12147;"	d
GL_SGIX_convolution_accuracy	.\include\GL\glext.h	12163;"	d
GL_SGIX_depth_pass_instrument	.\include\GL\glext.h	12168;"	d
GL_SGIX_depth_texture	.\include\GL\glext.h	12172;"	d
GL_SGIX_flush_raster	.\include\GL\glext.h	12179;"	d
GL_SGIX_fog_offset	.\include\GL\glext.h	12187;"	d
GL_SGIX_fragment_lighting	.\include\GL\glext.h	12193;"	d
GL_SGIX_framezoom	.\include\GL\glext.h	12255;"	d
GL_SGIX_igloo_interface	.\include\GL\glext.h	12266;"	d
GL_SGIX_instruments	.\include\GL\glext.h	12274;"	d
GL_SGIX_interlace	.\include\GL\glext.h	12294;"	d
GL_SGIX_ir_instrument1	.\include\GL\glext.h	12299;"	d
GL_SGIX_list_priority	.\include\GL\glext.h	12304;"	d
GL_SGIX_pixel_texture	.\include\GL\glext.h	12323;"	d
GL_SGIX_pixel_tiles	.\include\GL\glext.h	12333;"	d
GL_SGIX_polynomial_ffd	.\include\GL\glext.h	12345;"	d
GL_SGIX_reference_plane	.\include\GL\glext.h	12365;"	d
GL_SGIX_resample	.\include\GL\glext.h	12375;"	d
GL_SGIX_scalebias_hint	.\include\GL\glext.h	12384;"	d
GL_SGIX_shadow	.\include\GL\glext.h	12389;"	d
GL_SGIX_shadow_ambient	.\include\GL\glext.h	12397;"	d
GL_SGIX_sprite	.\include\GL\glext.h	12402;"	d
GL_SGIX_subsample	.\include\GL\glext.h	12423;"	d
GL_SGIX_tag_sample_buffer	.\include\GL\glext.h	12432;"	d
GL_SGIX_texture_add_env	.\include\GL\glext.h	12440;"	d
GL_SGIX_texture_coordinate_clamp	.\include\GL\glext.h	12445;"	d
GL_SGIX_texture_lod_bias	.\include\GL\glext.h	12452;"	d
GL_SGIX_texture_multi_buffer	.\include\GL\glext.h	12459;"	d
GL_SGIX_texture_scale_bias	.\include\GL\glext.h	12464;"	d
GL_SGIX_vertex_preclip	.\include\GL\glext.h	12472;"	d
GL_SGIX_ycrcb	.\include\GL\glext.h	12478;"	d
GL_SGIX_ycrcb_subsample	.\include\GL\glext.h	12484;"	d
GL_SGIX_ycrcba	.\include\GL\glext.h	12488;"	d
GL_SGI_color_matrix	.\include\GL\glext.h	12494;"	d
GL_SGI_color_table	.\include\GL\glext.h	12509;"	d
GL_SGI_texture_color_table	.\include\GL\glext.h	12545;"	d
GL_SHADER	.\include\GL\glext.h	2232;"	d
GL_SHADER_BINARY_FORMATS	.\include\GL\glext.h	1820;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V	.\include\GL\glext.h	2836;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	.\include\GL\glext.h	3360;"	d
GL_SHADER_COMPILER	.\include\GL\glext.h	1819;"	d
GL_SHADER_CONSISTENT_NV	.\include\GL\glext.h	11069;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	.\include\GL\glext.h	10913;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	.\include\GL\glext.h	2074;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	.\include\GL\glext.h	8131;"	d
GL_SHADER_IMAGE_ATOMIC	.\include\GL\glext.h	2304;"	d
GL_SHADER_IMAGE_LOAD	.\include\GL\glext.h	2302;"	d
GL_SHADER_IMAGE_STORE	.\include\GL\glext.h	2303;"	d
GL_SHADER_INCLUDE_ARB	.\include\GL\glext.h	4235;"	d
GL_SHADER_OBJECT_ARB	.\include\GL\glext.h	4081;"	d
GL_SHADER_OBJECT_EXT	.\include\GL\glext.h	6738;"	d
GL_SHADER_OPERATION_NV	.\include\GL\glext.h	11071;"	d
GL_SHADER_SOURCE_LENGTH	.\include\GL\glext.h	634;"	d
GL_SHADER_STORAGE_BARRIER_BIT	.\include\GL\glext.h	2409;"	d
GL_SHADER_STORAGE_BLOCK	.\include\GL\glext.h	2353;"	d
GL_SHADER_STORAGE_BUFFER	.\include\GL\glext.h	2395;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	.\include\GL\glext.h	2396;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	.\include\GL\glext.h	2408;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	.\include\GL\glext.h	2398;"	d
GL_SHADER_STORAGE_BUFFER_START	.\include\GL\glext.h	2397;"	d
GL_SHADER_TYPE	.\include\GL\glext.h	606;"	d
GL_SHADING_LANGUAGE_VERSION	.\include\GL\glext.h	638;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	.\include\GL\glext.h	4226;"	d
GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV	.\include\GL\glext.h	10949;"	d
GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV	.\include\GL\glext.h	10940;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV	.\include\GL\glext.h	10941;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV	.\include\GL\glext.h	10942;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV	.\include\GL\glext.h	10943;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV	.\include\GL\glext.h	10944;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV	.\include\GL\glext.h	10945;"	d
GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV	.\include\GL\glext.h	10939;"	d
GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV	.\include\GL\glext.h	10946;"	d
GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV	.\include\GL\glext.h	10947;"	d
GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV	.\include\GL\glext.h	10948;"	d
GL_SHADING_RATE_IMAGE_BINDING_NV	.\include\GL\glext.h	10950;"	d
GL_SHADING_RATE_IMAGE_NV	.\include\GL\glext.h	10937;"	d
GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV	.\include\GL\glext.h	10953;"	d
GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV	.\include\GL\glext.h	10952;"	d
GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV	.\include\GL\glext.h	10951;"	d
GL_SHADING_RATE_NO_INVOCATIONS_NV	.\include\GL\glext.h	10938;"	d
GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV	.\include\GL\glext.h	10955;"	d
GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV	.\include\GL\glext.h	10956;"	d
GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV	.\include\GL\glext.h	10957;"	d
GL_SHADOW_AMBIENT_SGIX	.\include\GL\glext.h	12398;"	d
GL_SHADOW_ATTENUATION_EXT	.\include\GL\glext.h	7658;"	d
GL_SHARED_EDGE_NV	.\include\GL\glext.h	10624;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	.\include\GL\glext.h	8158;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	.\include\GL\glext.h	12006;"	d
GL_SIGNALED	.\include\GL\glext.h	1425;"	d
GL_SIGNED_ALPHA8_NV	.\include\GL\glext.h	11109;"	d
GL_SIGNED_ALPHA_NV	.\include\GL\glext.h	11108;"	d
GL_SIGNED_HILO16_NV	.\include\GL\glext.h	11099;"	d
GL_SIGNED_HILO8_NV	.\include\GL\glext.h	11159;"	d
GL_SIGNED_HILO_NV	.\include\GL\glext.h	11098;"	d
GL_SIGNED_IDENTITY_NV	.\include\GL\glext.h	10741;"	d
GL_SIGNED_INTENSITY8_NV	.\include\GL\glext.h	11111;"	d
GL_SIGNED_INTENSITY_NV	.\include\GL\glext.h	11110;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	.\include\GL\glext.h	11107;"	d
GL_SIGNED_LUMINANCE8_NV	.\include\GL\glext.h	11105;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	.\include\GL\glext.h	11106;"	d
GL_SIGNED_LUMINANCE_NV	.\include\GL\glext.h	11104;"	d
GL_SIGNED_NEGATE_NV	.\include\GL\glext.h	10742;"	d
GL_SIGNED_NORMALIZED	.\include\GL\glext.h	1318;"	d
GL_SIGNED_RGB8_NV	.\include\GL\glext.h	11103;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	.\include\GL\glext.h	11116;"	d
GL_SIGNED_RGBA8_NV	.\include\GL\glext.h	11101;"	d
GL_SIGNED_RGBA_NV	.\include\GL\glext.h	11100;"	d
GL_SIGNED_RGB_NV	.\include\GL\glext.h	11102;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	.\include\GL\glext.h	11115;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	.\include\GL\glext.h	2309;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	.\include\GL\glext.h	2311;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	.\include\GL\glext.h	2310;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	.\include\GL\glext.h	2312;"	d
GL_SINGLE_COLOR	.\include\GL\glext.h	108;"	d
GL_SINGLE_COLOR_EXT	.\include\GL\glext.h	8062;"	d
GL_SKIP_COMPONENTS1_NV	.\include\GL\glext.h	11195;"	d
GL_SKIP_COMPONENTS2_NV	.\include\GL\glext.h	11194;"	d
GL_SKIP_COMPONENTS3_NV	.\include\GL\glext.h	11193;"	d
GL_SKIP_COMPONENTS4_NV	.\include\GL\glext.h	11192;"	d
GL_SKIP_DECODE_EXT	.\include\GL\glext.h	8524;"	d
GL_SKIP_MISSING_GLYPH_NV	.\include\GL\glext.h	10376;"	d
GL_SLICE_ACCUM_SUN	.\include\GL\glext.h	12601;"	d
GL_SLUMINANCE	.\include\GL\glext.h	861;"	d
GL_SLUMINANCE8	.\include\GL\glext.h	862;"	d
GL_SLUMINANCE8_ALPHA8	.\include\GL\glext.h	860;"	d
GL_SLUMINANCE8_ALPHA8_EXT	.\include\GL\glext.h	8502;"	d
GL_SLUMINANCE8_EXT	.\include\GL\glext.h	8504;"	d
GL_SLUMINANCE_ALPHA	.\include\GL\glext.h	859;"	d
GL_SLUMINANCE_ALPHA_EXT	.\include\GL\glext.h	8501;"	d
GL_SLUMINANCE_EXT	.\include\GL\glext.h	8503;"	d
GL_SMALL_CCW_ARC_TO_NV	.\include\GL\glext.h	10411;"	d
GL_SMALL_CW_ARC_TO_NV	.\include\GL\glext.h	10413;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	.\include\GL\glext.h	10409;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	.\include\GL\glext.h	104;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	.\include\GL\glext.h	103;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	.\include\GL\glext.h	102;"	d
GL_SMOOTH_POINT_SIZE_RANGE	.\include\GL\glext.h	101;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	.\include\GL\glext.h	10407;"	d
GL_SM_COUNT_NV	.\include\GL\glext.h	10928;"	d
GL_SOFTLIGHT_KHR	.\include\GL\glext.h	4945;"	d
GL_SOFTLIGHT_NV	.\include\GL\glext.h	9479;"	d
GL_SOURCE0_ALPHA	.\include\GL\glext.h	203;"	d
GL_SOURCE0_ALPHA_ARB	.\include\GL\glext.h	4439;"	d
GL_SOURCE0_ALPHA_EXT	.\include\GL\glext.h	8354;"	d
GL_SOURCE0_RGB	.\include\GL\glext.h	200;"	d
GL_SOURCE0_RGB_ARB	.\include\GL\glext.h	4436;"	d
GL_SOURCE0_RGB_EXT	.\include\GL\glext.h	8351;"	d
GL_SOURCE1_ALPHA	.\include\GL\glext.h	204;"	d
GL_SOURCE1_ALPHA_ARB	.\include\GL\glext.h	4440;"	d
GL_SOURCE1_ALPHA_EXT	.\include\GL\glext.h	8355;"	d
GL_SOURCE1_RGB	.\include\GL\glext.h	201;"	d
GL_SOURCE1_RGB_ARB	.\include\GL\glext.h	4437;"	d
GL_SOURCE1_RGB_EXT	.\include\GL\glext.h	8352;"	d
GL_SOURCE2_ALPHA	.\include\GL\glext.h	205;"	d
GL_SOURCE2_ALPHA_ARB	.\include\GL\glext.h	4441;"	d
GL_SOURCE2_ALPHA_EXT	.\include\GL\glext.h	8356;"	d
GL_SOURCE2_RGB	.\include\GL\glext.h	202;"	d
GL_SOURCE2_RGB_ARB	.\include\GL\glext.h	4438;"	d
GL_SOURCE2_RGB_EXT	.\include\GL\glext.h	8353;"	d
GL_SOURCE3_ALPHA_NV	.\include\GL\glext.h	11018;"	d
GL_SOURCE3_RGB_NV	.\include\GL\glext.h	11017;"	d
GL_SPARE0_NV	.\include\GL\glext.h	10730;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	.\include\GL\glext.h	10734;"	d
GL_SPARE1_NV	.\include\GL\glext.h	10731;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	.\include\GL\glext.h	4273;"	d
GL_SPARSE_STORAGE_BIT_ARB	.\include\GL\glext.h	4272;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	.\include\GL\glext.h	4296;"	d
GL_SPIR_V_BINARY	.\include\GL\glext.h	2837;"	d
GL_SPIR_V_BINARY_ARB	.\include\GL\glext.h	3361;"	d
GL_SPIR_V_EXTENSIONS	.\include\GL\glext.h	2852;"	d
GL_SPRITE_AXIAL_SGIX	.\include\GL\glext.h	12407;"	d
GL_SPRITE_AXIS_SGIX	.\include\GL\glext.h	12405;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	.\include\GL\glext.h	12409;"	d
GL_SPRITE_MODE_SGIX	.\include\GL\glext.h	12404;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	.\include\GL\glext.h	12408;"	d
GL_SPRITE_SGIX	.\include\GL\glext.h	12403;"	d
GL_SPRITE_TRANSLATION_SGIX	.\include\GL\glext.h	12406;"	d
GL_SQUARE_NV	.\include\GL\glext.h	10370;"	d
GL_SR8_EXT	.\include\GL\glext.h	8517;"	d
GL_SRC0_ALPHA	.\include\GL\glext.h	519;"	d
GL_SRC0_RGB	.\include\GL\glext.h	516;"	d
GL_SRC1_ALPHA	.\include\GL\glext.h	498;"	d
GL_SRC1_COLOR	.\include\GL\glext.h	1498;"	d
GL_SRC1_RGB	.\include\GL\glext.h	517;"	d
GL_SRC2_ALPHA	.\include\GL\glext.h	520;"	d
GL_SRC2_RGB	.\include\GL\glext.h	518;"	d
GL_SRC_ATOP_NV	.\include\GL\glext.h	9480;"	d
GL_SRC_IN_NV	.\include\GL\glext.h	9481;"	d
GL_SRC_NV	.\include\GL\glext.h	9482;"	d
GL_SRC_OUT_NV	.\include\GL\glext.h	9483;"	d
GL_SRC_OVER_NV	.\include\GL\glext.h	9484;"	d
GL_SRGB	.\include\GL\glext.h	852;"	d
GL_SRGB8	.\include\GL\glext.h	853;"	d
GL_SRGB8_ALPHA8	.\include\GL\glext.h	855;"	d
GL_SRGB8_ALPHA8_EXT	.\include\GL\glext.h	8500;"	d
GL_SRGB8_EXT	.\include\GL\glext.h	8498;"	d
GL_SRGB_ALPHA	.\include\GL\glext.h	854;"	d
GL_SRGB_ALPHA_EXT	.\include\GL\glext.h	8499;"	d
GL_SRGB_DECODE_ARB	.\include\GL\glext.h	3632;"	d
GL_SRGB_EXT	.\include\GL\glext.h	8497;"	d
GL_SRGB_READ	.\include\GL\glext.h	2290;"	d
GL_SRGB_WRITE	.\include\GL\glext.h	2291;"	d
GL_STANDARD_FONT_FORMAT_NV	.\include\GL\glext.h	10468;"	d
GL_STANDARD_FONT_NAME_NV	.\include\GL\glext.h	10329;"	d
GL_STATIC_ATI	.\include\GL\glext.h	6295;"	d
GL_STATIC_COPY	.\include\GL\glext.h	493;"	d
GL_STATIC_COPY_ARB	.\include\GL\glext.h	4728;"	d
GL_STATIC_DRAW	.\include\GL\glext.h	491;"	d
GL_STATIC_DRAW_ARB	.\include\GL\glext.h	4726;"	d
GL_STATIC_READ	.\include\GL\glext.h	492;"	d
GL_STATIC_READ_ARB	.\include\GL\glext.h	4727;"	d
GL_STATIC_VERTEX_ARRAY_IBM	.\include\GL\glext.h	9058;"	d
GL_STENCIL_ATTACHMENT	.\include\GL\glext.h	1062;"	d
GL_STENCIL_ATTACHMENT_EXT	.\include\GL\glext.h	7420;"	d
GL_STENCIL_BACK_FAIL	.\include\GL\glext.h	575;"	d
GL_STENCIL_BACK_FAIL_ATI	.\include\GL\glext.h	6248;"	d
GL_STENCIL_BACK_FUNC	.\include\GL\glext.h	574;"	d
GL_STENCIL_BACK_FUNC_ATI	.\include\GL\glext.h	6247;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	.\include\GL\glext.h	5746;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	.\include\GL\glext.h	576;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	.\include\GL\glext.h	6249;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	.\include\GL\glext.h	577;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	.\include\GL\glext.h	6250;"	d
GL_STENCIL_BACK_REF	.\include\GL\glext.h	643;"	d
GL_STENCIL_BACK_VALUE_MASK	.\include\GL\glext.h	644;"	d
GL_STENCIL_BACK_WRITEMASK	.\include\GL\glext.h	645;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	.\include\GL\glext.h	8168;"	d
GL_STENCIL_COMPONENTS	.\include\GL\glext.h	2272;"	d
GL_STENCIL_INDEX1	.\include\GL\glext.h	1068;"	d
GL_STENCIL_INDEX16	.\include\GL\glext.h	1071;"	d
GL_STENCIL_INDEX16_EXT	.\include\GL\glext.h	7429;"	d
GL_STENCIL_INDEX1_EXT	.\include\GL\glext.h	7426;"	d
GL_STENCIL_INDEX4	.\include\GL\glext.h	1069;"	d
GL_STENCIL_INDEX4_EXT	.\include\GL\glext.h	7427;"	d
GL_STENCIL_INDEX8	.\include\GL\glext.h	1070;"	d
GL_STENCIL_INDEX8_EXT	.\include\GL\glext.h	7428;"	d
GL_STENCIL_OP_VALUE_AMD	.\include\GL\glext.h	5745;"	d
GL_STENCIL_REF_COMMAND_NV	.\include\GL\glext.h	9534;"	d
GL_STENCIL_RENDERABLE	.\include\GL\glext.h	2275;"	d
GL_STENCIL_SAMPLES_NV	.\include\GL\glext.h	9900;"	d
GL_STENCIL_TAG_BITS_EXT	.\include\GL\glext.h	8167;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	.\include\GL\glext.h	8177;"	d
GL_STORAGE_CACHED_APPLE	.\include\GL\glext.h	5921;"	d
GL_STORAGE_CLIENT_APPLE	.\include\GL\glext.h	5957;"	d
GL_STORAGE_PRIVATE_APPLE	.\include\GL\glext.h	5920;"	d
GL_STORAGE_SHARED_APPLE	.\include\GL\glext.h	5922;"	d
GL_STREAM_COPY	.\include\GL\glext.h	490;"	d
GL_STREAM_COPY_ARB	.\include\GL\glext.h	4725;"	d
GL_STREAM_DRAW	.\include\GL\glext.h	488;"	d
GL_STREAM_DRAW_ARB	.\include\GL\glext.h	4723;"	d
GL_STREAM_RASTERIZATION_AMD	.\include\GL\glext.h	5767;"	d
GL_STREAM_READ	.\include\GL\glext.h	489;"	d
GL_STREAM_READ_ARB	.\include\GL\glext.h	4724;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	.\include\GL\glext.h	11834;"	d
GL_STRICT_LIGHTING_HINT_PGI	.\include\GL\glext.h	11835;"	d
GL_STRICT_SCISSOR_HINT_PGI	.\include\GL\glext.h	11836;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	.\include\GL\glext.h	9606;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	.\include\GL\glext.h	9607;"	d
GL_SUBSAMPLE_DISTANCE_AMD	.\include\GL\glext.h	5444;"	d
GL_SUBTRACT	.\include\GL\glext.h	215;"	d
GL_SUBTRACT_ARB	.\include\GL\glext.h	4451;"	d
GL_SUB_ATI	.\include\GL\glext.h	6135;"	d
GL_SUCCESS_NV	.\include\GL\glext.h	11716;"	d
GL_SUNX_constant_data	.\include\GL\glext.h	12551;"	d
GL_SUN_convolution_border_modes	.\include\GL\glext.h	12561;"	d
GL_SUN_global_alpha	.\include\GL\glext.h	12566;"	d
GL_SUN_mesh_array	.\include\GL\glext.h	12590;"	d
GL_SUN_slice_accum	.\include\GL\glext.h	12600;"	d
GL_SUN_triangle_list	.\include\GL\glext.h	12605;"	d
GL_SUN_vertex	.\include\GL\glext.h	12642;"	d
GL_SUPERSAMPLE_SCALE_X_NV	.\include\GL\glext.h	10160;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	.\include\GL\glext.h	10161;"	d
GL_SUPPORTED_MULTISAMPLE_MODES_AMD	.\include\GL\glext.h	5433;"	d
GL_SURFACE_MAPPED_NV	.\include\GL\glext.h	11260;"	d
GL_SURFACE_REGISTERED_NV	.\include\GL\glext.h	11259;"	d
GL_SURFACE_STATE_NV	.\include\GL\glext.h	11258;"	d
GL_SWIZZLE_STQ_ATI	.\include\GL\glext.h	6153;"	d
GL_SWIZZLE_STQ_DQ_ATI	.\include\GL\glext.h	6155;"	d
GL_SWIZZLE_STRQ_ATI	.\include\GL\glext.h	6156;"	d
GL_SWIZZLE_STRQ_DQ_ATI	.\include\GL\glext.h	6157;"	d
GL_SWIZZLE_STR_ATI	.\include\GL\glext.h	6152;"	d
GL_SWIZZLE_STR_DR_ATI	.\include\GL\glext.h	6154;"	d
GL_SYNC_CL_EVENT_ARB	.\include\GL\glext.h	2953;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	.\include\GL\glext.h	2954;"	d
GL_SYNC_CONDITION	.\include\GL\glext.h	1419;"	d
GL_SYNC_FENCE	.\include\GL\glext.h	1422;"	d
GL_SYNC_FLAGS	.\include\GL\glext.h	1421;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	.\include\GL\glext.h	1431;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	.\include\GL\glext.h	1423;"	d
GL_SYNC_STATUS	.\include\GL\glext.h	1420;"	d
GL_SYNC_X11_FENCE_EXT	.\include\GL\glext.h	8958;"	d
GL_SYSTEM_FONT_NAME_NV	.\include\GL\glext.h	10330;"	d
GL_T2F_IUI_N3F_V2F_EXT	.\include\GL\glext.h	7622;"	d
GL_T2F_IUI_N3F_V3F_EXT	.\include\GL\glext.h	7623;"	d
GL_T2F_IUI_V2F_EXT	.\include\GL\glext.h	7620;"	d
GL_T2F_IUI_V3F_EXT	.\include\GL\glext.h	7621;"	d
GL_TABLE_TOO_LARGE	.\include\GL\glext.h	3506;"	d
GL_TABLE_TOO_LARGE_EXT	.\include\GL\glext.h	7589;"	d
GL_TANGENT_ARRAY_EXT	.\include\GL\glext.h	6643;"	d
GL_TANGENT_ARRAY_POINTER_EXT	.\include\GL\glext.h	6651;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	.\include\GL\glext.h	6648;"	d
GL_TANGENT_ARRAY_TYPE_EXT	.\include\GL\glext.h	6647;"	d
GL_TASK_SHADER_BIT_NV	.\include\GL\glext.h	10252;"	d
GL_TASK_SHADER_NV	.\include\GL\glext.h	10206;"	d
GL_TASK_SUBROUTINE_NV	.\include\GL\glext.h	10248;"	d
GL_TASK_SUBROUTINE_UNIFORM_NV	.\include\GL\glext.h	10250;"	d
GL_TASK_WORK_GROUP_SIZE_NV	.\include\GL\glext.h	10237;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	.\include\GL\glext.h	9522;"	d
GL_TESSELLATION_FACTOR_AMD	.\include\GL\glext.h	5780;"	d
GL_TESSELLATION_MODE_AMD	.\include\GL\glext.h	5779;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	.\include\GL\glext.h	1679;"	d
GL_TESS_CONTROL_PROGRAM_NV	.\include\GL\glext.h	10983;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	10985;"	d
GL_TESS_CONTROL_SHADER	.\include\GL\glext.h	1706;"	d
GL_TESS_CONTROL_SHADER_BIT	.\include\GL\glext.h	1833;"	d
GL_TESS_CONTROL_SHADER_PATCHES	.\include\GL\glext.h	2844;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	.\include\GL\glext.h	3872;"	d
GL_TESS_CONTROL_SUBROUTINE	.\include\GL\glext.h	2355;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2361;"	d
GL_TESS_CONTROL_TEXTURE	.\include\GL\glext.h	2294;"	d
GL_TESS_EVALUATION_PROGRAM_NV	.\include\GL\glext.h	10984;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	10986;"	d
GL_TESS_EVALUATION_SHADER	.\include\GL\glext.h	1705;"	d
GL_TESS_EVALUATION_SHADER_BIT	.\include\GL\glext.h	1834;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS	.\include\GL\glext.h	2845;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	.\include\GL\glext.h	3873;"	d
GL_TESS_EVALUATION_SUBROUTINE	.\include\GL\glext.h	2356;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2362;"	d
GL_TESS_EVALUATION_TEXTURE	.\include\GL\glext.h	2295;"	d
GL_TESS_GEN_MODE	.\include\GL\glext.h	1680;"	d
GL_TESS_GEN_POINT_MODE	.\include\GL\glext.h	1683;"	d
GL_TESS_GEN_SPACING	.\include\GL\glext.h	1681;"	d
GL_TESS_GEN_VERTEX_ORDER	.\include\GL\glext.h	1682;"	d
GL_TEXCOORD1_BIT_PGI	.\include\GL\glext.h	11866;"	d
GL_TEXCOORD2_BIT_PGI	.\include\GL\glext.h	11867;"	d
GL_TEXCOORD3_BIT_PGI	.\include\GL\glext.h	11868;"	d
GL_TEXCOORD4_BIT_PGI	.\include\GL\glext.h	11869;"	d
GL_TEXTURE0	.\include\GL\glext.h	125;"	d
GL_TEXTURE0_ARB	.\include\GL\glext.h	3719;"	d
GL_TEXTURE1	.\include\GL\glext.h	126;"	d
GL_TEXTURE10	.\include\GL\glext.h	135;"	d
GL_TEXTURE10_ARB	.\include\GL\glext.h	3729;"	d
GL_TEXTURE11	.\include\GL\glext.h	136;"	d
GL_TEXTURE11_ARB	.\include\GL\glext.h	3730;"	d
GL_TEXTURE12	.\include\GL\glext.h	137;"	d
GL_TEXTURE12_ARB	.\include\GL\glext.h	3731;"	d
GL_TEXTURE13	.\include\GL\glext.h	138;"	d
GL_TEXTURE13_ARB	.\include\GL\glext.h	3732;"	d
GL_TEXTURE14	.\include\GL\glext.h	139;"	d
GL_TEXTURE14_ARB	.\include\GL\glext.h	3733;"	d
GL_TEXTURE15	.\include\GL\glext.h	140;"	d
GL_TEXTURE15_ARB	.\include\GL\glext.h	3734;"	d
GL_TEXTURE16	.\include\GL\glext.h	141;"	d
GL_TEXTURE16_ARB	.\include\GL\glext.h	3735;"	d
GL_TEXTURE17	.\include\GL\glext.h	142;"	d
GL_TEXTURE17_ARB	.\include\GL\glext.h	3736;"	d
GL_TEXTURE18	.\include\GL\glext.h	143;"	d
GL_TEXTURE18_ARB	.\include\GL\glext.h	3737;"	d
GL_TEXTURE19	.\include\GL\glext.h	144;"	d
GL_TEXTURE19_ARB	.\include\GL\glext.h	3738;"	d
GL_TEXTURE1_ARB	.\include\GL\glext.h	3720;"	d
GL_TEXTURE2	.\include\GL\glext.h	127;"	d
GL_TEXTURE20	.\include\GL\glext.h	145;"	d
GL_TEXTURE20_ARB	.\include\GL\glext.h	3739;"	d
GL_TEXTURE21	.\include\GL\glext.h	146;"	d
GL_TEXTURE21_ARB	.\include\GL\glext.h	3740;"	d
GL_TEXTURE22	.\include\GL\glext.h	147;"	d
GL_TEXTURE22_ARB	.\include\GL\glext.h	3741;"	d
GL_TEXTURE23	.\include\GL\glext.h	148;"	d
GL_TEXTURE23_ARB	.\include\GL\glext.h	3742;"	d
GL_TEXTURE24	.\include\GL\glext.h	149;"	d
GL_TEXTURE24_ARB	.\include\GL\glext.h	3743;"	d
GL_TEXTURE25	.\include\GL\glext.h	150;"	d
GL_TEXTURE25_ARB	.\include\GL\glext.h	3744;"	d
GL_TEXTURE26	.\include\GL\glext.h	151;"	d
GL_TEXTURE26_ARB	.\include\GL\glext.h	3745;"	d
GL_TEXTURE27	.\include\GL\glext.h	152;"	d
GL_TEXTURE27_ARB	.\include\GL\glext.h	3746;"	d
GL_TEXTURE28	.\include\GL\glext.h	153;"	d
GL_TEXTURE28_ARB	.\include\GL\glext.h	3747;"	d
GL_TEXTURE29	.\include\GL\glext.h	154;"	d
GL_TEXTURE29_ARB	.\include\GL\glext.h	3748;"	d
GL_TEXTURE2_ARB	.\include\GL\glext.h	3721;"	d
GL_TEXTURE3	.\include\GL\glext.h	128;"	d
GL_TEXTURE30	.\include\GL\glext.h	155;"	d
GL_TEXTURE30_ARB	.\include\GL\glext.h	3749;"	d
GL_TEXTURE31	.\include\GL\glext.h	156;"	d
GL_TEXTURE31_ARB	.\include\GL\glext.h	3750;"	d
GL_TEXTURE3_ARB	.\include\GL\glext.h	3722;"	d
GL_TEXTURE4	.\include\GL\glext.h	129;"	d
GL_TEXTURE4_ARB	.\include\GL\glext.h	3723;"	d
GL_TEXTURE5	.\include\GL\glext.h	130;"	d
GL_TEXTURE5_ARB	.\include\GL\glext.h	3724;"	d
GL_TEXTURE6	.\include\GL\glext.h	131;"	d
GL_TEXTURE6_ARB	.\include\GL\glext.h	3725;"	d
GL_TEXTURE7	.\include\GL\glext.h	132;"	d
GL_TEXTURE7_ARB	.\include\GL\glext.h	3726;"	d
GL_TEXTURE8	.\include\GL\glext.h	133;"	d
GL_TEXTURE8_ARB	.\include\GL\glext.h	3727;"	d
GL_TEXTURE9	.\include\GL\glext.h	134;"	d
GL_TEXTURE9_ARB	.\include\GL\glext.h	3728;"	d
GL_TEXTURE_1D_ARRAY	.\include\GL\glext.h	912;"	d
GL_TEXTURE_1D_ARRAY_EXT	.\include\GL\glext.h	8269;"	d
GL_TEXTURE_1D_BINDING_EXT	.\include\GL\glext.h	8466;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	.\include\GL\glext.h	9242;"	d
GL_TEXTURE_1D_STACK_MESAX	.\include\GL\glext.h	9238;"	d
GL_TEXTURE_2D_ARRAY	.\include\GL\glext.h	914;"	d
GL_TEXTURE_2D_ARRAY_EXT	.\include\GL\glext.h	8271;"	d
GL_TEXTURE_2D_BINDING_EXT	.\include\GL\glext.h	8467;"	d
GL_TEXTURE_2D_MULTISAMPLE	.\include\GL\glext.h	1436;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1438;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	.\include\GL\glext.h	9243;"	d
GL_TEXTURE_2D_STACK_MESAX	.\include\GL\glext.h	9239;"	d
GL_TEXTURE_3D	.\include\GL\glext.h	80;"	d
GL_TEXTURE_3D_BINDING_EXT	.\include\GL\glext.h	8468;"	d
GL_TEXTURE_3D_EXT	.\include\GL\glext.h	8254;"	d
GL_TEXTURE_4DSIZE_SGIS	.\include\GL\glext.h	12023;"	d
GL_TEXTURE_4D_BINDING_SGIS	.\include\GL\glext.h	12026;"	d
GL_TEXTURE_4D_SGIS	.\include\GL\glext.h	12021;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	.\include\GL\glext.h	8239;"	d
GL_TEXTURE_ALPHA_TYPE	.\include\GL\glext.h	1007;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	.\include\GL\glext.h	4482;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	.\include\GL\glext.h	7659;"	d
GL_TEXTURE_BASE_LEVEL	.\include\GL\glext.h	99;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	.\include\GL\glext.h	12070;"	d
GL_TEXTURE_BINDING_1D_ARRAY	.\include\GL\glext.h	916;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	.\include\GL\glext.h	8273;"	d
GL_TEXTURE_BINDING_2D_ARRAY	.\include\GL\glext.h	917;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	.\include\GL\glext.h	8274;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	.\include\GL\glext.h	1440;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1441;"	d
GL_TEXTURE_BINDING_3D	.\include\GL\glext.h	75;"	d
GL_TEXTURE_BINDING_BUFFER	.\include\GL\glext.h	1304;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	.\include\GL\glext.h	4340;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	.\include\GL\glext.h	8287;"	d
GL_TEXTURE_BINDING_CUBE_MAP	.\include\GL\glext.h	167;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	.\include\GL\glext.h	4405;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	.\include\GL\glext.h	1640;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4419;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	.\include\GL\glext.h	8325;"	d
GL_TEXTURE_BINDING_RECTANGLE	.\include\GL\glext.h	1307;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	.\include\GL\glext.h	4536;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	.\include\GL\glext.h	11051;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	.\include\GL\glext.h	9765;"	d
GL_TEXTURE_BLUE_SIZE_EXT	.\include\GL\glext.h	8238;"	d
GL_TEXTURE_BLUE_TYPE	.\include\GL\glext.h	1006;"	d
GL_TEXTURE_BLUE_TYPE_ARB	.\include\GL\glext.h	4481;"	d
GL_TEXTURE_BORDER_VALUES_NV	.\include\GL\glext.h	11129;"	d
GL_TEXTURE_BUFFER	.\include\GL\glext.h	1302;"	d
GL_TEXTURE_BUFFER_ARB	.\include\GL\glext.h	4338;"	d
GL_TEXTURE_BUFFER_BINDING	.\include\GL\glext.h	2523;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	.\include\GL\glext.h	1305;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	.\include\GL\glext.h	4341;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	.\include\GL\glext.h	8288;"	d
GL_TEXTURE_BUFFER_EXT	.\include\GL\glext.h	8285;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	.\include\GL\glext.h	4342;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	.\include\GL\glext.h	8289;"	d
GL_TEXTURE_BUFFER_OFFSET	.\include\GL\glext.h	2412;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	.\include\GL\glext.h	2414;"	d
GL_TEXTURE_BUFFER_SIZE	.\include\GL\glext.h	2413;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	.\include\GL\glext.h	12149;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	.\include\GL\glext.h	12154;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	.\include\GL\glext.h	12150;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	.\include\GL\glext.h	12153;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	.\include\GL\glext.h	12151;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	.\include\GL\glext.h	12152;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	.\include\GL\glext.h	11031;"	d
GL_TEXTURE_COLOR_TABLE_SGI	.\include\GL\glext.h	12546;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	.\include\GL\glext.h	12042;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	.\include\GL\glext.h	4267;"	d
GL_TEXTURE_COMPARE_FUNC	.\include\GL\glext.h	334;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	.\include\GL\glext.h	4261;"	d
GL_TEXTURE_COMPARE_MODE	.\include\GL\glext.h	333;"	d
GL_TEXTURE_COMPARE_MODE_ARB	.\include\GL\glext.h	4260;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	.\include\GL\glext.h	12391;"	d
GL_TEXTURE_COMPARE_SGIX	.\include\GL\glext.h	12390;"	d
GL_TEXTURE_COMPRESSED	.\include\GL\glext.h	180;"	d
GL_TEXTURE_COMPRESSED_ARB	.\include\GL\glext.h	4367;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	.\include\GL\glext.h	2314;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	.\include\GL\glext.h	2315;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	.\include\GL\glext.h	2313;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	.\include\GL\glext.h	179;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	.\include\GL\glext.h	4366;"	d
GL_TEXTURE_COMPRESSION_HINT	.\include\GL\glext.h	178;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	.\include\GL\glext.h	4365;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	.\include\GL\glext.h	12553;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11367;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	503;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4711;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	.\include\GL\glext.h	8634;"	d
GL_TEXTURE_COORD_ARRAY_EXT	.\include\GL\glext.h	8615;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	.\include\GL\glext.h	11377;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	.\include\GL\glext.h	9076;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9084;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	.\include\GL\glext.h	9177;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	.\include\GL\glext.h	8641;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	.\include\GL\glext.h	8631;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8633;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	.\include\GL\glext.h	8632;"	d
GL_TEXTURE_COORD_NV	.\include\GL\glext.h	11167;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	.\include\GL\glext.h	11030;"	d
GL_TEXTURE_CUBE_MAP	.\include\GL\glext.h	166;"	d
GL_TEXTURE_CUBE_MAP_ARB	.\include\GL\glext.h	4404;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	.\include\GL\glext.h	1639;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4418;"	d
GL_TEXTURE_CUBE_MAP_EXT	.\include\GL\glext.h	8324;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	.\include\GL\glext.h	169;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	.\include\GL\glext.h	4407;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	.\include\GL\glext.h	8327;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	.\include\GL\glext.h	171;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	.\include\GL\glext.h	4409;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	.\include\GL\glext.h	8329;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	.\include\GL\glext.h	173;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	.\include\GL\glext.h	4411;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	.\include\GL\glext.h	8331;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	.\include\GL\glext.h	168;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	.\include\GL\glext.h	4406;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	.\include\GL\glext.h	8326;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	.\include\GL\glext.h	170;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	.\include\GL\glext.h	4408;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	.\include\GL\glext.h	8328;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	.\include\GL\glext.h	172;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	.\include\GL\glext.h	4410;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	.\include\GL\glext.h	8330;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	.\include\GL\glext.h	1416;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	.\include\GL\glext.h	12346;"	d
GL_TEXTURE_DEFORMATION_SGIX	.\include\GL\glext.h	12349;"	d
GL_TEXTURE_DEPTH	.\include\GL\glext.h	82;"	d
GL_TEXTURE_DEPTH_EXT	.\include\GL\glext.h	8256;"	d
GL_TEXTURE_DEPTH_SIZE	.\include\GL\glext.h	332;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	.\include\GL\glext.h	3080;"	d
GL_TEXTURE_DEPTH_TYPE	.\include\GL\glext.h	1008;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	.\include\GL\glext.h	4485;"	d
GL_TEXTURE_DS_SIZE_NV	.\include\GL\glext.h	11132;"	d
GL_TEXTURE_DT_SIZE_NV	.\include\GL\glext.h	11133;"	d
GL_TEXTURE_ENV_BIAS_SGIX	.\include\GL\glext.h	12441;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	.\include\GL\glext.h	2073;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	.\include\GL\glext.h	8130;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	.\include\GL\glext.h	12057;"	d
GL_TEXTURE_FILTER_CONTROL	.\include\GL\glext.h	355;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	.\include\GL\glext.h	8451;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	.\include\GL\glext.h	1443;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	.\include\GL\glext.h	9824;"	d
GL_TEXTURE_FREE_MEMORY_ATI	.\include\GL\glext.h	6216;"	d
GL_TEXTURE_GATHER	.\include\GL\glext.h	2300;"	d
GL_TEXTURE_GATHER_SHADOW	.\include\GL\glext.h	2301;"	d
GL_TEXTURE_GEQUAL_R_SGIX	.\include\GL\glext.h	12393;"	d
GL_TEXTURE_GREEN_SIZE_EXT	.\include\GL\glext.h	8237;"	d
GL_TEXTURE_GREEN_TYPE	.\include\GL\glext.h	1005;"	d
GL_TEXTURE_GREEN_TYPE_ARB	.\include\GL\glext.h	4480;"	d
GL_TEXTURE_HI_SIZE_NV	.\include\GL\glext.h	11130;"	d
GL_TEXTURE_IMAGE_FORMAT	.\include\GL\glext.h	2282;"	d
GL_TEXTURE_IMAGE_TYPE	.\include\GL\glext.h	2283;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	.\include\GL\glext.h	2138;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	.\include\GL\glext.h	2419;"	d
GL_TEXTURE_INDEX_SIZE_EXT	.\include\GL\glext.h	7829;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	.\include\GL\glext.h	8241;"	d
GL_TEXTURE_INTENSITY_TYPE	.\include\GL\glext.h	1082;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	.\include\GL\glext.h	4484;"	d
GL_TEXTURE_LEQUAL_R_SGIX	.\include\GL\glext.h	12392;"	d
GL_TEXTURE_LIGHTING_MODE_HP	.\include\GL\glext.h	9030;"	d
GL_TEXTURE_LIGHT_EXT	.\include\GL\glext.h	7660;"	d
GL_TEXTURE_LOD_BIAS	.\include\GL\glext.h	329;"	d
GL_TEXTURE_LOD_BIAS_EXT	.\include\GL\glext.h	8452;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	.\include\GL\glext.h	12455;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	.\include\GL\glext.h	12453;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	.\include\GL\glext.h	12454;"	d
GL_TEXTURE_LO_SIZE_NV	.\include\GL\glext.h	11131;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	.\include\GL\glext.h	8240;"	d
GL_TEXTURE_LUMINANCE_TYPE	.\include\GL\glext.h	1081;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	.\include\GL\glext.h	4483;"	d
GL_TEXTURE_MAG_SIZE_NV	.\include\GL\glext.h	11134;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	.\include\GL\glext.h	7661;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	.\include\GL\glext.h	7662;"	d
GL_TEXTURE_MAX_ANISOTROPY	.\include\GL\glext.h	2854;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	.\include\GL\glext.h	8373;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	.\include\GL\glext.h	12448;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	.\include\GL\glext.h	12446;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	.\include\GL\glext.h	12447;"	d
GL_TEXTURE_MAX_LEVEL	.\include\GL\glext.h	100;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	.\include\GL\glext.h	12071;"	d
GL_TEXTURE_MAX_LOD	.\include\GL\glext.h	98;"	d
GL_TEXTURE_MAX_LOD_SGIS	.\include\GL\glext.h	12069;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	.\include\GL\glext.h	9157;"	d
GL_TEXTURE_MIN_LOD	.\include\GL\glext.h	97;"	d
GL_TEXTURE_MIN_LOD_SGIS	.\include\GL\glext.h	12068;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	.\include\GL\glext.h	12460;"	d
GL_TEXTURE_NORMAL_EXT	.\include\GL\glext.h	8488;"	d
GL_TEXTURE_POST_SPECULAR_HP	.\include\GL\glext.h	9031;"	d
GL_TEXTURE_PRE_SPECULAR_HP	.\include\GL\glext.h	9032;"	d
GL_TEXTURE_PRIORITY_EXT	.\include\GL\glext.h	8464;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	.\include\GL\glext.h	5917;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	.\include\GL\glext.h	5918;"	d
GL_TEXTURE_RECTANGLE	.\include\GL\glext.h	1306;"	d
GL_TEXTURE_RECTANGLE_ARB	.\include\GL\glext.h	4535;"	d
GL_TEXTURE_RECTANGLE_NV	.\include\GL\glext.h	11050;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	.\include\GL\glext.h	4473;"	d
GL_TEXTURE_REDUCTION_MODE_EXT	.\include\GL\glext.h	8379;"	d
GL_TEXTURE_RED_SIZE_EXT	.\include\GL\glext.h	8236;"	d
GL_TEXTURE_RED_TYPE	.\include\GL\glext.h	1004;"	d
GL_TEXTURE_RED_TYPE_ARB	.\include\GL\glext.h	4479;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	.\include\GL\glext.h	9766;"	d
GL_TEXTURE_RENDERBUFFER_NV	.\include\GL\glext.h	9767;"	d
GL_TEXTURE_RESIDENT_EXT	.\include\GL\glext.h	8465;"	d
GL_TEXTURE_SAMPLES	.\include\GL\glext.h	1442;"	d
GL_TEXTURE_SHADER_NV	.\include\GL\glext.h	11070;"	d
GL_TEXTURE_SHADOW	.\include\GL\glext.h	2299;"	d
GL_TEXTURE_SHARED_SIZE	.\include\GL\glext.h	922;"	d
GL_TEXTURE_SHARED_SIZE_EXT	.\include\GL\glext.h	8531;"	d
GL_TEXTURE_SPARSE_ARB	.\include\GL\glext.h	4286;"	d
GL_TEXTURE_SRGB_DECODE_EXT	.\include\GL\glext.h	8522;"	d
GL_TEXTURE_STENCIL_SIZE	.\include\GL\glext.h	1003;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	.\include\GL\glext.h	7802;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	.\include\GL\glext.h	5919;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	.\include\GL\glext.h	5732;"	d
GL_TEXTURE_SWIZZLE_A	.\include\GL\glext.h	1508;"	d
GL_TEXTURE_SWIZZLE_A_EXT	.\include\GL\glext.h	8559;"	d
GL_TEXTURE_SWIZZLE_B	.\include\GL\glext.h	1507;"	d
GL_TEXTURE_SWIZZLE_B_EXT	.\include\GL\glext.h	8558;"	d
GL_TEXTURE_SWIZZLE_G	.\include\GL\glext.h	1506;"	d
GL_TEXTURE_SWIZZLE_G_EXT	.\include\GL\glext.h	8557;"	d
GL_TEXTURE_SWIZZLE_R	.\include\GL\glext.h	1505;"	d
GL_TEXTURE_SWIZZLE_RGBA	.\include\GL\glext.h	1509;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	.\include\GL\glext.h	8560;"	d
GL_TEXTURE_SWIZZLE_R_EXT	.\include\GL\glext.h	8556;"	d
GL_TEXTURE_TARGET	.\include\GL\glext.h	2575;"	d
GL_TEXTURE_TILING_EXT	.\include\GL\glext.h	7675;"	d
GL_TEXTURE_TOO_LARGE_EXT	.\include\GL\glext.h	8245;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	.\include\GL\glext.h	11025;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	.\include\GL\glext.h	2077;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	.\include\GL\glext.h	8134;"	d
GL_TEXTURE_VIEW	.\include\GL\glext.h	2317;"	d
GL_TEXTURE_VIEW_MIN_LAYER	.\include\GL\glext.h	2417;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	.\include\GL\glext.h	2415;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	.\include\GL\glext.h	2418;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	.\include\GL\glext.h	2416;"	d
GL_TEXTURE_WRAP_Q_SGIS	.\include\GL\glext.h	12024;"	d
GL_TEXTURE_WRAP_R	.\include\GL\glext.h	83;"	d
GL_TEXTURE_WRAP_R_EXT	.\include\GL\glext.h	8257;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	.\include\GL\glext.h	6261;"	d
GL_TILE_RASTER_ORDER_FIXED_MESA	.\include\GL\glext.h	9270;"	d
GL_TILE_RASTER_ORDER_INCREASING_X_MESA	.\include\GL\glext.h	9271;"	d
GL_TILE_RASTER_ORDER_INCREASING_Y_MESA	.\include\GL\glext.h	9272;"	d
GL_TILING_TYPES_EXT	.\include\GL\glext.h	7679;"	d
GL_TIMEOUT_EXPIRED	.\include\GL\glext.h	1427;"	d
GL_TIMEOUT_IGNORED	.\include\GL\glext.h	1430;"	d
GL_TIMESTAMP	.\include\GL\glext.h	1511;"	d
GL_TIME_ELAPSED	.\include\GL\glext.h	1510;"	d
GL_TIME_ELAPSED_EXT	.\include\GL\glext.h	8565;"	d
GL_TOP_LEVEL_ARRAY_SIZE	.\include\GL\glext.h	2390;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	.\include\GL\glext.h	2391;"	d
GL_TRACK_MATRIX_NV	.\include\GL\glext.h	11446;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	.\include\GL\glext.h	11447;"	d
GL_TRANSFORM_FEEDBACK	.\include\GL\glext.h	1707;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	.\include\GL\glext.h	2029;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	.\include\GL\glext.h	11172;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	.\include\GL\glext.h	2080;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	.\include\GL\glext.h	8137;"	d
GL_TRANSFORM_FEEDBACK_BINDING	.\include\GL\glext.h	1710;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	.\include\GL\glext.h	11229;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	.\include\GL\glext.h	936;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	.\include\GL\glext.h	1709;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	.\include\GL\glext.h	11228;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	.\include\GL\glext.h	937;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	.\include\GL\glext.h	8579;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	.\include\GL\glext.h	11189;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	.\include\GL\glext.h	8576;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	.\include\GL\glext.h	2533;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	.\include\GL\glext.h	924;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	.\include\GL\glext.h	8589;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	.\include\GL\glext.h	11173;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	.\include\GL\glext.h	11188;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	.\include\GL\glext.h	1708;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	.\include\GL\glext.h	11227;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	.\include\GL\glext.h	928;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	.\include\GL\glext.h	8578;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	.\include\GL\glext.h	11179;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	.\include\GL\glext.h	927;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	.\include\GL\glext.h	8577;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	.\include\GL\glext.h	11178;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	.\include\GL\glext.h	2534;"	d
GL_TRANSFORM_FEEDBACK_NV	.\include\GL\glext.h	11226;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW	.\include\GL\glext.h	2856;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	.\include\GL\glext.h	4587;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	.\include\GL\glext.h	2030;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	.\include\GL\glext.h	930;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	.\include\GL\glext.h	8583;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	.\include\GL\glext.h	11182;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	.\include\GL\glext.h	11180;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW	.\include\GL\glext.h	2857;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	.\include\GL\glext.h	4588;"	d
GL_TRANSFORM_FEEDBACK_VARYING	.\include\GL\glext.h	2366;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	.\include\GL\glext.h	926;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	.\include\GL\glext.h	8588;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	.\include\GL\glext.h	11177;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	.\include\GL\glext.h	923;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	.\include\GL\glext.h	8590;"	d
GL_TRANSFORM_HINT_APPLE	.\include\GL\glext.h	5933;"	d
GL_TRANSLATE_2D_NV	.\include\GL\glext.h	10355;"	d
GL_TRANSLATE_3D_NV	.\include\GL\glext.h	10356;"	d
GL_TRANSLATE_X_NV	.\include\GL\glext.h	10353;"	d
GL_TRANSLATE_Y_NV	.\include\GL\glext.h	10354;"	d
GL_TRANSPOSE_AFFINE_2D_NV	.\include\GL\glext.h	10359;"	d
GL_TRANSPOSE_AFFINE_3D_NV	.\include\GL\glext.h	10360;"	d
GL_TRANSPOSE_COLOR_MATRIX	.\include\GL\glext.h	189;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	.\include\GL\glext.h	4596;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	.\include\GL\glext.h	3210;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	.\include\GL\glext.h	186;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	.\include\GL\glext.h	4593;"	d
GL_TRANSPOSE_NV	.\include\GL\glext.h	11426;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	.\include\GL\glext.h	6775;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	.\include\GL\glext.h	187;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	.\include\GL\glext.h	4594;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	.\include\GL\glext.h	188;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	.\include\GL\glext.h	4595;"	d
GL_TRIANGLES_ADJACENCY	.\include\GL\glext.h	1393;"	d
GL_TRIANGLES_ADJACENCY_ARB	.\include\GL\glext.h	3322;"	d
GL_TRIANGLES_ADJACENCY_EXT	.\include\GL\glext.h	7495;"	d
GL_TRIANGLE_LIST_SUN	.\include\GL\glext.h	12609;"	d
GL_TRIANGLE_MESH_SUN	.\include\GL\glext.h	12592;"	d
GL_TRIANGLE_STRIP_ADJACENCY	.\include\GL\glext.h	1394;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	.\include\GL\glext.h	3323;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	.\include\GL\glext.h	7496;"	d
GL_TRIANGULAR_NV	.\include\GL\glext.h	10372;"	d
GL_TYPE	.\include\GL\glext.h	2372;"	d
GL_UNCORRELATED_NV	.\include\GL\glext.h	9485;"	d
GL_UNDEFINED_APPLE	.\include\GL\glext.h	5884;"	d
GL_UNDEFINED_VERTEX	.\include\GL\glext.h	1844;"	d
GL_UNIFORM	.\include\GL\glext.h	2348;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	.\include\GL\glext.h	9532;"	d
GL_UNIFORM_ARRAY_STRIDE	.\include\GL\glext.h	1344;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	.\include\GL\glext.h	2068;"	d
GL_UNIFORM_BARRIER_BIT	.\include\GL\glext.h	2072;"	d
GL_UNIFORM_BARRIER_BIT_EXT	.\include\GL\glext.h	8129;"	d
GL_UNIFORM_BLOCK	.\include\GL\glext.h	2349;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	.\include\GL\glext.h	1350;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	.\include\GL\glext.h	1351;"	d
GL_UNIFORM_BLOCK_BINDING	.\include\GL\glext.h	1347;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	.\include\GL\glext.h	1348;"	d
GL_UNIFORM_BLOCK_INDEX	.\include\GL\glext.h	1342;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	.\include\GL\glext.h	1349;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	.\include\GL\glext.h	2198;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	.\include\GL\glext.h	1354;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	.\include\GL\glext.h	1353;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV	.\include\GL\glext.h	10241;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV	.\include\GL\glext.h	10242;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	.\include\GL\glext.h	1703;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	.\include\GL\glext.h	1704;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	.\include\GL\glext.h	1352;"	d
GL_UNIFORM_BUFFER	.\include\GL\glext.h	1323;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	.\include\GL\glext.h	11251;"	d
GL_UNIFORM_BUFFER_BINDING	.\include\GL\glext.h	1324;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	.\include\GL\glext.h	6486;"	d
GL_UNIFORM_BUFFER_EXT	.\include\GL\glext.h	6485;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	.\include\GL\glext.h	11252;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	.\include\GL\glext.h	1336;"	d
GL_UNIFORM_BUFFER_SIZE	.\include\GL\glext.h	1326;"	d
GL_UNIFORM_BUFFER_START	.\include\GL\glext.h	1325;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	.\include\GL\glext.h	11250;"	d
GL_UNIFORM_IS_ROW_MAJOR	.\include\GL\glext.h	1346;"	d
GL_UNIFORM_MATRIX_STRIDE	.\include\GL\glext.h	1345;"	d
GL_UNIFORM_NAME_LENGTH	.\include\GL\glext.h	1341;"	d
GL_UNIFORM_OFFSET	.\include\GL\glext.h	1343;"	d
GL_UNIFORM_SIZE	.\include\GL\glext.h	1340;"	d
GL_UNIFORM_TYPE	.\include\GL\glext.h	1339;"	d
GL_UNKNOWN_CONTEXT_RESET	.\include\GL\glext.h	2579;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	.\include\GL\glext.h	3939;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	.\include\GL\glext.h	5802;"	d
GL_UNPACK_CMYK_HINT_EXT	.\include\GL\glext.h	6564;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	.\include\GL\glext.h	2033;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	.\include\GL\glext.h	2032;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	.\include\GL\glext.h	2034;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	.\include\GL\glext.h	2031;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	.\include\GL\glext.h	12552;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	.\include\GL\glext.h	12020;"	d
GL_UNPACK_IMAGE_HEIGHT	.\include\GL\glext.h	79;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	.\include\GL\glext.h	8253;"	d
GL_UNPACK_RESAMPLE_OML	.\include\GL\glext.h	11791;"	d
GL_UNPACK_RESAMPLE_SGIX	.\include\GL\glext.h	12377;"	d
GL_UNPACK_ROW_BYTES_APPLE	.\include\GL\glext.h	5907;"	d
GL_UNPACK_SKIP_IMAGES	.\include\GL\glext.h	78;"	d
GL_UNPACK_SKIP_IMAGES_EXT	.\include\GL\glext.h	8252;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	.\include\GL\glext.h	12019;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	.\include\GL\glext.h	12425;"	d
GL_UNSIGNALED	.\include\GL\glext.h	1424;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	.\include\GL\glext.h	85;"	d
GL_UNSIGNED_BYTE_3_3_2	.\include\GL\glext.h	70;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	.\include\GL\glext.h	7814;"	d
GL_UNSIGNED_IDENTITY_NV	.\include\GL\glext.h	10735;"	d
GL_UNSIGNED_INT16_NV	.\include\GL\glext.h	5505;"	d
GL_UNSIGNED_INT16_VEC2_NV	.\include\GL\glext.h	5506;"	d
GL_UNSIGNED_INT16_VEC3_NV	.\include\GL\glext.h	5507;"	d
GL_UNSIGNED_INT16_VEC4_NV	.\include\GL\glext.h	5508;"	d
GL_UNSIGNED_INT64_AMD	.\include\GL\glext.h	5639;"	d
GL_UNSIGNED_INT64_ARB	.\include\GL\glext.h	2904;"	d
GL_UNSIGNED_INT64_NV	.\include\GL\glext.h	5489;"	d
GL_UNSIGNED_INT64_VEC2_ARB	.\include\GL\glext.h	3382;"	d
GL_UNSIGNED_INT64_VEC2_NV	.\include\GL\glext.h	5509;"	d
GL_UNSIGNED_INT64_VEC3_ARB	.\include\GL\glext.h	3383;"	d
GL_UNSIGNED_INT64_VEC3_NV	.\include\GL\glext.h	5510;"	d
GL_UNSIGNED_INT64_VEC4_ARB	.\include\GL\glext.h	3384;"	d
GL_UNSIGNED_INT64_VEC4_NV	.\include\GL\glext.h	5511;"	d
GL_UNSIGNED_INT8_NV	.\include\GL\glext.h	5501;"	d
GL_UNSIGNED_INT8_VEC2_NV	.\include\GL\glext.h	5502;"	d
GL_UNSIGNED_INT8_VEC3_NV	.\include\GL\glext.h	5503;"	d
GL_UNSIGNED_INT8_VEC4_NV	.\include\GL\glext.h	5504;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	.\include\GL\glext.h	919;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	.\include\GL\glext.h	7808;"	d
GL_UNSIGNED_INT_10_10_10_2	.\include\GL\glext.h	74;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	.\include\GL\glext.h	7818;"	d
GL_UNSIGNED_INT_24_8	.\include\GL\glext.h	1001;"	d
GL_UNSIGNED_INT_24_8_EXT	.\include\GL\glext.h	7800;"	d
GL_UNSIGNED_INT_24_8_NV	.\include\GL\glext.h	10301;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	.\include\GL\glext.h	91;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	.\include\GL\glext.h	921;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	.\include\GL\glext.h	8530;"	d
GL_UNSIGNED_INT_8_8_8_8	.\include\GL\glext.h	73;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	.\include\GL\glext.h	7817;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	.\include\GL\glext.h	90;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	.\include\GL\glext.h	11067;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	.\include\GL\glext.h	2069;"	d
GL_UNSIGNED_INT_IMAGE_1D	.\include\GL\glext.h	2112;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	.\include\GL\glext.h	2118;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	.\include\GL\glext.h	8120;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	.\include\GL\glext.h	8114;"	d
GL_UNSIGNED_INT_IMAGE_2D	.\include\GL\glext.h	2113;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	.\include\GL\glext.h	2119;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	.\include\GL\glext.h	8121;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	.\include\GL\glext.h	8115;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	.\include\GL\glext.h	2121;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	2122;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	.\include\GL\glext.h	8124;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	.\include\GL\glext.h	8123;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	.\include\GL\glext.h	2115;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	.\include\GL\glext.h	8117;"	d
GL_UNSIGNED_INT_IMAGE_3D	.\include\GL\glext.h	2114;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	.\include\GL\glext.h	8116;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	.\include\GL\glext.h	2117;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	.\include\GL\glext.h	8119;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	.\include\GL\glext.h	2116;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	.\include\GL\glext.h	8118;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	.\include\GL\glext.h	2120;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	.\include\GL\glext.h	8122;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	.\include\GL\glext.h	11066;"	d
GL_UNSIGNED_INT_SAMPLER_1D	.\include\GL\glext.h	971;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	.\include\GL\glext.h	975;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	.\include\GL\glext.h	7543;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	.\include\GL\glext.h	7538;"	d
GL_UNSIGNED_INT_SAMPLER_2D	.\include\GL\glext.h	972;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	.\include\GL\glext.h	976;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	.\include\GL\glext.h	7544;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	.\include\GL\glext.h	7539;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	.\include\GL\glext.h	1446;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	.\include\GL\glext.h	1449;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	.\include\GL\glext.h	1300;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	.\include\GL\glext.h	7542;"	d
GL_UNSIGNED_INT_SAMPLER_3D	.\include\GL\glext.h	973;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	.\include\GL\glext.h	7540;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	.\include\GL\glext.h	1301;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	.\include\GL\glext.h	5778;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	.\include\GL\glext.h	7545;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	.\include\GL\glext.h	974;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	.\include\GL\glext.h	7541;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	.\include\GL\glext.h	1645;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	.\include\GL\glext.h	4424;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	.\include\GL\glext.h	9770;"	d
GL_UNSIGNED_INT_VEC2	.\include\GL\glext.h	962;"	d
GL_UNSIGNED_INT_VEC2_EXT	.\include\GL\glext.h	7527;"	d
GL_UNSIGNED_INT_VEC3	.\include\GL\glext.h	963;"	d
GL_UNSIGNED_INT_VEC3_EXT	.\include\GL\glext.h	7528;"	d
GL_UNSIGNED_INT_VEC4	.\include\GL\glext.h	964;"	d
GL_UNSIGNED_INT_VEC4_EXT	.\include\GL\glext.h	7529;"	d
GL_UNSIGNED_INVERT_NV	.\include\GL\glext.h	10736;"	d
GL_UNSIGNED_NORMALIZED	.\include\GL\glext.h	1009;"	d
GL_UNSIGNED_NORMALIZED_ARB	.\include\GL\glext.h	4486;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	.\include\GL\glext.h	89;"	d
GL_UNSIGNED_SHORT_4_4_4_4	.\include\GL\glext.h	71;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	.\include\GL\glext.h	7815;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	.\include\GL\glext.h	88;"	d
GL_UNSIGNED_SHORT_5_5_5_1	.\include\GL\glext.h	72;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	.\include\GL\glext.h	7816;"	d
GL_UNSIGNED_SHORT_5_6_5	.\include\GL\glext.h	86;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	.\include\GL\glext.h	87;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	.\include\GL\glext.h	5899;"	d
GL_UNSIGNED_SHORT_8_8_MESA	.\include\GL\glext.h	9331;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	.\include\GL\glext.h	5900;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	.\include\GL\glext.h	9332;"	d
GL_UPPER_LEFT	.\include\GL\glext.h	642;"	d
GL_USE_MISSING_GLYPH_NV	.\include\GL\glext.h	10377;"	d
GL_UTF16_NV	.\include\GL\glext.h	10362;"	d
GL_UTF8_NV	.\include\GL\glext.h	10361;"	d
GL_UUID_SIZE_EXT	.\include\GL\glext.h	7685;"	d
GL_VALIDATE_STATUS	.\include\GL\glext.h	629;"	d
GL_VARIABLE_A_NV	.\include\GL\glext.h	10721;"	d
GL_VARIABLE_B_NV	.\include\GL\glext.h	10722;"	d
GL_VARIABLE_C_NV	.\include\GL\glext.h	10723;"	d
GL_VARIABLE_D_NV	.\include\GL\glext.h	10724;"	d
GL_VARIABLE_E_NV	.\include\GL\glext.h	10725;"	d
GL_VARIABLE_F_NV	.\include\GL\glext.h	10726;"	d
GL_VARIABLE_G_NV	.\include\GL\glext.h	10727;"	d
GL_VARIANT_ARRAY_EXT	.\include\GL\glext.h	8813;"	d
GL_VARIANT_ARRAY_POINTER_EXT	.\include\GL\glext.h	8814;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8811;"	d
GL_VARIANT_ARRAY_TYPE_EXT	.\include\GL\glext.h	8812;"	d
GL_VARIANT_DATATYPE_EXT	.\include\GL\glext.h	8810;"	d
GL_VARIANT_EXT	.\include\GL\glext.h	8774;"	d
GL_VARIANT_VALUE_EXT	.\include\GL\glext.h	8809;"	d
GL_VBO_FREE_MEMORY_ATI	.\include\GL\glext.h	6215;"	d
GL_VECTOR_EXT	.\include\GL\glext.h	8772;"	d
GL_VERSION_1_2	.\include\GL\glext.h	69;"	d
GL_VERSION_1_3	.\include\GL\glext.h	124;"	d
GL_VERSION_1_4	.\include\GL\glext.h	318;"	d
GL_VERSION_1_5	.\include\GL\glext.h	468;"	d
GL_VERSION_2_0	.\include\GL\glext.h	564;"	d
GL_VERSION_2_1	.\include\GL\glext.h	841;"	d
GL_VERSION_3_0	.\include\GL\glext.h	882;"	d
GL_VERSION_3_1	.\include\GL\glext.h	1294;"	d
GL_VERSION_3_2	.\include\GL\glext.h	1385;"	d
GL_VERSION_3_3	.\include\GL\glext.h	1496;"	d
GL_VERSION_4_0	.\include\GL\glext.h	1634;"	d
GL_VERSION_4_1	.\include\GL\glext.h	1809;"	d
GL_VERSION_4_2	.\include\GL\glext.h	2026;"	d
GL_VERSION_4_3	.\include\GL\glext.h	2168;"	d
GL_VERSION_4_4	.\include\GL\glext.h	2520;"	d
GL_VERSION_4_5	.\include\GL\glext.h	2563;"	d
GL_VERSION_4_6	.\include\GL\glext.h	2835;"	d
GL_VERTEX23_BIT_PGI	.\include\GL\glext.h	11870;"	d
GL_VERTEX4_BIT_PGI	.\include\GL\glext.h	11871;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11363;"	d
GL_VERTEX_ARRAY_BINDING	.\include\GL\glext.h	1117;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	.\include\GL\glext.h	5938;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	499;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4707;"	d
GL_VERTEX_ARRAY_COUNT_EXT	.\include\GL\glext.h	8620;"	d
GL_VERTEX_ARRAY_EXT	.\include\GL\glext.h	8611;"	d
GL_VERTEX_ARRAY_LENGTH_NV	.\include\GL\glext.h	11373;"	d
GL_VERTEX_ARRAY_LIST_IBM	.\include\GL\glext.h	9072;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	.\include\GL\glext.h	9080;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	.\include\GL\glext.h	5609;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	.\include\GL\glext.h	6741;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	.\include\GL\glext.h	9174;"	d
GL_VERTEX_ARRAY_POINTER_EXT	.\include\GL\glext.h	8637;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	.\include\GL\glext.h	5953;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	.\include\GL\glext.h	5954;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	.\include\GL\glext.h	11297;"	d
GL_VERTEX_ARRAY_RANGE_NV	.\include\GL\glext.h	11296;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	.\include\GL\glext.h	5956;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	.\include\GL\glext.h	11300;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	.\include\GL\glext.h	11298;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	.\include\GL\glext.h	11311;"	d
GL_VERTEX_ARRAY_SIZE_EXT	.\include\GL\glext.h	8617;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	.\include\GL\glext.h	5955;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8619;"	d
GL_VERTEX_ARRAY_TYPE_EXT	.\include\GL\glext.h	8618;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	.\include\GL\glext.h	11450;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	.\include\GL\glext.h	11460;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	.\include\GL\glext.h	11461;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	.\include\GL\glext.h	11462;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	.\include\GL\glext.h	11463;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	.\include\GL\glext.h	11464;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	.\include\GL\glext.h	11465;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	.\include\GL\glext.h	11451;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	.\include\GL\glext.h	11452;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	.\include\GL\glext.h	11453;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	.\include\GL\glext.h	11454;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	.\include\GL\glext.h	11455;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	.\include\GL\glext.h	11456;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	.\include\GL\glext.h	11457;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	.\include\GL\glext.h	11458;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	.\include\GL\glext.h	11459;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	.\include\GL\glext.h	11362;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	.\include\GL\glext.h	2070;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	.\include\GL\glext.h	8127;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	481;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4716;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	.\include\GL\glext.h	1497;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	.\include\GL\glext.h	3619;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	.\include\GL\glext.h	567;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	.\include\GL\glext.h	4762;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	.\include\GL\glext.h	905;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	.\include\GL\glext.h	7520;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	.\include\GL\glext.h	11648;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	.\include\GL\glext.h	11372;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	.\include\GL\glext.h	2171;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	.\include\GL\glext.h	597;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	.\include\GL\glext.h	4771;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	.\include\GL\glext.h	573;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	.\include\GL\glext.h	4769;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	.\include\GL\glext.h	568;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	.\include\GL\glext.h	4763;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	.\include\GL\glext.h	569;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	.\include\GL\glext.h	4764;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	.\include\GL\glext.h	570;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	.\include\GL\glext.h	4765;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	.\include\GL\glext.h	11360;"	d
GL_VERTEX_ATTRIB_BINDING	.\include\GL\glext.h	2420;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	.\include\GL\glext.h	5970;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	.\include\GL\glext.h	5973;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	.\include\GL\glext.h	5975;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	.\include\GL\glext.h	5974;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	.\include\GL\glext.h	5972;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	.\include\GL\glext.h	5971;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	.\include\GL\glext.h	5977;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	.\include\GL\glext.h	5979;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	.\include\GL\glext.h	5978;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	.\include\GL\glext.h	5976;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	.\include\GL\glext.h	2421;"	d
GL_VERTEX_BINDING_BUFFER	.\include\GL\glext.h	2427;"	d
GL_VERTEX_BINDING_DIVISOR	.\include\GL\glext.h	2422;"	d
GL_VERTEX_BINDING_OFFSET	.\include\GL\glext.h	2423;"	d
GL_VERTEX_BINDING_STRIDE	.\include\GL\glext.h	2424;"	d
GL_VERTEX_BLEND_ARB	.\include\GL\glext.h	4634;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	.\include\GL\glext.h	11851;"	d
GL_VERTEX_DATA_HINT_PGI	.\include\GL\glext.h	11850;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	.\include\GL\glext.h	5586;"	d
GL_VERTEX_ID_NV	.\include\GL\glext.h	11169;"	d
GL_VERTEX_ID_SWIZZLE_AMD	.\include\GL\glext.h	5587;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	.\include\GL\glext.h	12474;"	d
GL_VERTEX_PRECLIP_SGIX	.\include\GL\glext.h	12473;"	d
GL_VERTEX_PROGRAM_ARB	.\include\GL\glext.h	4761;"	d
GL_VERTEX_PROGRAM_BINDING_NV	.\include\GL\glext.h	11448;"	d
GL_VERTEX_PROGRAM_NV	.\include\GL\glext.h	11415;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	.\include\GL\glext.h	10308;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	.\include\GL\glext.h	572;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	.\include\GL\glext.h	4767;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	.\include\GL\glext.h	11440;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	.\include\GL\glext.h	646;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	.\include\GL\glext.h	4768;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	.\include\GL\glext.h	11441;"	d
GL_VERTEX_SHADER	.\include\GL\glext.h	600;"	d
GL_VERTEX_SHADER_ARB	.\include\GL\glext.h	4868;"	d
GL_VERTEX_SHADER_BINDING_EXT	.\include\GL\glext.h	8710;"	d
GL_VERTEX_SHADER_BIT	.\include\GL\glext.h	1830;"	d
GL_VERTEX_SHADER_EXT	.\include\GL\glext.h	8709;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	.\include\GL\glext.h	8788;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	.\include\GL\glext.h	8790;"	d
GL_VERTEX_SHADER_INVOCATIONS	.\include\GL\glext.h	2843;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	.\include\GL\glext.h	3871;"	d
GL_VERTEX_SHADER_LOCALS_EXT	.\include\GL\glext.h	8792;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	.\include\GL\glext.h	8791;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	.\include\GL\glext.h	8793;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	.\include\GL\glext.h	8789;"	d
GL_VERTEX_SOURCE_ATI	.\include\GL\glext.h	6354;"	d
GL_VERTEX_STATE_PROGRAM_NV	.\include\GL\glext.h	11416;"	d
GL_VERTEX_STREAM0_ATI	.\include\GL\glext.h	6346;"	d
GL_VERTEX_STREAM1_ATI	.\include\GL\glext.h	6347;"	d
GL_VERTEX_STREAM2_ATI	.\include\GL\glext.h	6348;"	d
GL_VERTEX_STREAM3_ATI	.\include\GL\glext.h	6349;"	d
GL_VERTEX_STREAM4_ATI	.\include\GL\glext.h	6350;"	d
GL_VERTEX_STREAM5_ATI	.\include\GL\glext.h	6351;"	d
GL_VERTEX_STREAM6_ATI	.\include\GL\glext.h	6352;"	d
GL_VERTEX_STREAM7_ATI	.\include\GL\glext.h	6353;"	d
GL_VERTEX_SUBROUTINE	.\include\GL\glext.h	2354;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	.\include\GL\glext.h	2360;"	d
GL_VERTEX_TEXTURE	.\include\GL\glext.h	2293;"	d
GL_VERTEX_WEIGHTING_EXT	.\include\GL\glext.h	8913;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	.\include\GL\glext.h	8917;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	.\include\GL\glext.h	8921;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	.\include\GL\glext.h	8918;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	.\include\GL\glext.h	8920;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	.\include\GL\glext.h	8919;"	d
GL_VERTICAL_LINE_TO_NV	.\include\GL\glext.h	10401;"	d
GL_VERTICES_SUBMITTED	.\include\GL\glext.h	2841;"	d
GL_VERTICES_SUBMITTED_ARB	.\include\GL\glext.h	3869;"	d
GL_VIBRANCE_BIAS_NV	.\include\GL\glext.h	11128;"	d
GL_VIBRANCE_SCALE_NV	.\include\GL\glext.h	11122;"	d
GL_VIDEO_BUFFER_BINDING_NV	.\include\GL\glext.h	11702;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	.\include\GL\glext.h	11714;"	d
GL_VIDEO_BUFFER_NV	.\include\GL\glext.h	11701;"	d
GL_VIDEO_BUFFER_PITCH_NV	.\include\GL\glext.h	11709;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	.\include\GL\glext.h	11728;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	.\include\GL\glext.h	11727;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	.\include\GL\glext.h	11726;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	.\include\GL\glext.h	11725;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	.\include\GL\glext.h	11729;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	.\include\GL\glext.h	11707;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	.\include\GL\glext.h	11710;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	.\include\GL\glext.h	11711;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	.\include\GL\glext.h	11712;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	.\include\GL\glext.h	11713;"	d
GL_VIEWPORT_BOUNDS_RANGE	.\include\GL\glext.h	1841;"	d
GL_VIEWPORT_COMMAND_NV	.\include\GL\glext.h	9538;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	.\include\GL\glext.h	1843;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	.\include\GL\glext.h	9511;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	.\include\GL\glext.h	9512;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	.\include\GL\glext.h	9513;"	d
GL_VIEWPORT_SUBPIXEL_BITS	.\include\GL\glext.h	1840;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	.\include\GL\glext.h	11771;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	.\include\GL\glext.h	11765;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	.\include\GL\glext.h	11767;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	.\include\GL\glext.h	11769;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	.\include\GL\glext.h	11770;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	.\include\GL\glext.h	11764;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	.\include\GL\glext.h	11766;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	.\include\GL\glext.h	11768;"	d
GL_VIEWPORT_SWIZZLE_W_NV	.\include\GL\glext.h	11775;"	d
GL_VIEWPORT_SWIZZLE_X_NV	.\include\GL\glext.h	11772;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	.\include\GL\glext.h	11773;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	.\include\GL\glext.h	11774;"	d
GL_VIEW_CLASS_128_BITS	.\include\GL\glext.h	2332;"	d
GL_VIEW_CLASS_16_BITS	.\include\GL\glext.h	2338;"	d
GL_VIEW_CLASS_24_BITS	.\include\GL\glext.h	2337;"	d
GL_VIEW_CLASS_32_BITS	.\include\GL\glext.h	2336;"	d
GL_VIEW_CLASS_48_BITS	.\include\GL\glext.h	2335;"	d
GL_VIEW_CLASS_64_BITS	.\include\GL\glext.h	2334;"	d
GL_VIEW_CLASS_8_BITS	.\include\GL\glext.h	2339;"	d
GL_VIEW_CLASS_96_BITS	.\include\GL\glext.h	2333;"	d
GL_VIEW_CLASS_ASTC_10x10_RGBA	.\include\GL\glext.h	3649;"	d
GL_VIEW_CLASS_ASTC_10x5_RGBA	.\include\GL\glext.h	3646;"	d
GL_VIEW_CLASS_ASTC_10x6_RGBA	.\include\GL\glext.h	3647;"	d
GL_VIEW_CLASS_ASTC_10x8_RGBA	.\include\GL\glext.h	3648;"	d
GL_VIEW_CLASS_ASTC_12x10_RGBA	.\include\GL\glext.h	3650;"	d
GL_VIEW_CLASS_ASTC_12x12_RGBA	.\include\GL\glext.h	3651;"	d
GL_VIEW_CLASS_ASTC_4x4_RGBA	.\include\GL\glext.h	3638;"	d
GL_VIEW_CLASS_ASTC_5x4_RGBA	.\include\GL\glext.h	3639;"	d
GL_VIEW_CLASS_ASTC_5x5_RGBA	.\include\GL\glext.h	3640;"	d
GL_VIEW_CLASS_ASTC_6x5_RGBA	.\include\GL\glext.h	3641;"	d
GL_VIEW_CLASS_ASTC_6x6_RGBA	.\include\GL\glext.h	3642;"	d
GL_VIEW_CLASS_ASTC_8x5_RGBA	.\include\GL\glext.h	3643;"	d
GL_VIEW_CLASS_ASTC_8x6_RGBA	.\include\GL\glext.h	3644;"	d
GL_VIEW_CLASS_ASTC_8x8_RGBA	.\include\GL\glext.h	3645;"	d
GL_VIEW_CLASS_BPTC_FLOAT	.\include\GL\glext.h	2347;"	d
GL_VIEW_CLASS_BPTC_UNORM	.\include\GL\glext.h	2346;"	d
GL_VIEW_CLASS_EAC_R11	.\include\GL\glext.h	3633;"	d
GL_VIEW_CLASS_EAC_RG11	.\include\GL\glext.h	3634;"	d
GL_VIEW_CLASS_ETC2_EAC_RGBA	.\include\GL\glext.h	3637;"	d
GL_VIEW_CLASS_ETC2_RGB	.\include\GL\glext.h	3635;"	d
GL_VIEW_CLASS_ETC2_RGBA	.\include\GL\glext.h	3636;"	d
GL_VIEW_CLASS_RGTC1_RED	.\include\GL\glext.h	2344;"	d
GL_VIEW_CLASS_RGTC2_RG	.\include\GL\glext.h	2345;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	.\include\GL\glext.h	2340;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	.\include\GL\glext.h	2341;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	.\include\GL\glext.h	2342;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	.\include\GL\glext.h	2343;"	d
GL_VIEW_COMPATIBILITY_CLASS	.\include\GL\glext.h	2318;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	.\include\GL\glext.h	4287;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	.\include\GL\glext.h	5724;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	.\include\GL\glext.h	4290;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	.\include\GL\glext.h	5725;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	.\include\GL\glext.h	4291;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	.\include\GL\glext.h	5726;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	.\include\GL\glext.h	4292;"	d
GL_VIVIDLIGHT_NV	.\include\GL\glext.h	9486;"	d
GL_VOLATILE_APPLE	.\include\GL\glext.h	5882;"	d
GL_WAIT_FAILED	.\include\GL\glext.h	1429;"	d
GL_WARPS_PER_SM_NV	.\include\GL\glext.h	10927;"	d
GL_WARP_SIZE_NV	.\include\GL\glext.h	10926;"	d
GL_WEIGHTED_AVERAGE_ARB	.\include\GL\glext.h	4474;"	d
GL_WEIGHTED_AVERAGE_EXT	.\include\GL\glext.h	8380;"	d
GL_WEIGHT_ARRAY_ARB	.\include\GL\glext.h	4640;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	.\include\GL\glext.h	507;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	.\include\GL\glext.h	4715;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	.\include\GL\glext.h	4639;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	.\include\GL\glext.h	4638;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	.\include\GL\glext.h	4637;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	.\include\GL\glext.h	4636;"	d
GL_WEIGHT_SUM_UNITY_ARB	.\include\GL\glext.h	4633;"	d
GL_WIDE_LINE_HINT_PGI	.\include\GL\glext.h	11840;"	d
GL_WINDOW_RECTANGLE_EXT	.\include\GL\glext.h	8946;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	.\include\GL\glext.h	8947;"	d
GL_WIN_phong_shading	.\include\GL\glext.h	12728;"	d
GL_WIN_specular_fog	.\include\GL\glext.h	12734;"	d
GL_WRAP_BORDER_SUN	.\include\GL\glext.h	12562;"	d
GL_WRITE_DISCARD_NV	.\include\GL\glext.h	11261;"	d
GL_WRITE_ONLY	.\include\GL\glext.h	483;"	d
GL_WRITE_ONLY_ARB	.\include\GL\glext.h	4718;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	.\include\GL\glext.h	10631;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	.\include\GL\glext.h	10629;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	.\include\GL\glext.h	10633;"	d
GL_W_EXT	.\include\GL\glext.h	8797;"	d
GL_XOR_NV	.\include\GL\glext.h	9487;"	d
GL_X_EXT	.\include\GL\glext.h	8794;"	d
GL_YCBAYCR8A_4224_NV	.\include\GL\glext.h	11719;"	d
GL_YCBCR_422_APPLE	.\include\GL\glext.h	6000;"	d
GL_YCBCR_MESA	.\include\GL\glext.h	9333;"	d
GL_YCBYCR8_422_NV	.\include\GL\glext.h	11718;"	d
GL_YCRCBA_SGIX	.\include\GL\glext.h	12490;"	d
GL_YCRCB_422_SGIX	.\include\GL\glext.h	12479;"	d
GL_YCRCB_444_SGIX	.\include\GL\glext.h	12480;"	d
GL_YCRCB_SGIX	.\include\GL\glext.h	12489;"	d
GL_Y_EXT	.\include\GL\glext.h	8795;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	.\include\GL\glext.h	11723;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	.\include\GL\glext.h	11724;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	.\include\GL\glext.h	11722;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	.\include\GL\glext.h	11721;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	.\include\GL\glext.h	11720;"	d
GL_ZERO_EXT	.\include\GL\glext.h	8802;"	d
GL_ZERO_TO_ONE	.\include\GL\glext.h	2566;"	d
GL_Z_EXT	.\include\GL\glext.h	8796;"	d
GLchar	.\include\GL\glext.h	/^typedef char GLchar;$/;"	t
GLcharARB	.\include\GL\glext.h	/^typedef char GLcharARB;$/;"	t
GLeglClientBufferEXT	.\include\GL\glext.h	/^typedef void *GLeglClientBufferEXT;$/;"	t
GLeglImageOES	.\include\GL\glext.h	/^typedef void *GLeglImageOES;$/;"	t
GLfixed	.\include\GL\glext.h	/^typedef khronos_int32_t GLfixed;$/;"	t
GLhalf	.\include\GL\glext.h	/^typedef khronos_uint16_t GLhalf;$/;"	t
GLhalfARB	.\include\GL\glext.h	/^typedef khronos_uint16_t GLhalfARB;$/;"	t
GLhalfNV	.\include\GL\glext.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	.\include\GL\glext.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	.\include\GL\glext.h	/^typedef void *GLhandleARB;$/;"	t
GLint64	.\include\GL\glext.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64EXT	.\include\GL\glext.h	/^typedef khronos_int64_t GLint64EXT;$/;"	t
GLintptr	.\include\GL\glext.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptrARB	.\include\GL\glext.h	/^typedef khronos_intptr_t GLintptrARB;$/;"	t
GLsizeiptr	.\include\GL\glext.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t
GLsizeiptrARB	.\include\GL\glext.h	/^typedef khronos_ssize_t GLsizeiptrARB;$/;"	t
GLsync	.\include\GL\glext.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLuint64	.\include\GL\glext.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64EXT	.\include\GL\glext.h	/^typedef khronos_uint64_t GLuint64EXT;$/;"	t
GLvdpauSurfaceNV	.\include\GL\glext.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
Game	.\src\Runtime\Game\Game.h	/^struct Game$/;"	s
Game::channel	.\src\Runtime\Game\Game.h	/^	Channel* channel;$/;"	m	struct:Game	access:public
Game::players	.\src\Runtime\Game\Game.h	/^	Player players[MAX_PLAYERS];$/;"	m	struct:Game	access:public
H	.\src\Core\Input\Key.h	/^	H,$/;"	m	class:Key	access:private
HALF_PI	.\src\Core\Math\Math.h	4;"	d
HGPUNV	.\include\GL\wglext.h	/^DECLARE_HANDLE(HGPUNV);$/;"	v
HPBUFFERARB	.\include\GL\wglext.h	/^DECLARE_HANDLE(HPBUFFERARB);$/;"	v
HPBUFFEREXT	.\include\GL\wglext.h	/^DECLARE_HANDLE(HPBUFFEREXT);$/;"	v
HPVIDEODEV	.\include\GL\wglext.h	/^DECLARE_HANDLE(HPVIDEODEV);$/;"	v
HUFFMAN_MAX_CODE_LEN	.\src\Core\Compress\Huffman.h	3;"	d
HVIDEOINPUTDEVICENV	.\include\GL\wglext.h	/^DECLARE_HANDLE(HVIDEOINPUTDEVICENV);$/;"	v
HVIDEOOUTPUTDEVICENV	.\include\GL\wglext.h	/^DECLARE_HANDLE(HVIDEOOUTPUTDEVICENV);$/;"	v
Handshake	.\src\Core\Net\Packet.h	/^	Handshake,$/;"	m	class:Packet_Type	access:private
Home	.\src\Core\Input\Key.h	/^	Home,$/;"	m	class:Key	access:private
Huffman_Tree	.\src\Core\Compress\Huffman.h	/^struct Huffman_Tree$/;"	s
Huffman_Tree::map	.\src\Core\Compress\Huffman.h	/^	i16 map[1 << (HUFFMAN_MAX_CODE_LEN + 1)];$/;"	m	struct:Huffman_Tree	access:public
I	.\src\Core\Input\Key.h	/^	I,$/;"	m	class:Key	access:private
IMPLEMENT_GL	.\src\Core\GL\GL.cpp	1;"	d	file:
IMPORT_FUN	.\src\Core\GL\GL.cpp	4;"	d	file:
IP_ANY	.\src\Core\Net\IpAddress.h	3;"	d
Idle	.\src\Runtime\Online\Channel.h	/^	Idle,$/;"	m	class:Channel_State	access:private
In	.\src\Core\Net\Connection.h	/^	In,$/;"	m	class:Connection_Lock	access:private
Inflate_Stream	.\src\Core\Compress\Inflate.cpp	/^struct Inflate_Stream$/;"	s	file:
Inflate_Stream::__anon2::__anon3::bit	.\src\Core\Compress\Inflate.cpp	/^			u32 bit		: 3;$/;"	m	struct:Inflate_Stream::__anon2::__anon3	file:	access:public
Inflate_Stream::__anon2::__anon3::byte	.\src\Core\Compress\Inflate.cpp	/^			u32 byte	: 29;$/;"	m	struct:Inflate_Stream::__anon2::__anon3	file:	access:public
Inflate_Stream::__anon2::position	.\src\Core\Compress\Inflate.cpp	/^		u32 position;$/;"	m	union:Inflate_Stream::__anon2	file:	access:public
Inflate_Stream::__anon2::s	.\src\Core\Compress\Inflate.cpp	/^		} s;$/;"	m	union:Inflate_Stream::__anon2	typeref:struct:Inflate_Stream::__anon2::__anon3	file:	access:public
Inflate_Stream::data	.\src\Core\Compress\Inflate.cpp	/^	u8* data;$/;"	m	struct:Inflate_Stream	file:	access:public
Inflate_Stream::length	.\src\Core\Compress\Inflate.cpp	/^	u32 length;$/;"	m	struct:Inflate_Stream	file:	access:public
Input	.\src\Core\Input\Input.h	/^struct Input$/;"	s
Input::frame_num	.\src\Core\Input\Input.h	/^	u32 frame_num;$/;"	m	struct:Input	access:public
Input::keyboard	.\src\Core\Input\Input.h	/^	Action_State keyboard[(u32)Key::MAX];$/;"	m	struct:Input	access:public
Input::mouse	.\src\Core\Input\Input.h	/^	Mouse_State mouse;$/;"	m	struct:Input	access:public
Insert	.\src\Core\Input\Key.h	/^	Insert,$/;"	m	class:Key	access:private
Int	.\src\Core\Import\Fbx_Data.h	/^	Int = 'I',$/;"	m	class:Fbx_Property_Type	access:private
Int_Array	.\src\Core\Import\Fbx_Data.h	/^	Int_Array = 'i',$/;"	m	class:Fbx_Property_Type	access:private
Invalid	.\src\Core\Import\Dat.h	/^	Invalid,$/;"	m	class:Dat_Node_Type	access:private
Invalid	.\src\Core\Import\Fbx_Data.h	/^	Invalid,$/;"	m	class:Fbx_Mapping_Type	access:private
Invalid	.\src\Core\Import\Fbx_Data.h	/^	Invalid,$/;"	m	class:Fbx_Reference_Type	access:private
Invalid	.\src\Core\Net\Packet.h	/^	Invalid,$/;"	m	class:Packet_Type	access:private
Ip_Address	.\src\Core\Net\IpAddress.h	/^struct Ip_Address$/;"	s
Ip_Address::__anon5::addr	.\src\Core\Net\IpAddress.h	/^		u32 addr;$/;"	m	union:Ip_Address::__anon5	access:public
Ip_Address::__anon5::addr_b	.\src\Core\Net\IpAddress.h	/^		u8 addr_b[4];$/;"	m	union:Ip_Address::__anon5	access:public
Ip_Address::__anon5::addr_w	.\src\Core\Net\IpAddress.h	/^		u16 addr_w[2];$/;"	m	union:Ip_Address::__anon5	access:public
Ip_Address::port	.\src\Core\Net\IpAddress.h	/^	u16 port;$/;"	m	struct:Ip_Address	access:public
J	.\src\Core\Input\Key.h	/^	J,$/;"	m	class:Key	access:private
K	.\src\Core\Input\Key.h	/^	K,$/;"	m	class:Key	access:private
KHRONOS_APIATTRIBUTES	.\include\KHR\khrplatform.h	127;"	d
KHRONOS_APIATTRIBUTES	.\include\KHR\khrplatform.h	129;"	d
KHRONOS_APICALL	.\include\KHR\khrplatform.h	101;"	d
KHRONOS_APICALL	.\include\KHR\khrplatform.h	103;"	d
KHRONOS_APICALL	.\include\KHR\khrplatform.h	105;"	d
KHRONOS_APICALL	.\include\KHR\khrplatform.h	99;"	d
KHRONOS_APIENTRY	.\include\KHR\khrplatform.h	116;"	d
KHRONOS_APIENTRY	.\include\KHR\khrplatform.h	118;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	.\include\KHR\khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon1
KHRONOS_FALSE	.\include\KHR\khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon1
KHRONOS_MAX_ENUM	.\include\KHR\khrplatform.h	267;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	147;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	160;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	172;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	189;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	199;"	d
KHRONOS_SUPPORT_FLOAT	.\include\KHR\khrplatform.h	212;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	146;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	159;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	171;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	188;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	198;"	d
KHRONOS_SUPPORT_INT64	.\include\KHR\khrplatform.h	211;"	d
KHRONOS_TRUE	.\include\KHR\khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon1
Key	.\src\Core\Import\Dat.h	/^	Key,$/;"	m	class:Dat_Node_Type	access:private
Key	.\src\Core\Input\Key.h	/^enum class Key : u16$/;"	c	inherits:u16
Key::A	.\src\Core\Input\Key.h	/^	A,$/;"	m	class:Key	access:private
Key::Acute	.\src\Core\Input\Key.h	/^	Acute,$/;"	m	class:Key	access:private
Key::B	.\src\Core\Input\Key.h	/^	B,$/;"	m	class:Key	access:private
Key::Backspace	.\src\Core\Input\Key.h	/^	Backspace,$/;"	m	class:Key	access:private
Key::Bar	.\src\Core\Input\Key.h	/^	Bar,$/;"	m	class:Key	access:private
Key::C	.\src\Core\Input\Key.h	/^	C,$/;"	m	class:Key	access:private
Key::CapsLock	.\src\Core\Input\Key.h	/^	CapsLock,$/;"	m	class:Key	access:private
Key::Comma	.\src\Core\Input\Key.h	/^	Comma,$/;"	m	class:Key	access:private
Key::D	.\src\Core\Input\Key.h	/^	D,$/;"	m	class:Key	access:private
Key::Delete	.\src\Core\Input\Key.h	/^	Delete,$/;"	m	class:Key	access:private
Key::DownArrow	.\src\Core\Input\Key.h	/^	DownArrow,$/;"	m	class:Key	access:private
Key::E	.\src\Core\Input\Key.h	/^	E,$/;"	m	class:Key	access:private
Key::End	.\src\Core\Input\Key.h	/^	End,$/;"	m	class:Key	access:private
Key::Enter	.\src\Core\Input\Key.h	/^	Enter,$/;"	m	class:Key	access:private
Key::Escape	.\src\Core\Input\Key.h	/^	Escape = 0x1,$/;"	m	class:Key	access:private
Key::F	.\src\Core\Input\Key.h	/^	F,$/;"	m	class:Key	access:private
Key::F1	.\src\Core\Input\Key.h	/^	F1,$/;"	m	class:Key	access:private
Key::F10	.\src\Core\Input\Key.h	/^	F10,$/;"	m	class:Key	access:private
Key::F2	.\src\Core\Input\Key.h	/^	F2,$/;"	m	class:Key	access:private
Key::F3	.\src\Core\Input\Key.h	/^	F3,$/;"	m	class:Key	access:private
Key::F4	.\src\Core\Input\Key.h	/^	F4,$/;"	m	class:Key	access:private
Key::F5	.\src\Core\Input\Key.h	/^	F5,$/;"	m	class:Key	access:private
Key::F6	.\src\Core\Input\Key.h	/^	F6,$/;"	m	class:Key	access:private
Key::F7	.\src\Core\Input\Key.h	/^	F7,$/;"	m	class:Key	access:private
Key::F8	.\src\Core\Input\Key.h	/^	F8,$/;"	m	class:Key	access:private
Key::F9	.\src\Core\Input\Key.h	/^	F9,$/;"	m	class:Key	access:private
Key::ForwardSlash	.\src\Core\Input\Key.h	/^	ForwardSlash,$/;"	m	class:Key	access:private
Key::G	.\src\Core\Input\Key.h	/^	G,$/;"	m	class:Key	access:private
Key::H	.\src\Core\Input\Key.h	/^	H,$/;"	m	class:Key	access:private
Key::Home	.\src\Core\Input\Key.h	/^	Home,$/;"	m	class:Key	access:private
Key::I	.\src\Core\Input\Key.h	/^	I,$/;"	m	class:Key	access:private
Key::Insert	.\src\Core\Input\Key.h	/^	Insert,$/;"	m	class:Key	access:private
Key::J	.\src\Core\Input\Key.h	/^	J,$/;"	m	class:Key	access:private
Key::K	.\src\Core\Input\Key.h	/^	K,$/;"	m	class:Key	access:private
Key::KeyPad5	.\src\Core\Input\Key.h	/^	KeyPad5,$/;"	m	class:Key	access:private
Key::KeyPadAsterix	.\src\Core\Input\Key.h	/^	KeyPadAsterix,$/;"	m	class:Key	access:private
Key::KeyPadMinus	.\src\Core\Input\Key.h	/^	KeyPadMinus,$/;"	m	class:Key	access:private
Key::KeyPadPlus	.\src\Core\Input\Key.h	/^	KeyPadPlus,$/;"	m	class:Key	access:private
Key::L	.\src\Core\Input\Key.h	/^	L,$/;"	m	class:Key	access:private
Key::LeftAlt	.\src\Core\Input\Key.h	/^	LeftAlt,$/;"	m	class:Key	access:private
Key::LeftArrow	.\src\Core\Input\Key.h	/^	LeftArrow,$/;"	m	class:Key	access:private
Key::LeftControl	.\src\Core\Input\Key.h	/^	LeftControl,$/;"	m	class:Key	access:private
Key::LeftShift	.\src\Core\Input\Key.h	/^	LeftShift,$/;"	m	class:Key	access:private
Key::LeftSquareBracket	.\src\Core\Input\Key.h	/^	LeftSquareBracket,$/;"	m	class:Key	access:private
Key::M	.\src\Core\Input\Key.h	/^	M,$/;"	m	class:Key	access:private
Key::N	.\src\Core\Input\Key.h	/^	N,$/;"	m	class:Key	access:private
Key::Num0	.\src\Core\Input\Key.h	/^	Num0,$/;"	m	class:Key	access:private
Key::Num1	.\src\Core\Input\Key.h	/^	Num1,$/;"	m	class:Key	access:private
Key::Num2	.\src\Core\Input\Key.h	/^	Num2,$/;"	m	class:Key	access:private
Key::Num3	.\src\Core\Input\Key.h	/^	Num3,$/;"	m	class:Key	access:private
Key::Num4	.\src\Core\Input\Key.h	/^	Num4,$/;"	m	class:Key	access:private
Key::Num5	.\src\Core\Input\Key.h	/^	Num5,$/;"	m	class:Key	access:private
Key::Num6	.\src\Core\Input\Key.h	/^	Num6,$/;"	m	class:Key	access:private
Key::Num7	.\src\Core\Input\Key.h	/^	Num7,$/;"	m	class:Key	access:private
Key::Num8	.\src\Core\Input\Key.h	/^	Num8,$/;"	m	class:Key	access:private
Key::Num9	.\src\Core\Input\Key.h	/^	Num9,$/;"	m	class:Key	access:private
Key::NumLock	.\src\Core\Input\Key.h	/^	NumLock,$/;"	m	class:Key	access:private
Key::O	.\src\Core\Input\Key.h	/^	O,$/;"	m	class:Key	access:private
Key::P	.\src\Core\Input\Key.h	/^	P,$/;"	m	class:Key	access:private
Key::PageDown	.\src\Core\Input\Key.h	/^	PageDown,$/;"	m	class:Key	access:private
Key::PageUp	.\src\Core\Input\Key.h	/^	PageUp,$/;"	m	class:Key	access:private
Key::Period	.\src\Core\Input\Key.h	/^	Period,$/;"	m	class:Key	access:private
Key::Plus	.\src\Core\Input\Key.h	/^	Plus,$/;"	m	class:Key	access:private
Key::Q	.\src\Core\Input\Key.h	/^	Q,$/;"	m	class:Key	access:private
Key::R	.\src\Core\Input\Key.h	/^	R,$/;"	m	class:Key	access:private
Key::RightArrow	.\src\Core\Input\Key.h	/^	RightArrow,$/;"	m	class:Key	access:private
Key::RightShift	.\src\Core\Input\Key.h	/^	RightShift,$/;"	m	class:Key	access:private
Key::RightSquareBracket	.\src\Core\Input\Key.h	/^	RightSquareBracket,$/;"	m	class:Key	access:private
Key::S	.\src\Core\Input\Key.h	/^	S,$/;"	m	class:Key	access:private
Key::ScrollLock	.\src\Core\Input\Key.h	/^	ScrollLock,$/;"	m	class:Key	access:private
Key::Semicolon	.\src\Core\Input\Key.h	/^	Semicolon,$/;"	m	class:Key	access:private
Key::SingleQuote	.\src\Core\Input\Key.h	/^	SingleQuote,$/;"	m	class:Key	access:private
Key::Spacebar	.\src\Core\Input\Key.h	/^	Spacebar,$/;"	m	class:Key	access:private
Key::T	.\src\Core\Input\Key.h	/^	T,$/;"	m	class:Key	access:private
Key::Tab	.\src\Core\Input\Key.h	/^	Tab,$/;"	m	class:Key	access:private
Key::Tilde	.\src\Core\Input\Key.h	/^	Tilde,$/;"	m	class:Key	access:private
Key::U	.\src\Core\Input\Key.h	/^	U,$/;"	m	class:Key	access:private
Key::UpArrow	.\src\Core\Input\Key.h	/^	UpArrow,$/;"	m	class:Key	access:private
Key::V	.\src\Core\Input\Key.h	/^	V,$/;"	m	class:Key	access:private
Key::W	.\src\Core\Input\Key.h	/^	W,$/;"	m	class:Key	access:private
Key::Win	.\src\Core\Input\Key.h	/^	Win = 0x5B,$/;"	m	class:Key	access:private
Key::X	.\src\Core\Input\Key.h	/^	X,$/;"	m	class:Key	access:private
Key::Y	.\src\Core\Input\Key.h	/^	Y,$/;"	m	class:Key	access:private
Key::Z	.\src\Core\Input\Key.h	/^	Z,$/;"	m	class:Key	access:private
KeyPad5	.\src\Core\Input\Key.h	/^	KeyPad5,$/;"	m	class:Key	access:private
KeyPadAsterix	.\src\Core\Input\Key.h	/^	KeyPadAsterix,$/;"	m	class:Key	access:private
KeyPadMinus	.\src\Core\Input\Key.h	/^	KeyPadMinus,$/;"	m	class:Key	access:private
KeyPadPlus	.\src\Core\Input\Key.h	/^	KeyPadPlus,$/;"	m	class:Key	access:private
L	.\src\Core\Input\Key.h	/^	L,$/;"	m	class:Key	access:private
Left	.\src\Core\Input\Mouse.h	/^	Left = 0x01,$/;"	m	class:Mouse_Btn	access:private
LeftAlt	.\src\Core\Input\Key.h	/^	LeftAlt,$/;"	m	class:Key	access:private
LeftArrow	.\src\Core\Input\Key.h	/^	LeftArrow,$/;"	m	class:Key	access:private
LeftControl	.\src\Core\Input\Key.h	/^	LeftControl,$/;"	m	class:Key	access:private
LeftShift	.\src\Core\Input\Key.h	/^	LeftShift,$/;"	m	class:Key	access:private
LeftSquareBracket	.\src\Core\Input\Key.h	/^	LeftSquareBracket,$/;"	m	class:Key	access:private
Line_Drawer	.\src\Runtime\Effect\LineDrawer.h	/^struct Line_Drawer$/;"	s
Line_Drawer::lifetime	.\src\Runtime\Effect\LineDrawer.h	/^	float lifetime = 0.f;$/;"	m	struct:Line_Drawer	access:public
Line_Drawer::mesh	.\src\Runtime\Effect\LineDrawer.h	/^	Mesh mesh;$/;"	m	struct:Line_Drawer	access:public
Line_Drawer::num_segments	.\src\Runtime\Effect\LineDrawer.h	/^	u32 num_segments = 0;$/;"	m	struct:Line_Drawer	access:public
Line_Drawer::position	.\src\Runtime\Effect\LineDrawer.h	/^	Vec3 position;$/;"	m	struct:Line_Drawer	access:public
Line_Drawer::segments	.\src\Runtime\Effect\LineDrawer.h	/^	Line_Segment segments[20];$/;"	m	struct:Line_Drawer	access:public
Line_Drawer::timer	.\src\Runtime\Effect\LineDrawer.h	/^	float timer = 0.f;$/;"	m	struct:Line_Drawer	access:public
Line_Segment	.\src\Runtime\Effect\LineDrawer.h	/^struct Line_Segment$/;"	s
Line_Segment::position	.\src\Runtime\Effect\LineDrawer.h	/^	Vec3 position;$/;"	m	struct:Line_Segment	access:public
Line_Segment::time	.\src\Runtime\Effect\LineDrawer.h	/^	float time;$/;"	m	struct:Line_Segment	access:public
Line_Segment::width	.\src\Runtime\Effect\LineDrawer.h	/^	float width;$/;"	m	struct:Line_Segment	access:public
Local_User	.\src\Runtime\Online\Online.h	/^	Local_User,$/;"	m	class:Rpc	access:private
Login	.\src\Runtime\Online\Online.h	/^	Login,$/;"	m	class:Rpc	access:private
Long	.\src\Core\Import\Fbx_Data.h	/^	Long = 'L',$/;"	m	class:Fbx_Property_Type	access:private
Long_Array	.\src\Core\Import\Fbx_Data.h	/^	Long_Array = 'l',$/;"	m	class:Fbx_Property_Type	access:private
M	.\src\Core\Input\Key.h	/^	M,$/;"	m	class:Key	access:private
MAX_BILLBOARDS	.\src\Engine\Render\Billboard.cpp	9;"	d	file:
MAX_CHANNELS	.\src\Runtime\Online\Channel.h	5;"	d
MAX_CHANNEL_EVENTS	.\src\Runtime\Online\Channel.h	6;"	d
MAX_CONNECTIONS	.\src\Core\Net\Net.h	9;"	d
MAX_DRAWABLES	.\src\Engine\Render\Drawable.cpp	8;"	d	file:
MAX_PLAYERS	.\src\Runtime\Game\Game.h	6;"	d
MAX_PLAYERS	.\src\Runtime\Game\Scene.h	9;"	d
MAX_PROJECTILES	.\src\Runtime\Game\Scene.h	11;"	d
MAX_TICKERS	.\src\Engine\Tick\Tick.cpp	4;"	d	file:
MAX_UNITS	.\src\Runtime\Game\Scene.h	10;"	d
MESH_BUFFER_MAX	.\src\Engine\Graphics\Mesh.h	4;"	d
Mat4	.\src\Core\Math\Matrix.h	/^	Mat4($/;"	f	struct:Mat4	access:public	signature:( float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33 )
Mat4	.\src\Core\Math\Matrix.h	/^	Mat4() :$/;"	f	struct:Mat4	access:public	signature:()
Mat4	.\src\Core\Math\Matrix.h	/^struct Mat4$/;"	s
Mat4::Mat4	.\src\Core\Math\Matrix.h	/^	Mat4($/;"	f	struct:Mat4	access:public	signature:( float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33 )
Mat4::Mat4	.\src\Core\Math\Matrix.h	/^	Mat4() :$/;"	f	struct:Mat4	access:public	signature:()
Mat4::m00	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
Mat4::m01	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
Mat4::m02	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
Mat4::m03	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
Mat4::m10	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
Mat4::m11	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
Mat4::m12	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
Mat4::m13	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
Mat4::m20	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
Mat4::m21	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
Mat4::m22	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
Mat4::m23	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
Mat4::m30	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
Mat4::m31	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
Mat4::m32	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
Mat4::m33	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
Mat4::operator []	.\src\Core\Math\Matrix.h	/^	Vec4& operator[](u32 row)$/;"	f	struct:Mat4	access:public	signature:(u32 row)
Material	.\src\Engine\Graphics\Material.h	/^struct Material$/;"	s
Material::fragment	.\src\Engine\Graphics\Material.h	/^	GLuint fragment;$/;"	m	struct:Material	access:public
Material::program	.\src\Engine\Graphics\Material.h	/^	GLuint program;$/;"	m	struct:Material	access:public
Material::vertex	.\src\Engine\Graphics\Material.h	/^	GLuint vertex;$/;"	m	struct:Material	access:public
Mem_Arena	.\src\Core\Memory\Arena.h	/^struct Mem_Arena$/;"	s
Mem_Arena::buffer_size	.\src\Core\Memory\Arena.h	/^	u32 buffer_size = 1024;$/;"	m	struct:Mem_Arena	access:public
Mem_Arena::current_buffer	.\src\Core\Memory\Arena.h	/^	Arena_Buffer* current_buffer = nullptr;$/;"	m	struct:Mem_Arena	access:public
Mesh	.\src\Engine\Graphics\Mesh.h	/^struct Mesh$/;"	s
Mesh::buffers	.\src\Engine\Graphics\Mesh.h	/^	GLuint buffers[MESH_BUFFER_MAX] = { GL_INVALID_INDEX };$/;"	m	struct:Mesh	access:public
Mesh::draw_count	.\src\Engine\Graphics\Mesh.h	/^	u32 draw_count = 0;$/;"	m	struct:Mesh	access:public
Mesh::draw_mode	.\src\Engine\Graphics\Mesh.h	/^	GLenum draw_mode = GL_TRIANGLES;$/;"	m	struct:Mesh	access:public
Mesh::num_buffers	.\src\Engine\Graphics\Mesh.h	/^	u8 num_buffers = 0;$/;"	m	struct:Mesh	access:public
Mesh::use_elements	.\src\Engine\Graphics\Mesh.h	/^	bool use_elements = false;$/;"	m	struct:Mesh	access:public
Mesh::vao	.\src\Engine\Graphics\Mesh.h	/^	GLuint vao;$/;"	m	struct:Mesh	access:public
Middle	.\src\Core\Input\Mouse.h	/^	Middle,$/;"	m	class:Mouse_Btn	access:private
Mouse_Btn	.\src\Core\Input\Mouse.h	/^enum class Mouse_Btn : u8$/;"	c	inherits:u8
Mouse_Btn::Left	.\src\Core\Input\Mouse.h	/^	Left = 0x01,$/;"	m	class:Mouse_Btn	access:private
Mouse_Btn::Middle	.\src\Core\Input\Mouse.h	/^	Middle,$/;"	m	class:Mouse_Btn	access:private
Mouse_Btn::Right	.\src\Core\Input\Mouse.h	/^	Right,$/;"	m	class:Mouse_Btn	access:private
Mouse_Btn::X1	.\src\Core\Input\Mouse.h	/^	X1,$/;"	m	class:Mouse_Btn	access:private
Mouse_Btn::X2	.\src\Core\Input\Mouse.h	/^	X2,$/;"	m	class:Mouse_Btn	access:private
Mouse_State	.\src\Core\Input\Input.h	/^struct Mouse_State$/;"	s
Mouse_State::buttons	.\src\Core\Input\Input.h	/^	Action_State buttons[(u32)Mouse_Btn::MAX];$/;"	m	struct:Mouse_State	access:public
Mouse_State::delta_x	.\src\Core\Input\Input.h	/^	int delta_x;$/;"	m	struct:Mouse_State	access:public
Mouse_State::delta_y	.\src\Core\Input\Input.h	/^	int delta_y;$/;"	m	struct:Mouse_State	access:public
Mouse_State::scroll_delta	.\src\Core\Input\Input.h	/^	int scroll_delta;$/;"	m	struct:Mouse_State	access:public
Mouse_State::x	.\src\Core\Input\Input.h	/^	int x;$/;"	m	struct:Mouse_State	access:public
Mouse_State::y	.\src\Core\Input\Input.h	/^	int y;$/;"	m	struct:Mouse_State	access:public
Mutex	.\src\Core\Thread\Mutex.h	/^struct Mutex$/;"	s
Mutex::handle	.\src\Core\Thread\Mutex.h	/^	HANDLE handle;$/;"	m	struct:Mutex	access:public
MyClass	.\src\Runtime\main.cpp	/^class MyClass$/;"	c	file:
MyClass::a	.\src\Runtime\main.cpp	/^	int a;$/;"	m	class:MyClass	file:	access:private
MyClass::b	.\src\Runtime\main.cpp	/^	int b;$/;"	m	class:MyClass	file:	access:private
N	.\src\Core\Input\Key.h	/^	N,$/;"	m	class:Key	access:private
NEAR	.\src\Core\WinMin.h	52;"	d
NEWLINE	.\src\Core\Import\Dat.cpp	59;"	d	file:
NOATOM	.\src\Core\WinMin.h	24;"	d
NOATOM	.\src\Core\Windows\WinMin.h	24;"	d
NOCLIPBOARD	.\src\Core\WinMin.h	25;"	d
NOCLIPBOARD	.\src\Core\Windows\WinMin.h	25;"	d
NOCOMM	.\src\Core\WinMin.h	40;"	d
NOCOMM	.\src\Core\Windows\WinMin.h	40;"	d
NOCTLMGR	.\src\Core\WinMin.h	26;"	d
NOCTLMGR	.\src\Core\Windows\WinMin.h	26;"	d
NODEFERWINDOWPOS	.\src\Core\WinMin.h	44;"	d
NODEFERWINDOWPOS	.\src\Core\Windows\WinMin.h	44;"	d
NODRAWTEXT	.\src\Core\WinMin.h	27;"	d
NODRAWTEXT	.\src\Core\Windows\WinMin.h	27;"	d
NOGDICAPMASKS	.\src\Core\WinMin.h	14;"	d
NOGDICAPMASKS	.\src\Core\Windows\WinMin.h	14;"	d
NOHELP	.\src\Core\WinMin.h	42;"	d
NOHELP	.\src\Core\Windows\WinMin.h	42;"	d
NOICONS	.\src\Core\WinMin.h	18;"	d
NOICONS	.\src\Core\Windows\WinMin.h	18;"	d
NOKANJI	.\src\Core\WinMin.h	41;"	d
NOKANJI	.\src\Core\Windows\WinMin.h	41;"	d
NOKERNEL	.\src\Core\WinMin.h	28;"	d
NOKERNEL	.\src\Core\Windows\WinMin.h	28;"	d
NOKEYSTATES	.\src\Core\WinMin.h	19;"	d
NOKEYSTATES	.\src\Core\Windows\WinMin.h	19;"	d
NOMCX	.\src\Core\WinMin.h	45;"	d
NOMCX	.\src\Core\Windows\WinMin.h	45;"	d
NOMEMMGR	.\src\Core\WinMin.h	30;"	d
NOMEMMGR	.\src\Core\Windows\WinMin.h	30;"	d
NOMENUS	.\src\Core\WinMin.h	17;"	d
NOMENUS	.\src\Core\Windows\WinMin.h	17;"	d
NOMETAFILE	.\src\Core\WinMin.h	31;"	d
NOMETAFILE	.\src\Core\Windows\WinMin.h	31;"	d
NOMINMAX	.\src\Core\WinMin.h	32;"	d
NOMINMAX	.\src\Core\Windows\WinMin.h	32;"	d
NONLS	.\src\Core\WinMin.h	29;"	d
NONLS	.\src\Core\Windows\WinMin.h	29;"	d
NOOPENFILE	.\src\Core\WinMin.h	33;"	d
NOOPENFILE	.\src\Core\Windows\WinMin.h	33;"	d
NOPROFILER	.\src\Core\WinMin.h	43;"	d
NOPROFILER	.\src\Core\Windows\WinMin.h	43;"	d
NORASTEROPS	.\src\Core\WinMin.h	21;"	d
NORASTEROPS	.\src\Core\Windows\WinMin.h	21;"	d
NOSCROLL	.\src\Core\WinMin.h	34;"	d
NOSCROLL	.\src\Core\Windows\WinMin.h	34;"	d
NOSERVICE	.\src\Core\WinMin.h	35;"	d
NOSERVICE	.\src\Core\Windows\WinMin.h	35;"	d
NOSHOWWINDOW	.\src\Core\WinMin.h	22;"	d
NOSHOWWINDOW	.\src\Core\Windows\WinMin.h	22;"	d
NOSOUND	.\src\Core\WinMin.h	36;"	d
NOSOUND	.\src\Core\Windows\WinMin.h	36;"	d
NOSYSCOMMANDS	.\src\Core\WinMin.h	20;"	d
NOSYSCOMMANDS	.\src\Core\Windows\WinMin.h	20;"	d
NOSYSMETRICS	.\src\Core\WinMin.h	16;"	d
NOSYSMETRICS	.\src\Core\Windows\WinMin.h	16;"	d
NOTEXTMETRIC	.\src\Core\WinMin.h	37;"	d
NOTEXTMETRIC	.\src\Core\Windows\WinMin.h	37;"	d
NOVIRTUALKEYCODES	.\src\Core\WinMin.h	15;"	d
NOVIRTUALKEYCODES	.\src\Core\Windows\WinMin.h	15;"	d
NOWH	.\src\Core\WinMin.h	38;"	d
NOWH	.\src\Core\Windows\WinMin.h	38;"	d
NOWINOFFSETS	.\src\Core\WinMin.h	39;"	d
NOWINOFFSETS	.\src\Core\Windows\WinMin.h	39;"	d
NUMERIC	.\src\Core\Import\Dat.cpp	66;"	d	file:
NUMERIC	.\src\Core\OS\Path.cpp	6;"	d	file:
Net_Event	.\src\Core\Net\NetEvent.h	/^struct Net_Event$/;"	s
Net_Event::connection	.\src\Core\Net\NetEvent.h	/^	Connection_Handle connection;$/;"	m	struct:Net_Event	access:public
Net_Event::next	.\src\Core\Net\NetEvent.h	/^	Net_Event* next = nullptr;$/;"	m	struct:Net_Event	access:public
Net_Event::packet	.\src\Core\Net\NetEvent.h	/^	Packet* packet = nullptr;$/;"	m	struct:Net_Event	access:public
Net_Event::packet_body	.\src\Core\Net\NetEvent.h	/^	const void* packet_body = nullptr;$/;"	m	struct:Net_Event	access:public
Net_Event::packet_body_size	.\src\Core\Net\NetEvent.h	/^	u32 packet_body_size = 0;$/;"	m	struct:Net_Event	access:public
Net_Event::type	.\src\Core\Net\NetEvent.h	/^	Net_Event_Type type;$/;"	m	struct:Net_Event	access:public
Net_Event_Type	.\src\Core\Net\NetEvent.h	/^enum class Net_Event_Type : u8$/;"	c	inherits:u8
Net_Event_Type::Connect	.\src\Core\Net\NetEvent.h	/^	Connect,$/;"	m	class:Net_Event_Type	access:private
Net_Event_Type::Disconnect	.\src\Core\Net\NetEvent.h	/^	Disconnect,$/;"	m	class:Net_Event_Type	access:private
Net_Service	.\src\Core\Net\Net.h	/^struct Net_Service$/;"	s
Net_Service::active	.\src\Core\Net\Net.h	/^	bool active = false;$/;"	m	struct:Net_Service	access:public
Net_Service::connections	.\src\Core\Net\Net.h	/^	Connection connections[MAX_CONNECTIONS];$/;"	m	struct:Net_Service	access:public
Net_Service::debug	.\src\Core\Net\Net.h	/^	bool debug = false;$/;"	m	struct:Net_Service	access:public
Net_Service::event_list	.\src\Core\Net\Net.h	/^	Net_Event* event_list = nullptr;$/;"	m	struct:Net_Service	access:public
Net_Service::event_mutex	.\src\Core\Net\Net.h	/^	Mutex event_mutex;$/;"	m	struct:Net_Service	access:public
Net_Service::log_mutex	.\src\Core\Net\Net.h	/^	Mutex log_mutex;$/;"	m	struct:Net_Service	access:public
Net_Service::recv_thread	.\src\Core\Net\Net.h	/^	Thread recv_thread;$/;"	m	struct:Net_Service	access:public
Net_Service::send_thread	.\src\Core\Net\Net.h	/^	Thread send_thread;$/;"	m	struct:Net_Service	access:public
Net_Service::socket	.\src\Core\Net\Net.h	/^	Socket socket;$/;"	m	struct:Net_Service	access:public
NoImageData	.\src\Core\Import\TGA.cpp	/^	NoImageData,$/;"	m	class:Tga_Image_Type	file:	access:private
None	.\src\Core\Net\Connection.h	/^	None,$/;"	m	class:Connection_State	access:private
Num0	.\src\Core\Input\Key.h	/^	Num0,$/;"	m	class:Key	access:private
Num1	.\src\Core\Input\Key.h	/^	Num1,$/;"	m	class:Key	access:private
Num2	.\src\Core\Input\Key.h	/^	Num2,$/;"	m	class:Key	access:private
Num3	.\src\Core\Input\Key.h	/^	Num3,$/;"	m	class:Key	access:private
Num4	.\src\Core\Input\Key.h	/^	Num4,$/;"	m	class:Key	access:private
Num5	.\src\Core\Input\Key.h	/^	Num5,$/;"	m	class:Key	access:private
Num6	.\src\Core\Input\Key.h	/^	Num6,$/;"	m	class:Key	access:private
Num7	.\src\Core\Input\Key.h	/^	Num7,$/;"	m	class:Key	access:private
Num8	.\src\Core\Input\Key.h	/^	Num8,$/;"	m	class:Key	access:private
Num9	.\src\Core\Input\Key.h	/^	Num9,$/;"	m	class:Key	access:private
NumLock	.\src\Core\Input\Key.h	/^	NumLock,$/;"	m	class:Key	access:private
O	.\src\Core\Input\Key.h	/^	O,$/;"	m	class:Key	access:private
OEMRESOURCE	.\src\Core\WinMin.h	23;"	d
OEMRESOURCE	.\src\Core\Windows\WinMin.h	23;"	d
Object	.\src\Core\Import\Dat.h	/^	Object,$/;"	m	class:Dat_Node_Type	access:private
Online_User	.\src\Runtime\Online\Online.h	/^struct Online_User$/;"	s
Online_User::active	.\src\Runtime\Online\Online.h	/^	bool active = false;$/;"	m	struct:Online_User	access:public
Online_User::connection	.\src\Runtime\Online\Online.h	/^	Connection_Handle connection;$/;"	m	struct:Online_User	access:public
Online_User::id	.\src\Runtime\Online\Online.h	/^	u32 id = 0;$/;"	m	struct:Online_User	access:public
Online_User::is_local	.\src\Runtime\Online\Online.h	/^	bool is_local = false;$/;"	m	struct:Online_User	access:public
Online_User::name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Online_User	access:public
Open	.\src\Core\Net\Connection.h	/^	Open,$/;"	m	class:Connection_State	access:private
Out	.\src\Core\Net\Connection.h	/^	Out,$/;"	m	class:Connection_Lock	access:private
P	.\src\Core\Input\Key.h	/^	P,$/;"	m	class:Key	access:private
PFNGLACCUMXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACCUMXOESPROC) (GLenum op, GLfixed value);$/;"	t
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key, GLuint timeout);$/;"	t
PFNGLACTIVEPROGRAMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVEVARYINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLALPHAFUNCXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLALPHAFUNCXOESPROC) (GLenum func, GLfixed ref);$/;"	t
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) (GLenum mode);$/;"	t
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFQUERYINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLBEGINQUERYARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBEGINVIDEOCAPTURENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFEROFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFEROFFSETNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERSBASEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	t
PFNGLBINDBUFFERSRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	t
PFNGLBINDFRAGDATALOCATIONEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDIMAGETEXTURESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPARAMETEREXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDSAMPLERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);$/;"	t
PFNGLBINDSHADINGRATEIMAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTURESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDTEXTUREUNITPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	t
PFNGLBINORMAL3BEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLBITMAPXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBITMAPXOESPROC) (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);$/;"	t
PFNGLBLENDBARRIERKHRPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t
PFNGLBLENDBARRIERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t
PFNGLBLENDCOLOREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDCOLORPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDCOLORXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONINDEXEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCINDEXEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDPARAMETERINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITNAMEDFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERATTACHMEMORYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);$/;"	t
PFNGLBUFFERDATAARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERPAGECOMMITMENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLBUFFERPARAMETERIAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLBUFFERSTORAGEEXTERNALEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEEXTERNALEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);$/;"	t
PFNGLBUFFERSTORAGEMEMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEMEMEXTPROC) (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);$/;"	t
PFNGLBUFFERSTORAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCALLCOMMANDLISTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARACCUMXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARACCUMXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLCLEARBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORIIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCLEARCOLORIUIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCLEARCOLORXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORXOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLCLEARDEPTHDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t
PFNGLCLEARDEPTHFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHXOESPROC) (GLfixed depth);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARTEXIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARTEXSUBIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPCONTROLPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t
PFNGLCLIPPLANEFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat *equation);$/;"	t
PFNGLCLIPPLANEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCLIPPLANEXOESPROC) (GLenum plane, const GLfixed *equation);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XOESPROC) (GLfixed red, GLfixed green, GLfixed blue);$/;"	t
PFNGLCOLOR3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR3XVOESPROC) (const GLfixed *components);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XOESPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	t
PFNGLCOLOR4XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLOR4XVOESPROC) (const GLfixed *components);$/;"	t
PFNGLCOLORFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORMASKINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	t
PFNGLCOLORTABLESGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMMANDLISTSEGMENTSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t
PFNGLCOMPILECOMMANDLISTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCOMPILESHADERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLCONVOLUTIONPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYIMAGESUBDATANVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERAGEMODULATIONNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t
PFNGLCOVERAGEMODULATIONTABLENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t
PFNGLCOVERFILLPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERFILLPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERSTROKEPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCREATEBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLCREATECOMMANDLISTSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t
PFNGLCREATEFRAMEBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLCREATEMEMORYOBJECTSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEMEMORYOBJECTSEXTPROC) (GLsizei n, GLuint *memoryObjects);$/;"	t
PFNGLCREATEPERFQUERYINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	.\include\GL\glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPIPELINESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLCREATEPROGRAMPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEQUERIESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATERENDERBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLCREATESAMPLERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	.\include\GL\glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	t
PFNGLCREATESTATESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	.\include\GL\glext.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	t
PFNGLCREATETEXTURESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t
PFNGLCREATETRANSFORMFEEDBACKSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATEVERTEXARRAYSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEBUGMESSAGECALLBACKAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEENABLEAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETECOMMANDLISTSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEMEMORYOBJECTSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEMEMORYOBJECTSEXTPROC) (GLsizei n, const GLuint *memoryObjects);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETENAMESAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);$/;"	t
PFNGLDELETEOBJECTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPATHSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFQUERYINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERYRESOURCETAGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEQUERYRESOURCETAGNVPROC) (GLsizei n, const GLint *tagIds);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESEMAPHORESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETESEMAPHORESEXTPROC) (GLsizei n, const GLuint *semaphores);$/;"	t
PFNGLDELETESHADERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESTATESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t
PFNGLDELETESYNCPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t
PFNGLDEPTHRANGEFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEXOESPROC) (GLfixed n, GLfixed f);$/;"	t
PFNGLDETACHOBJECTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLECLIENTSTATEIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWBUFFERSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWCOMMANDSADDRESSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWMESHTASKSINDIRECTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);$/;"	t
PFNGLDRAWMESHTASKSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWTEXTURENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLDRAWVKIMAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean **pointer, GLint ptrstride);$/;"	t
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES image, const GLint* attrib_list);$/;"	t
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOES image, const GLint* attrib_list);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t
PFNGLENABLECLIENTSTATEIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLENABLEVERTEXATTRIBAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERNVXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDPERFMONITORAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFQUERYINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLENDQUERYARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYINDEXEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTRANSFORMFEEDBACKEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLENDVIDEOCAPTURENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLEVALCOORD1XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XOESPROC) (GLfixed u);$/;"	t
PFNGLEVALCOORD1XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLEVALCOORD2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XOESPROC) (GLfixed u, GLfixed v);$/;"	t
PFNGLEVALCOORD2XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLEVALMAPSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEVALUATEDEPTHVALUESARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLFEEDBACKBUFFERXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFEEDBACKBUFFERXOESPROC) (GLsizei n, GLenum type, const GLfixed *buffer);$/;"	t
PFNGLFENCESYNCPROC	.\include\GL\glext.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHSTATICDATAIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHSTATICDATAIBMPROC) (GLenum target);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFOGCOORDFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFOGXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLFOGXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFOGXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTCOVERAGECOLORNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMETERMINATORGREMEDYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLFRUSTUMFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
PFNGLFRUSTUMXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLFRUSTUMXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t
PFNGLGENFENCESAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENNAMESAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPATHSNVPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENPROGRAMSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERYRESOURCETAGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENQUERYRESOURCETAGNVPROC) (GLsizei n, GLint *tagIds);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENSEMAPHORESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENSEMAPHORESEXTPROC) (GLsizei n, GLuint *semaphores);$/;"	t
PFNGLGENSYMBOLSEXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEVARYINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETCLIPPLANEFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat *equation);$/;"	t
PFNGLGETCLIPPLANEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCLIPPLANEXOESPROC) (GLenum plane, GLfixed *equation);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, void *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, void *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, void *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMMANDHEADERNVPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, void *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);$/;"	t
PFNGLGETDEBUGMESSAGELOGAMDPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);$/;"	t
PFNGLGETDOUBLEI_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETFENCEIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFIRSTPERFQUERYIDINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t
PFNGLGETFIXEDVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFIXEDVOESPROC) (GLenum pname, GLfixed *params);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t
PFNGLGETFLOATI_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFOGFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONEXTPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) (GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t
PFNGLGETHANDLEARBPROC	.\include\GL\glext.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETHISTOGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	t
PFNGLGETIMAGEHANDLEARBPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGEHANDLENVPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINTEGER64I_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLIGHTXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMAPXVOESPROC) (GLenum target, GLenum query, GLfixed *v);$/;"	t
PFNGLGETMATERIALXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);$/;"	t
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	t
PFNGLGETMULTISAMPLEFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) (GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOLORTABLEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);$/;"	t
PFNGLGETNCOLORTABLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNCONVOLUTIONFILTERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);$/;"	t
PFNGLGETNCONVOLUTIONFILTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);$/;"	t
PFNGLGETNEXTPERFQUERYIDINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t
PFNGLGETNHISTOGRAMARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNHISTOGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNMAPDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
PFNGLGETNMAPDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
PFNGLGETNMAPFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETNMAPFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETNMAPIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
PFNGLGETNMAPIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
PFNGLGETNMINMAXARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNMINMAXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	t
PFNGLGETNPIXELMAPFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
PFNGLGETNPIXELMAPFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
PFNGLGETNPIXELMAPUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
PFNGLGETNPIXELMAPUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
PFNGLGETNPIXELMAPUSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
PFNGLGETNPIXELMAPUSVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVPROC) (GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
PFNGLGETNPOLYGONSTIPPLEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t
PFNGLGETNPOLYGONSTIPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t
PFNGLGETNSEPARABLEFILTERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);$/;"	t
PFNGLGETNSEPARABLEFILTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNTEXIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPATHCOLORGENFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHCOLORGENIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHCOMMANDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t
PFNGLGETPATHCOORDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t
PFNGLGETPATHDASHARRAYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t
PFNGLGETPATHLENGTHNVPROC	.\include\GL\glext.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	t
PFNGLGETPATHMETRICRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHMETRICSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHSPACINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	t
PFNGLGETPATHTEXGENFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHTEXGENIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	t
PFNGLGETPERFCOUNTERINFOINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFQUERYDATAINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);$/;"	t
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);$/;"	t
PFNGLGETPERFQUERYINFOINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	t
PFNGLGETPIXELMAPXVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELMAPXVPROC) (GLenum map, GLint size, GLfixed *values);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);$/;"	t
PFNGLGETPOINTERI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t
PFNGLGETPOINTERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPROGRAMBINARYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);$/;"	t
PFNGLGETQUERYBUFFEROBJECTI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry, GLenum *rate);$/;"	t
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint samples, GLuint index, GLint *location);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETSTAGEINDEXNVPROC	.\include\GL\glext.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t
PFNGLGETSTRINGIPROC	.\include\GL\glext.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXENVXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXENVXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTEXGENXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERXVOESPROC) (GLenum target, GLint level, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETTEXPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, GLfixed *params);$/;"	t
PFNGLGETTEXTUREHANDLEARBPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREHANDLENVPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXTUREIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLENVPROC	.\include\GL\glext.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESUBIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI_VPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMOFFSETEXTPROC	.\include\GL\glext.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNSIGNEDBYTEI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEI_VEXTPROC) (GLenum target, GLuint index, GLubyte *data);$/;"	t
PFNGLGETUNSIGNEDBYTEVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETUNSIGNEDBYTEVEXTPROC) (GLenum pname, GLubyte *data);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data);$/;"	t
PFNGLGETVARYINGLOCATIONNVPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVERTEXARRAYINDEXED64IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	t
PFNGLGETVERTEXARRAYINDEXEDIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVIDEOCAPTUREIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVIDEOIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVIDEOUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVKPROCADDRNVPROC	.\include\GL\glext.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const void *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLIMPORTMEMORYFDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYFDEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, GLint fd);$/;"	t
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, void *handle);$/;"	t
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) (GLuint memory, GLuint64 size, GLenum handleType, const void *name);$/;"	t
PFNGLIMPORTSEMAPHOREFDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREFDEXTPROC) (GLuint semaphore, GLenum handleType, GLint fd);$/;"	t
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) (GLuint semaphore, GLenum handleType, void *handle);$/;"	t
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) (GLuint semaphore, GLenum handleType, const void *name);$/;"	t
PFNGLIMPORTSYNCEXTPROC	.\include\GL\glext.h	/^typedef GLsync (APIENTRYP PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);$/;"	t
PFNGLINDEXFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINDEXFUNCEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLINDEXXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXXOESPROC) (GLfixed component);$/;"	t
PFNGLINDEXXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINDEXXVOESPROC) (const GLfixed *component);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLINTERPOLATEPATHSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISCOMMANDLISTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISFENCEAPPLEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISIMAGEHANDLERESIDENTARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISIMAGEHANDLERESIDENTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISMEMORYOBJECTEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISMEMORYOBJECTEXTPROC) (GLuint memoryObject);$/;"	t
PFNGLISNAMEAMDPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPATHNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t
PFNGLISPOINTINFILLPATHNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	t
PFNGLISPOINTINSTROKEPATHNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);$/;"	t
PFNGLISPROGRAMARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSEMAPHOREEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSEMAPHOREEXTPROC) (GLuint semaphore);$/;"	t
PFNGLISSHADERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSTATENVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t
PFNGLISSYNCPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISTRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLLABELOBJECTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLGPUCOPYIMAGESUBDATANVXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLGPUCOPYIMAGESUBDATANVXPROC) (GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLLGPUINTERLOCKNVXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLGPUINTERLOCKNVXPROC) (void);$/;"	t
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC) (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLLIGHTENVISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLIGHTMODELXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTMODELXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLIGHTMODELXVOESPROC) (GLenum pname, const GLfixed *param);$/;"	t
PFNGLLIGHTXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXOESPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t
PFNGLLIGHTXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLIGHTXVOESPROC) (GLenum light, GLenum pname, const GLfixed *params);$/;"	t
PFNGLLINEWIDTHXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHXOESPROC) (GLfixed width);$/;"	t
PFNGLLINKPROGRAMARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADMATRIXXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLLOADPROGRAMNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAP1XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAP1XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);$/;"	t
PFNGLMAP2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAP2XOESPROC) (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);$/;"	t
PFNGLMAPBUFFERARBPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);$/;"	t
PFNGLMAPGRID1XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID1XOESPROC) (GLint n, GLfixed u1, GLfixed u2);$/;"	t
PFNGLMAPGRID2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPGRID2XOESPROC) (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMAPTEXTURE2DINTELPROC	.\include\GL\glext.h	/^typedef void *(APIENTRYP PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);$/;"	t
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	t
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	t
PFNGLMATERIALXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXOESPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t
PFNGLMATERIALXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATERIALXVOESPROC) (GLenum face, GLenum pname, const GLfixed *param);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMATRIXLOAD3X2FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOAD3X3FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X2FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X3FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);$/;"	t
PFNGLMEMORYBARRIERBYREGIONPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pname, const GLint *params);$/;"	t
PFNGLMINMAXEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTICASTBARRIERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBARRIERNVPROC) (void);$/;"	t
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) (GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLMULTICASTBUFFERSUBDATANVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTBUFFERSUBDATANVPROC) (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) (GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) (GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) (GLuint gpu, GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLMULTICASTWAITSYNCNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTICASTWAITSYNCNVPROC) (GLuint signalGpu, GLbitfield waitGpuMask);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORD1BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BOESPROC) (GLenum texture, GLbyte s);$/;"	t
PFNGLMULTITEXCOORD1BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XOESPROC) (GLenum texture, GLfixed s);$/;"	t
PFNGLMULTITEXCOORD1XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
PFNGLMULTITEXCOORD2BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BOESPROC) (GLenum texture, GLbyte s, GLbyte t);$/;"	t
PFNGLMULTITEXCOORD2BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XOESPROC) (GLenum texture, GLfixed s, GLfixed t);$/;"	t
PFNGLMULTITEXCOORD2XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
PFNGLMULTITEXCOORD3BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r);$/;"	t
PFNGLMULTITEXCOORD3BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r);$/;"	t
PFNGLMULTITEXCOORD3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
PFNGLMULTITEXCOORD4BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BOESPROC) (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t
PFNGLMULTITEXCOORD4BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4BVOESPROC) (GLenum texture, const GLbyte *coords);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XOESPROC) (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
PFNGLMULTITEXCOORD4XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4XVOESPROC) (GLenum texture, const GLfixed *coords);$/;"	t
PFNGLMULTITEXCOORDP1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTMATRIXXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXXOESPROC) (const GLfixed *m);$/;"	t
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GLuint64 offset);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSTORAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);$/;"	t
PFNGLNAMEDBUFFERSTORAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDBUFFERSUBDATAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMAL3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XOESPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t
PFNGLNORMAL3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMAL3XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLNORMALFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLNORMALP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLNORMALP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLNORMALPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void **pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLOBJECTLABELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPURGEABLEAPPLEPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLOBJECTUNPURGEABLEAPPLEPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLORTHOFOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	t
PFNGLORTHOXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLORTHOXOESPROC) (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	t
PFNGLPASSTEXCOORDATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPASSTHROUGHXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPASSTHROUGHXOESPROC) (GLfixed token);$/;"	t
PFNGLPATCHPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATHCOLORGENNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);$/;"	t
PFNGLPATHCOMMANDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOORDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOVERDEPTHFUNCNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t
PFNGLPATHDASHARRAYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	t
PFNGLPATHFOGGENNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t
PFNGLPATHGLYPHINDEXARRAYNVPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHINDEXRANGENVPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	t
PFNGLPATHGLYPHRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHPARAMETERFNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t
PFNGLPATHPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);$/;"	t
PFNGLPATHPARAMETERINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t
PFNGLPATHPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);$/;"	t
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPATHSTENCILFUNCNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLPATHSTRINGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	t
PFNGLPATHSUBCOMMANDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHSUBCOORDSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHTEXGENNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELDATARANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, const void *pointer);$/;"	t
PFNGLPIXELMAPXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELMAPXPROC) (GLenum map, GLint size, const GLfixed *values);$/;"	t
PFNGLPIXELSTOREXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREXPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFERXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFERXOESPROC) (GLenum pname, GLfixed param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELZOOMXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPIXELZOOMXOESPROC) (GLfixed xfactor, GLfixed yfactor);$/;"	t
PFNGLPNTRIANGLESFATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTALONGPATHNVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERXVOESPROC) (GLenum pname, const GLfixed *params);$/;"	t
PFNGLPOINTSIZEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEXOESPROC) (GLfixed size);$/;"	t
PFNGLPOLLASYNCSGIXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETCLAMPEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETCLAMPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPOLYGONOFFSETXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETXOESPROC) (GLfixed factor, GLfixed units);$/;"	t
PFNGLPOPDEBUGGROUPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPRESENTFRAMEDUALFILLNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	t
PFNGLPRESENTFRAMEKEYEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	t
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPRIORITIZETEXTURESXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESXOESPROC) (GLsizei n, const GLuint *textures, const GLfixed *priorities);$/;"	t
PFNGLPROGRAMBINARYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4INVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const void *string);$/;"	t
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMVERTEXLIMITNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t
PFNGLPROVOKINGVERTEXEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLQUERYCOUNTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLQUERYMATRIXXOESPROC	.\include\GL\glext.h	/^typedef GLbitfield (APIENTRYP PFNGLQUERYMATRIXXOESPROC) (GLfixed *mantissa, GLint *exponent);$/;"	t
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum pname, GLuint param);$/;"	t
PFNGLQUERYRESOURCENVPROC	.\include\GL\glext.h	/^typedef GLint (APIENTRYP PFNGLQUERYRESOURCENVPROC) (GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer);$/;"	t
PFNGLQUERYRESOURCETAGNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLQUERYRESOURCETAGNVPROC) (GLint tagId, const GLchar *tagString);$/;"	t
PFNGLRASTERPOS2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XOESPROC) (GLfixed x, GLfixed y);$/;"	t
PFNGLRASTERPOS2XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS2XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLRASTERPOS3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLRASTERPOS3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS3XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLRASTERPOS4XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XOESPROC) (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	t
PFNGLRASTERPOS4XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERPOS4XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLRASTERSAMPLESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREADNPIXELSARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLRECTXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRECTXOESPROC) (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	t
PFNGLRECTXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRECTXVOESPROC) (const GLfixed *v1, const GLfixed *v2);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERGPUMASKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRENDERGPUMASKNVPROC) (GLbitfield mask);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const void **pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);$/;"	t
PFNGLRESETMINMAXEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLRESOLVEDEPTHVALUESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLROTATEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLROTATEXOESPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKINDEXEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCALEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCALEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLSCISSORARRAYVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSOREXCLUSIVENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSECONDARYCOLORP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLSECONDARYCOLORP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname, const GLuint64 *params);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const void *addr);$/;"	t
PFNGLSETMULTISAMPLEFVAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfloat *val);$/;"	t
PFNGLSHADERBINARYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	t
PFNGLSHADEROP1EXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSHADINGRATEIMAGEBARRIERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLboolean synchronize);$/;"	t
PFNGLSHADINGRATEIMAGEPALETTENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);$/;"	t
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples, const GLint *locations);$/;"	t
PFNGLSHADINGRATESAMPLEORDERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERNVPROC) (GLenum order);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSIGNALSEMAPHOREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSIGNALSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);$/;"	t
PFNGLSIGNALVKFENCENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t
PFNGLSIGNALVKSEMAPHORENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLSPECIALIZESHADERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSPECIALIZESHADERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTATECAPTURENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t
PFNGLSTENCILCLEARTAGEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	t
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILFILLPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPVALUEAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILSTROKEPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t
PFNGLSUBPIXELPRECISIONBIASNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t
PFNGLSWIZZLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLSYNCTEXTUREINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESSELLATIONFACTORAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t
PFNGLTESSELLATIONMODEAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t
PFNGLTESTFENCEAPPLEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXATTACHMEMORYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXBUFFERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BOESPROC) (GLbyte s);$/;"	t
PFNGLTEXCOORD1BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLTEXCOORD1HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD1XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XOESPROC) (GLfixed s);$/;"	t
PFNGLTEXCOORD1XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLTEXCOORD2BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BOESPROC) (GLbyte s, GLbyte t);$/;"	t
PFNGLTEXCOORD2BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XOESPROC) (GLfixed s, GLfixed t);$/;"	t
PFNGLTEXCOORD2XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLTEXCOORD3BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BOESPROC) (GLbyte s, GLbyte t, GLbyte r);$/;"	t
PFNGLTEXCOORD3BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLTEXCOORD3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XOESPROC) (GLfixed s, GLfixed t, GLfixed r);$/;"	t
PFNGLTEXCOORD3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLTEXCOORD4BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BOESPROC) (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	t
PFNGLTEXCOORD4BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XOESPROC) (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	t
PFNGLTEXCOORD4XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXCOORDP1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);$/;"	t
PFNGLTEXENVXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXENVXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXENVXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXGENXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXGENXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXPAGECOMMITMENTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXOESPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t
PFNGLTEXPARAMETERXVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERXVOESPROC) (GLenum target, GLenum pname, const GLfixed *params);$/;"	t
PFNGLTEXRENDERBUFFERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXSTORAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSTORAGEMEM1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXSTORAGEMEM2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXSTORAGEMEM3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXSTORAGESPARSEAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREATTACHMEMORYNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBARRIERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);$/;"	t
PFNGLTEXTURERANGEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const void *pointer);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGEMEM1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM1DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTURESTORAGEMEM2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTURESTORAGEMEM3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DEXTPROC) (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	t
PFNGLTEXTURESTORAGESPARSEAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREVIEWPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRACKMATRIXNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMPATHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLTRANSLATEXOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLTRANSLATEXOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLUNIFORM1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t
PFNGLUNIFORM1I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM1I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t
PFNGLUNIFORM1UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLUNIFORM2I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM2I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLUNIFORM2UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLUNIFORM3I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM3I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLUNIFORM3UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLUNIFORM4I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM4I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLUNIFORM4UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);$/;"	t
PFNGLUNIFORMHANDLEUI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMHANDLEUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPNAMEDBUFFERPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPTEXTURE2DINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const void *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVDPAUFININVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t
PFNGLVDPAUGETSURFACEIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLVDPAUINITNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const void *vdpDevice, const void *getProcAddress);$/;"	t
PFNGLVDPAUISSURFACENVPROC	.\include\GL\glext.h	/^typedef GLboolean (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVDPAUMAPSURFACESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	.\include\GL\glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	.\include\GL\glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC	.\include\GL\glext.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC) (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure);$/;"	t
PFNGLVDPAUSURFACEACCESSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);$/;"	t
PFNGLVDPAUUNMAPSURFACESNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUUNREGISTERSURFACENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVERTEX2BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BOESPROC) (GLbyte x, GLbyte y);$/;"	t
PFNGLVERTEX2BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLVERTEX2HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX2XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XOESPROC) (GLfixed x);$/;"	t
PFNGLVERTEX2XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX2XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLVERTEX3BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BOESPROC) (GLbyte x, GLbyte y, GLbyte z);$/;"	t
PFNGLVERTEX3BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLVERTEX3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XOESPROC) (GLfixed x, GLfixed y);$/;"	t
PFNGLVERTEX3XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX3XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLVERTEX4BOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BOESPROC) (GLbyte x, GLbyte y, GLbyte z, GLbyte w);$/;"	t
PFNGLVERTEX4BVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4BVOESPROC) (const GLbyte *coords);$/;"	t
PFNGLVERTEX4HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4XOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XOESPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t
PFNGLVERTEX4XVOESPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEX4XVOESPROC) (const GLfixed *coords);$/;"	t
PFNGLVERTEXARRAYATTRIBBINDINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYATTRIBFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBIFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBLFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYBINDINGDIVISORPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYELEMENTBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const void *pointer);$/;"	t
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64ARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLint param);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXBLENDARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXFORMATNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXP2UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP2UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP3UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP3UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP4UIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP4UIVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void **pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVIDEOCAPTURENVPROC	.\include\GL\glext.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	t
PFNGLVIEWPORTARRAYVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTPOSITIONWSCALENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	t
PFNGLVIEWPORTSWIZZLENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	t
PFNGLWAITSEMAPHOREEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWAITSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);$/;"	t
PFNGLWAITSYNCPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITVKSEMAPHORENVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLWEIGHTBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPATHSNVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWRECTANGLESEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *box);$/;"	t
PFNGLWRITEMASKEXTPROC	.\include\GL\glext.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNWGLALLOCATEMEMORYNVPROC	.\include\GL\wglext.h	/^typedef void *(WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	t
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	t
PFNWGLBEGINFRAMETRACKINGI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	.\include\GL\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLBINDSWAPBARRIERNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);$/;"	t
PFNWGLBINDTEXIMAGEARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLBINDVIDEOCAPTUREDEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLBINDVIDEODEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);$/;"	t
PFNWGLBINDVIDEOIMAGENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t
PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC	.\include\GL\wglext.h	/^typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNWGLCHOOSEPIXELFORMATARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCHOOSEPIXELFORMATEXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	t
PFNWGLCOPYIMAGESUBDATANVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNWGLCREATEAFFINITYDCNVPROC	.\include\GL\wglext.h	/^typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);$/;"	t
PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC	.\include\GL\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);$/;"	t
PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	.\include\GL\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareContext, const int *attribList);$/;"	t
PFNWGLCREATEBUFFERREGIONARBPROC	.\include\GL\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType);$/;"	t
PFNWGLCREATECONTEXTATTRIBSARBPROC	.\include\GL\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, const int *attribList);$/;"	t
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	.\include\GL\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLCREATEIMAGEBUFFERI3DPROC	.\include\GL\wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t
PFNWGLCREATEPBUFFERARBPROC	.\include\GL\wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLCREATEPBUFFEREXTPROC	.\include\GL\wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	t
PFNWGLDELAYBEFORESWAPNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);$/;"	t
PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLDELETEBUFFERREGIONARBPROC	.\include\GL\wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t
PFNWGLDELETEDCNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);$/;"	t
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	.\include\GL\wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t
PFNWGLDESTROYIMAGEBUFFERI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t
PFNWGLDESTROYPBUFFERARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLDESTROYPBUFFEREXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLDISABLEFRAMELOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLDISABLEGENLOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLDXCLOSEDEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);$/;"	t
PFNWGLDXLOCKOBJECTSNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	t
PFNWGLDXOBJECTACCESSNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);$/;"	t
PFNWGLDXOPENDEVICENVPROC	.\include\GL\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void *dxDevice);$/;"	t
PFNWGLDXREGISTEROBJECTNVPROC	.\include\GL\wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);$/;"	t
PFNWGLDXSETRESOURCESHAREHANDLENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle);$/;"	t
PFNWGLDXUNLOCKOBJECTSNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	t
PFNWGLDXUNREGISTEROBJECTNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);$/;"	t
PFNWGLENABLEFRAMELOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t
PFNWGLENABLEGENLOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t
PFNWGLENDFRAMETRACKINGI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t
PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC	.\include\GL\wglext.h	/^typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);$/;"	t
PFNWGLENUMERATEVIDEODEVICESNVPROC	.\include\GL\wglext.h	/^typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);$/;"	t
PFNWGLENUMGPUDEVICESNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);$/;"	t
PFNWGLENUMGPUSFROMAFFINITYDCNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);$/;"	t
PFNWGLENUMGPUSNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);$/;"	t
PFNWGLFREEMEMORYNVPROC	.\include\GL\wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t
PFNWGLGENLOCKSAMPLERATEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t
PFNWGLGENLOCKSOURCEDELAYI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t
PFNWGLGENLOCKSOURCEEDGEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t
PFNWGLGENLOCKSOURCEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t
PFNWGLGETCONTEXTGPUIDAMDPROC	.\include\GL\wglext.h	/^typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC	.\include\GL\wglext.h	/^typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCARBPROC	.\include\GL\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t
PFNWGLGETCURRENTREADDCEXTPROC	.\include\GL\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETEXTENSIONSSTRINGARBPROC	.\include\GL\wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t
PFNWGLGETEXTENSIONSSTRINGEXTPROC	.\include\GL\wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t
PFNWGLGETFRAMEUSAGEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t
PFNWGLGETGAMMATABLEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	t
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piValue);$/;"	t
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t
PFNWGLGETGENLOCKSOURCEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t
PFNWGLGETGPUIDSAMDPROC	.\include\GL\wglext.h	/^typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT *ids);$/;"	t
PFNWGLGETGPUINFOAMDPROC	.\include\GL\wglext.h	/^typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT size, void *data);$/;"	t
PFNWGLGETMSCRATEOMLPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t
PFNWGLGETPBUFFERDCARBPROC	.\include\GL\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t
PFNWGLGETPBUFFERDCEXTPROC	.\include\GL\wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	t
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	t
PFNWGLGETSWAPINTERVALEXTPROC	.\include\GL\wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t
PFNWGLGETSYNCVALUESOMLPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLGETVIDEODEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);$/;"	t
PFNWGLGETVIDEOINFONVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);$/;"	t
PFNWGLISENABLEDFRAMELOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLISENABLEDGENLOCKI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t
PFNWGLJOINSWAPGROUPNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);$/;"	t
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	.\include\GL\wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint length);$/;"	t
PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLMAKECONTEXTCURRENTEXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t
PFNWGLQUERYCURRENTCONTEXTNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYFRAMECOUNTNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint *count);$/;"	t
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t
PFNWGLQUERYFRAMETRACKINGI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	t
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	t
PFNWGLQUERYMAXSWAPGROUPSNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);$/;"	t
PFNWGLQUERYPBUFFERARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYPBUFFEREXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	t
PFNWGLQUERYSWAPGROUPNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint *group, GLuint *barrier);$/;"	t
PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);$/;"	t
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	t
PFNWGLRELEASEPBUFFERDCARBPROC	.\include\GL\wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASEPBUFFERDCEXTPROC	.\include\GL\wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t
PFNWGLRELEASETEXIMAGEARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t
PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	t
PFNWGLRELEASEVIDEODEVICENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);$/;"	t
PFNWGLRELEASEVIDEOIMAGENVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t
PFNWGLRESETFRAMECOUNTNVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);$/;"	t
PFNWGLRESTOREBUFFERREGIONARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	t
PFNWGLSAVEBUFFERREGIONARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, int height);$/;"	t
PFNWGLSENDPBUFFERTOVIDEONVPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);$/;"	t
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETGAMMATABLEI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	t
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int *piValue);$/;"	t
PFNWGLSETPBUFFERATTRIBARBPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	t
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t
PFNWGLSWAPBUFFERSMSCOMLPROC	.\include\GL\wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLSWAPINTERVALEXTPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	.\include\GL\wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	t
PFNWGLWAITFORMSCOMLPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PFNWGLWAITFORSBCOMLPROC	.\include\GL\wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	t
PGPU_DEVICE	.\include\GL\wglext.h	/^typedef struct _GPU_DEVICE *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE
PI	.\src\Core\Math\Math.h	3;"	d
PORT_ANY	.\src\Core\Net\IpAddress.h	4;"	d
Packet	.\src\Core\Net\Packet.h	/^struct Packet$/;"	s
Packet::id	.\src\Core\Net\Packet.h	/^	u32 id : 28;$/;"	m	struct:Packet	access:public
Packet::reliable	.\src\Core\Net\Packet.h	/^	u32 reliable : 1;$/;"	m	struct:Packet	access:public
Packet::size	.\src\Core\Net\Packet.h	/^	u32 size : 32;$/;"	m	struct:Packet	access:public
Packet::type	.\src\Core\Net\Packet.h	/^	Packet_Type type : 3;$/;"	m	struct:Packet	access:public
Packet_Block	.\src\Core\Net\PacketList.h	/^struct Packet_Block$/;"	s
Packet_Block::next	.\src\Core\Net\PacketList.h	/^	Packet_Block* next;$/;"	m	struct:Packet_Block	access:public
Packet_Block::packet	.\src\Core\Net\PacketList.h	/^	Packet* packet;$/;"	m	struct:Packet_Block	access:public
Packet_Block::prev	.\src\Core\Net\PacketList.h	/^	Packet_Block* prev;$/;"	m	struct:Packet_Block	access:public
Packet_Block::resend_count	.\src\Core\Net\PacketList.h	/^	int resend_count = 0;$/;"	m	struct:Packet_Block	access:public
Packet_Block::resend_time	.\src\Core\Net\PacketList.h	/^	float resend_time = 0.f;$/;"	m	struct:Packet_Block	access:public
Packet_List	.\src\Core\Net\PacketList.h	/^struct Packet_List$/;"	s
Packet_List::first	.\src\Core\Net\PacketList.h	/^	Packet_Block* first = nullptr;$/;"	m	struct:Packet_List	access:public
Packet_List::last	.\src\Core\Net\PacketList.h	/^	Packet_Block* last = nullptr;$/;"	m	struct:Packet_List	access:public
Packet_Type	.\src\Core\Net\Packet.h	/^enum class Packet_Type : u32$/;"	c	inherits:u32
Packet_Type::Ack	.\src\Core\Net\Packet.h	/^	Ack,$/;"	m	class:Packet_Type	access:private
Packet_Type::Connect	.\src\Core\Net\Packet.h	/^	Connect,$/;"	m	class:Packet_Type	access:private
Packet_Type::Handshake	.\src\Core\Net\Packet.h	/^	Handshake,$/;"	m	class:Packet_Type	access:private
Packet_Type::Invalid	.\src\Core\Net\Packet.h	/^	Invalid,$/;"	m	class:Packet_Type	access:private
Packet_Type::Ping	.\src\Core\Net\Packet.h	/^	Ping,$/;"	m	class:Packet_Type	access:private
Packet_Type::Pong	.\src\Core\Net\Packet.h	/^	Pong,$/;"	m	class:Packet_Type	access:private
Packet_Type::Shutdown	.\src\Core\Net\Packet.h	/^	Shutdown,$/;"	m	class:Packet_Type	access:private
Packet_Type::User	.\src\Core\Net\Packet.h	/^	User,$/;"	m	class:Packet_Type	access:private
PageDown	.\src\Core\Input\Key.h	/^	PageDown,$/;"	m	class:Key	access:private
PageUp	.\src\Core\Input\Key.h	/^	PageUp,$/;"	m	class:Key	access:private
Path_Type	.\src\Core\OS\Path.h	/^enum class Path_Type$/;"	c
Path_Type::File	.\src\Core\OS\Path.h	/^	File,$/;"	m	class:Path_Type	access:private
Pending	.\src\Runtime\Online\Client.h	/^	Pending,$/;"	m	class:Client_Connection_State	access:private
PendingAccept	.\src\Core\Net\Connection.h	/^	PendingAccept,$/;"	m	class:Connection_State	access:private
PendingConnect	.\src\Core\Net\Connection.h	/^	PendingConnect,$/;"	m	class:Connection_State	access:private
Pending_In	.\src\Runtime\Online\Channel.h	/^	Pending_In,$/;"	m	class:Channel_State	access:private
Pending_Out	.\src\Runtime\Online\Channel.h	/^	Pending_Out,$/;"	m	class:Channel_State	access:private
Period	.\src\Core\Input\Key.h	/^	Period,$/;"	m	class:Key	access:private
Ping	.\src\Core\Net\Packet.h	/^	Ping,$/;"	m	class:Packet_Type	access:private
Player	.\src\Runtime\Player\Player.h	/^struct Player$/;"	s
Player::controlled_unit	.\src\Runtime\Player\Player.h	/^	Unit* controlled_unit = nullptr;$/;"	m	struct:Player	access:public
Player::user	.\src\Runtime\Player\Player.h	/^	Online_User* user = nullptr;$/;"	m	struct:Player	access:public
Player_Add_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Add_Data$/;"	s	namespace:__anon11	file:
Player_Possess_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Possess_Data$/;"	s	namespace:__anon11	file:
Player_Remove_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Remove_Data$/;"	s	namespace:__anon11	file:
Plus	.\src\Core\Input\Key.h	/^	Plus,$/;"	m	class:Key	access:private
Pong	.\src\Core\Net\Packet.h	/^	Pong,$/;"	m	class:Packet_Type	access:private
Projectile	.\src\Runtime\Game\Projectile.h	/^struct Projectile$/;"	s
Projectile::direction	.\src\Runtime\Game\Projectile.h	/^	Vec2 direction;$/;"	m	struct:Projectile	access:public
Projectile::drawable	.\src\Runtime\Game\Projectile.h	/^	Drawable* drawable;$/;"	m	struct:Projectile	access:public
Projectile::id	.\src\Runtime\Game\Projectile.h	/^	u32 id;$/;"	m	struct:Projectile	access:public
Projectile::lifetime	.\src\Runtime\Game\Projectile.h	/^	float lifetime = 5.f;$/;"	m	struct:Projectile	access:public
Projectile::line_drawer	.\src\Runtime\Game\Projectile.h	/^	Line_Drawer* line_drawer;$/;"	m	struct:Projectile	access:public
Projectile::owner	.\src\Runtime\Game\Projectile.h	/^	Unit* owner = nullptr;$/;"	m	struct:Projectile	access:public
Projectile::position	.\src\Runtime\Game\Projectile.h	/^	Vec2 position;$/;"	m	struct:Projectile	access:public
Projectile::size	.\src\Runtime\Game\Projectile.h	/^	float size = 0.3f;$/;"	m	struct:Projectile	access:public
Projectile::speed	.\src\Runtime\Game\Projectile.h	/^	float speed = 95.f;$/;"	m	struct:Projectile	access:public
Q	.\src\Core\Input\Key.h	/^	Q,$/;"	m	class:Key	access:private
Quat	.\src\Core\Math\Quaternion.h	/^	Quat() : x(0.f), y(0.f), z(0.f), w(1.f) {}$/;"	f	struct:Quat	access:public	signature:()
Quat	.\src\Core\Math\Quaternion.h	/^	Quat(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}$/;"	f	struct:Quat	access:public	signature:(float x, float y, float z, float w)
Quat	.\src\Core\Math\Quaternion.h	/^struct Quat$/;"	s
Quat::Quat	.\src\Core\Math\Quaternion.h	/^	Quat() : x(0.f), y(0.f), z(0.f), w(1.f) {}$/;"	f	struct:Quat	access:public	signature:()
Quat::Quat	.\src\Core\Math\Quaternion.h	/^	Quat(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}$/;"	f	struct:Quat	access:public	signature:(float x, float y, float z, float w)
Quat::w	.\src\Core\Math\Quaternion.h	/^	float w;$/;"	m	struct:Quat	access:public
Quat::x	.\src\Core\Math\Quaternion.h	/^	float x;$/;"	m	struct:Quat	access:public
Quat::y	.\src\Core\Math\Quaternion.h	/^	float y;$/;"	m	struct:Quat	access:public
Quat::z	.\src\Core\Math\Quaternion.h	/^	float z;$/;"	m	struct:Quat	access:public
Quat_Identity	.\src\Core\Math\Quaternion.h	/^const Quat Quat_Identity = Quat(0.f, 0.f, 0.f, 1.f);/;"	v
R	.\src\Core\Input\Key.h	/^	R,$/;"	m	class:Key	access:private
RENDER_SHADOW_BUFFER_TEXTURE_INDEX	.\src\Engine\Render\Render.h	4;"	d
RENDER_SHADOW_BUFFER_UNIFORM	.\src\Engine\Render\Render.h	3;"	d
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Close);$/;"	p	struct:Rpc_Channel_Close	access:public	signature:(Rpc::Channel_Close)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Event);$/;"	p	struct:Rpc_Channel_Event	access:public	signature:(Rpc::Channel_Event)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Open);$/;"	p	struct:Rpc_Channel_Open	access:public	signature:(Rpc::Channel_Open)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Local_User);$/;"	p	struct:Rpc_Local_User	access:public	signature:(Rpc::Local_User)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Login);$/;"	p	struct:Rpc_Login	access:public	signature:(Rpc::Login)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::User);$/;"	p	struct:Rpc_User	access:public	signature:(Rpc::User)
RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::User_Destroy);$/;"	p	struct:Rpc_User_Destroy	access:public	signature:(Rpc::User_Destroy)
RPC	.\src\Runtime\Online\Online.h	17;"	d
RUN_LENGTH_BIT	.\src\Core\Import\TGA.cpp	/^const u8 RUN_LENGTH_BIT = 0b1000;$/;"	v
Raw	.\src\Core\Import\Fbx_Data.h	/^	Raw = 'R',$/;"	m	class:Fbx_Property_Type	access:private
Ray	.\src\Core\Math\Ray.h	/^struct Ray$/;"	s
Ray::direction	.\src\Core\Math\Ray.h	/^	Vec3 direction;$/;"	m	struct:Ray	access:public
Ray::origin	.\src\Core\Math\Ray.h	/^	Vec3 origin;$/;"	m	struct:Ray	access:public
Render_State	.\src\Engine\Render\Render.h	/^struct Render_State$/;"	s
Render_State::light	.\src\Engine\Render\Render.h	/^	Mat4 light;$/;"	m	struct:Render_State	access:public
Render_State::projection	.\src\Engine\Render\Render.h	/^	Mat4 projection;$/;"	m	struct:Render_State	access:public
Render_State::view	.\src\Engine\Render\Render.h	/^	Mat4 view;$/;"	m	struct:Render_State	access:public
Render_State::view_projection	.\src\Engine\Render\Render.h	/^	Mat4 view_projection;$/;"	m	struct:Render_State	access:public
Res_Create_Func	.\src\Engine\Resource\Resource.h	/^typedef void (*Res_Create_Func)(Resource* resource);$/;"	t
Res_Destroy_Func	.\src\Engine\Resource\Resource.h	/^typedef void (*Res_Destroy_Func)(Resource* resource);$/;"	t
Res_Reload_Func	.\src\Engine\Resource\Resource.h	/^typedef void (*Res_Reload_Func)(Resource* resource);$/;"	t
Resource	.\src\Engine\Resource\Resource.h	/^struct Resource$/;"	s
Resource::create_func	.\src\Engine\Resource\Resource.h	/^	Res_Create_Func create_func;$/;"	m	struct:Resource	access:public
Resource::dependencies	.\src\Engine\Resource\Resource.h	/^	Resource_List* dependencies = nullptr;$/;"	m	struct:Resource	access:public
Resource::dependent	.\src\Engine\Resource\Resource.h	/^	Resource_List* dependent = nullptr;$/;"	m	struct:Resource	access:public
Resource::destroy_func	.\src\Engine\Resource\Resource.h	/^	Res_Destroy_Func destroy_func;$/;"	m	struct:Resource	access:public
Resource::path	.\src\Engine\Resource\Resource.h	/^	const char* path = nullptr;$/;"	m	struct:Resource	access:public
Resource::path_relative	.\src\Engine\Resource\Resource.h	/^	const char* path_relative = nullptr;$/;"	m	struct:Resource	access:public
Resource::ptr	.\src\Engine\Resource\Resource.h	/^	void* ptr = nullptr;$/;"	m	struct:Resource	access:public
Resource::reload_func	.\src\Engine\Resource\Resource.h	/^	Res_Reload_Func reload_func;$/;"	m	struct:Resource	access:public
Resource_List	.\src\Engine\Resource\ResourceList.h	/^struct Resource_List$/;"	s
Resource_List::next	.\src\Engine\Resource\ResourceList.h	/^	Resource_List* next = nullptr;$/;"	m	struct:Resource_List	access:public
Resource_List::res	.\src\Engine\Resource\ResourceList.h	/^	Resource* res = nullptr;$/;"	m	struct:Resource_List	access:public
Resource_Manager	.\src\Engine\Resource\Resource.h	/^struct Resource_Manager$/;"	s
Resource_Manager::root	.\src\Engine\Resource\Resource.h	/^	Resource_Node* root = nullptr;$/;"	m	struct:Resource_Manager	access:public
Resource_Node	.\src\Engine\Resource\Resource.h	/^struct Resource_Node$/;"	s
Resource_Node::hash	.\src\Engine\Resource\Resource.h	/^	u32 hash;$/;"	m	struct:Resource_Node	access:public
Resource_Node::last_modified	.\src\Engine\Resource\Resource.h	/^	i64 last_modified = -1;$/;"	m	struct:Resource_Node	access:public
Resource_Node::left	.\src\Engine\Resource\Resource.h	/^	Resource_Node* left = nullptr;$/;"	m	struct:Resource_Node	access:public
Resource_Node::resource	.\src\Engine\Resource\Resource.h	/^	Resource resource;$/;"	m	struct:Resource_Node	access:public
Resource_Node::right	.\src\Engine\Resource\Resource.h	/^	Resource_Node* right = nullptr;$/;"	m	struct:Resource_Node	access:public
Right	.\src\Core\Input\Mouse.h	/^	Right,$/;"	m	class:Mouse_Btn	access:private
RightArrow	.\src\Core\Input\Key.h	/^	RightArrow,$/;"	m	class:Key	access:private
RightShift	.\src\Core\Input\Key.h	/^	RightShift,$/;"	m	class:Key	access:private
RightSquareBracket	.\src\Core\Input\Key.h	/^	RightSquareBracket,$/;"	m	class:Key	access:private
Rpc	.\src\Runtime\Online\Online.h	/^enum class Rpc : u8$/;"	c	inherits:u8
Rpc::Channel_Close	.\src\Runtime\Online\Online.h	/^	Channel_Close,$/;"	m	class:Rpc	access:private
Rpc::Channel_Event	.\src\Runtime\Online\Online.h	/^	Channel_Event,$/;"	m	class:Rpc	access:private
Rpc::Channel_Open	.\src\Runtime\Online\Online.h	/^	Channel_Open,$/;"	m	class:Rpc	access:private
Rpc::Local_User	.\src\Runtime\Online\Online.h	/^	Local_User,$/;"	m	class:Rpc	access:private
Rpc::Login	.\src\Runtime\Online\Online.h	/^	Login,$/;"	m	class:Rpc	access:private
Rpc::User	.\src\Runtime\Online\Online.h	/^	User,$/;"	m	class:Rpc	access:private
Rpc::User_Destroy	.\src\Runtime\Online\Online.h	/^	User_Destroy,$/;"	m	class:Rpc	access:private
Rpc_Channel_Close	.\src\Runtime\Online\Online.h	/^struct Rpc_Channel_Close$/;"	s
Rpc_Channel_Close::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Close);$/;"	p	struct:Rpc_Channel_Close	access:public	signature:(Rpc::Channel_Close)
Rpc_Channel_Close::id	.\src\Runtime\Online\Online.h	/^	Channel_Id id;$/;"	m	struct:Rpc_Channel_Close	access:public
Rpc_Channel_Event	.\src\Runtime\Online\Online.h	/^struct Rpc_Channel_Event$/;"	s
Rpc_Channel_Event::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Event);$/;"	p	struct:Rpc_Channel_Event	access:public	signature:(Rpc::Channel_Event)
Rpc_Channel_Event::channel_id	.\src\Runtime\Online\Online.h	/^	Channel_Id channel_id;$/;"	m	struct:Rpc_Channel_Event	access:public
Rpc_Channel_Event::event_id	.\src\Runtime\Online\Online.h	/^	u8 event_id;$/;"	m	struct:Rpc_Channel_Event	access:public
Rpc_Channel_Open	.\src\Runtime\Online\Online.h	/^struct Rpc_Channel_Open$/;"	s
Rpc_Channel_Open::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Channel_Open);$/;"	p	struct:Rpc_Channel_Open	access:public	signature:(Rpc::Channel_Open)
Rpc_Channel_Open::id	.\src\Runtime\Online\Online.h	/^	Channel_Id id;$/;"	m	struct:Rpc_Channel_Open	access:public
Rpc_Local_User	.\src\Runtime\Online\Online.h	/^struct Rpc_Local_User$/;"	s
Rpc_Local_User::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Local_User);$/;"	p	struct:Rpc_Local_User	access:public	signature:(Rpc::Local_User)
Rpc_Local_User::user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_Local_User	access:public
Rpc_Login	.\src\Runtime\Online\Online.h	/^struct Rpc_Login$/;"	s
Rpc_Login::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::Login);$/;"	p	struct:Rpc_Login	access:public	signature:(Rpc::Login)
Rpc_Login::name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Rpc_Login	access:public
Rpc_User	.\src\Runtime\Online\Online.h	/^struct Rpc_User$/;"	s
Rpc_User::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::User);$/;"	p	struct:Rpc_User	access:public	signature:(Rpc::User)
Rpc_User::name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Rpc_User	access:public
Rpc_User::user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_User	access:public
Rpc_User_Destroy	.\src\Runtime\Online\Online.h	/^struct Rpc_User_Destroy$/;"	s
Rpc_User_Destroy::RPC	.\src\Runtime\Online\Online.h	/^	RPC(Rpc::User_Destroy);$/;"	p	struct:Rpc_User_Destroy	access:public	signature:(Rpc::User_Destroy)
Rpc_User_Destroy::user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_User_Destroy	access:public
S	.\src\Core\Input\Key.h	/^	S,$/;"	m	class:Key	access:private
SERVER_MAX_USER	.\src\Runtime\Online\Server.h	4;"	d
SLASH	.\src\Core\OS\Path.cpp	7;"	d	file:
SPLIST_FOREACH	.\src\Core\Container\SparseList.h	125;"	d
Scene	.\src\Runtime\Game\Scene.h	/^struct Scene$/;"	s
Scene::camera	.\src\Runtime\Game\Scene.h	/^	Camera camera;$/;"	m	struct:Scene	access:public
Scene::floor	.\src\Runtime\Game\Scene.h	/^	Drawable* floor;$/;"	m	struct:Scene	access:public
Scene::projectiles	.\src\Runtime\Game\Scene.h	/^	Sparse_List<Projectile> projectiles;$/;"	m	struct:Scene	access:public
Scene::units	.\src\Runtime\Game\Scene.h	/^	Unit units[MAX_UNITS];$/;"	m	struct:Scene	access:public
ScrollLock	.\src\Core\Input\Key.h	/^	ScrollLock,$/;"	m	class:Key	access:private
Semicolon	.\src\Core\Input\Key.h	/^	Semicolon,$/;"	m	class:Key	access:private
Server	.\src\Runtime\Online\Server.h	/^struct Server$/;"	s
Server::users	.\src\Runtime\Online\Server.h	/^	Online_User users[SERVER_MAX_USER];$/;"	m	struct:Server	access:public
Set_Position_Data	.\src\Runtime\Unit\Unit.cpp	/^	struct Set_Position_Data$/;"	s	namespace:__anon12	file:
Shader	.\src\Engine\Graphics\Material.h	/^struct Shader$/;"	s
Shader::handle	.\src\Engine\Graphics\Material.h	/^	GLuint handle;$/;"	m	struct:Shader	access:public
Short	.\src\Core\Import\Fbx_Data.h	/^	Short = 'Y',$/;"	m	class:Fbx_Property_Type	access:private
Shutdown	.\src\Core\Net\Packet.h	/^	Shutdown,$/;"	m	class:Packet_Type	access:private
SingleQuote	.\src\Core\Input\Key.h	/^	SingleQuote,$/;"	m	class:Key	access:private
Socket	.\src\Core\Net\Socket.h	/^struct Socket$/;"	s
Socket::handle	.\src\Core\Net\Socket.h	/^	SOCKET handle;$/;"	m	struct:Socket	access:public
Socket_Type	.\src\Core\Net\Socket.h	/^enum class Socket_Type : u8$/;"	c	inherits:u8
Socket_Type::TCP	.\src\Core\Net\Socket.h	/^	TCP,$/;"	m	class:Socket_Type	access:private
Spacebar	.\src\Core\Input\Key.h	/^	Spacebar,$/;"	m	class:Key	access:private
Sparse_List	.\src\Core\Container\SparseList.h	/^struct Sparse_List$/;"	s
Sparse_List::count	.\src\Core\Container\SparseList.h	/^	u32 count = 0;$/;"	m	struct:Sparse_List	access:public
Sparse_List::far_ptr	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* far_ptr = nullptr;$/;"	m	struct:Sparse_List	access:public
Sparse_List::list	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* list = nullptr;$/;"	m	struct:Sparse_List	access:public
Sparse_List::near_ptr	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* near_ptr = nullptr;$/;"	m	struct:Sparse_List	access:public
Sparse_List::size	.\src\Core\Container\SparseList.h	/^	u32 size = 0;$/;"	m	struct:Sparse_List	access:public
Sparse_List_Entry	.\src\Core\Container\SparseList.h	/^struct Sparse_List_Entry$/;"	s
Sparse_List_Entry::active	.\src\Core\Container\SparseList.h	/^	bool active = false;$/;"	m	struct:Sparse_List_Entry	access:public
Sparse_List_Entry::item	.\src\Core\Container\SparseList.h	/^	T item;$/;"	m	struct:Sparse_List_Entry	access:public
Spawn_Unit_Data	.\src\Runtime\Game\Game.cpp	/^	struct Spawn_Unit_Data$/;"	s	namespace:__anon11	file:
Sprite_Sheet	.\src\Engine\Graphics\SpriteSheet.h	/^struct Sprite_Sheet$/;"	s
Sprite_Sheet::padding	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 padding;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::texture	.\src\Engine\Graphics\SpriteSheet.h	/^	const Texture* texture;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_aspect	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_aspect;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_height	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 tile_height;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_height_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_height_uv;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_padding_x_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_padding_x_uv;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_padding_y_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_padding_y_uv;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_width	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 tile_width;$/;"	m	struct:Sprite_Sheet	access:public
Sprite_Sheet::tile_width_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_width_uv;$/;"	m	struct:Sprite_Sheet	access:public
State	.\src\Core\Net\Connection.h	/^	State,$/;"	m	class:Connection_Lock	access:private
String	.\src\Core\Import\Fbx_Data.h	/^	String = 'S',$/;"	m	class:Fbx_Property_Type	access:private
T	.\src\Core\Input\Key.h	/^	T,$/;"	m	class:Key	access:private
TAU	.\src\Core\Math\Math.h	5;"	d
TCP	.\src\Core\Net\Socket.h	/^	TCP,$/;"	m	class:Socket_Type	access:private
TOKEN_All	.\src\Core\Import\Dat.cpp	/^	TOKEN_All				= 0xFFFFFFFF$/;"	e	enum:Token	file:
TOKEN_ArrayClose	.\src\Core\Import\Dat.cpp	/^	TOKEN_ArrayClose		= 1 << 10,$/;"	e	enum:Token	file:
TOKEN_ArrayOpen	.\src\Core\Import\Dat.cpp	/^	TOKEN_ArrayOpen			= 1 << 9,$/;"	e	enum:Token	file:
TOKEN_ArraySeparator	.\src\Core\Import\Dat.cpp	/^	TOKEN_ArraySeparator	= 1 << 11,$/;"	e	enum:Token	file:
TOKEN_Boolean	.\src\Core\Import\Dat.cpp	/^	TOKEN_Boolean			= 1 << 12,$/;"	e	enum:Token	file:
TOKEN_Comment	.\src\Core\Import\Dat.cpp	/^	TOKEN_Comment			= 1 << 13,$/;"	e	enum:Token	file:
TOKEN_Eof	.\src\Core\Import\Dat.cpp	/^	TOKEN_Eof				= 1 << 6,$/;"	e	enum:Token	file:
TOKEN_Key	.\src\Core\Import\Dat.cpp	/^	TOKEN_Key				= 1 << 1,$/;"	e	enum:Token	file:
TOKEN_KeySeparator	.\src\Core\Import\Dat.cpp	/^	TOKEN_KeySeparator		= 1 << 2,$/;"	e	enum:Token	file:
TOKEN_NewLine	.\src\Core\Import\Dat.cpp	/^	TOKEN_NewLine			= 1 << 5,$/;"	e	enum:Token	file:
TOKEN_None	.\src\Core\Import\Dat.cpp	/^	TOKEN_None				= 1 << 0,$/;"	e	enum:Token	file:
TOKEN_Number	.\src\Core\Import\Dat.cpp	/^	TOKEN_Number			= 1 << 3,$/;"	e	enum:Token	file:
TOKEN_ObjectClose	.\src\Core\Import\Dat.cpp	/^	TOKEN_ObjectClose		= 1 << 8,$/;"	e	enum:Token	file:
TOKEN_ObjectOpen	.\src\Core\Import\Dat.cpp	/^	TOKEN_ObjectOpen		= 1 << 7,$/;"	e	enum:Token	file:
TOKEN_String	.\src\Core\Import\Dat.cpp	/^	TOKEN_String			= 1 << 4,$/;"	e	enum:Token	file:
TOKEN_Value	.\src\Core\Import\Dat.cpp	/^	TOKEN_Value				= TOKEN_Number | TOKEN_String | TOKEN_Boolean,$/;"	e	enum:Token	file:
Tab	.\src\Core\Input\Key.h	/^	Tab,$/;"	m	class:Key	access:private
Texture	.\src\Engine\Graphics\Texture.h	/^struct Texture$/;"	s
Texture::handle	.\src\Engine\Graphics\Texture.h	/^	GLuint handle;$/;"	m	struct:Texture	access:public
Texture::height	.\src\Engine\Graphics\Texture.h	/^	u32 height;$/;"	m	struct:Texture	access:public
Texture::width	.\src\Engine\Graphics\Texture.h	/^	u32 width;$/;"	m	struct:Texture	access:public
Tga_Color_Map	.\src\Core\Import\TGA.cpp	/^struct Tga_Color_Map$/;"	s	file:
Tga_Color_Map::bits_per_pixel	.\src\Core\Import\TGA.cpp	/^	u8 bits_per_pixel;$/;"	m	struct:Tga_Color_Map	file:	access:public
Tga_Color_Map::first_index	.\src\Core\Import\TGA.cpp	/^	u16 first_index;$/;"	m	struct:Tga_Color_Map	file:	access:public
Tga_Color_Map::length	.\src\Core\Import\TGA.cpp	/^	u16 length;$/;"	m	struct:Tga_Color_Map	file:	access:public
Tga_File	.\src\Core\Import\TGA.h	/^struct Tga_File$/;"	s
Tga_File::data	.\src\Core\Import\TGA.h	/^	void* data;$/;"	m	struct:Tga_File	access:public
Tga_File::height	.\src\Core\Import\TGA.h	/^	u16 height;$/;"	m	struct:Tga_File	access:public
Tga_File::width	.\src\Core\Import\TGA.h	/^	u16 width;$/;"	m	struct:Tga_File	access:public
Tga_Header	.\src\Core\Import\TGA.cpp	/^struct Tga_Header$/;"	s	file:
Tga_Header::color_map_type	.\src\Core\Import\TGA.cpp	/^	u8 color_map_type;$/;"	m	struct:Tga_Header	file:	access:public
Tga_Header::id_length	.\src\Core\Import\TGA.cpp	/^	u8 id_length;$/;"	m	struct:Tga_Header	file:	access:public
Tga_Header::image_type	.\src\Core\Import\TGA.cpp	/^	u8 image_type;$/;"	m	struct:Tga_Header	file:	access:public
Tga_Image_Spec	.\src\Core\Import\TGA.cpp	/^struct Tga_Image_Spec$/;"	s	file:
Tga_Image_Spec::height	.\src\Core\Import\TGA.cpp	/^	u16 height;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Spec::image_descriptor	.\src\Core\Import\TGA.cpp	/^	u8 image_descriptor;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Spec::pixel_depth	.\src\Core\Import\TGA.cpp	/^	u8 pixel_depth;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Spec::width	.\src\Core\Import\TGA.cpp	/^	u16 width;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Spec::x_origin	.\src\Core\Import\TGA.cpp	/^	u16 x_origin;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Spec::y_origin	.\src\Core\Import\TGA.cpp	/^	u16 y_origin;$/;"	m	struct:Tga_Image_Spec	file:	access:public
Tga_Image_Type	.\src\Core\Import\TGA.cpp	/^enum class Tga_Image_Type : u8$/;"	c	file:	inherits:u8
Tga_Image_Type::ColorMapped	.\src\Core\Import\TGA.cpp	/^	ColorMapped,$/;"	m	class:Tga_Image_Type	file:	access:private
Tga_Image_Type::NoImageData	.\src\Core\Import\TGA.cpp	/^	NoImageData,$/;"	m	class:Tga_Image_Type	file:	access:private
Tga_Image_Type::TrueColor	.\src\Core\Import\TGA.cpp	/^	TrueColor,$/;"	m	class:Tga_Image_Type	file:	access:private
Thread	.\src\Core\Thread\Thread.h	/^struct Thread$/;"	s
Thread::func	.\src\Core\Thread\Thread.h	/^	Thread_Func func;$/;"	m	struct:Thread	access:public
Thread::handle	.\src\Core\Thread\Thread.h	/^	HANDLE handle;$/;"	m	struct:Thread	access:public
Thread::params	.\src\Core\Thread\Thread.h	/^	void* params;$/;"	m	struct:Thread	access:public
Thread_Func	.\src\Core\Thread\Thread.h	/^typedef void (*Thread_Func)(void*);$/;"	t
Tick	.\src\Engine\Tick\Tick.cpp	/^struct Tick$/;"	s	file:
Tick::list	.\src\Engine\Tick\Tick.cpp	/^	Sparse_List<Ticker> list;$/;"	m	struct:Tick	file:	access:public
Ticker	.\src\Engine\Tick\Tick.h	/^struct Ticker$/;"	s
Ticker::active	.\src\Engine\Tick\Tick.h	/^	bool active = false;$/;"	m	struct:Ticker	access:public
Ticker::func	.\src\Engine\Tick\Tick.h	/^	tick_func_ptr func = nullptr;$/;"	m	struct:Ticker	access:public
Ticker::user_ptr	.\src\Engine\Tick\Tick.h	/^	void* user_ptr = nullptr;$/;"	m	struct:Ticker	access:public
Tilde	.\src\Core\Input\Key.h	/^	Tilde,$/;"	m	class:Key	access:private
Token	.\src\Core\Import\Dat.cpp	/^enum Token$/;"	g	file:
Transform	.\src\Core\Math\Transform.h	/^struct Transform$/;"	s
Transform::position	.\src\Core\Math\Transform.h	/^	Vec3 position = Vec3_Zero;$/;"	m	struct:Transform	access:public
Transform::rotation	.\src\Core\Math\Transform.h	/^	Quat rotation = Quat_Identity;$/;"	m	struct:Transform	access:public
Transform::scale	.\src\Core\Math\Transform.h	/^	Vec3 scale = Vec3_One;$/;"	m	struct:Transform	access:public
TrueColor	.\src\Core\Import\TGA.cpp	/^	TrueColor,$/;"	m	class:Tga_Image_Type	file:	access:private
U	.\src\Core\Input\Key.h	/^	U,$/;"	m	class:Key	access:private
Unit	.\src\Runtime\Unit\Unit.h	/^struct Unit$/;"	s
Unit::active	.\src\Runtime\Unit\Unit.h	/^	bool active = false;$/;"	m	struct:Unit	access:public
Unit::billboard	.\src\Runtime\Unit\Unit.h	/^	Billboard* billboard = nullptr;$/;"	m	struct:Unit	access:public
Unit::channel	.\src\Runtime\Unit\Unit.h	/^	Channel* channel = nullptr;$/;"	m	struct:Unit	access:public
Unit::id	.\src\Runtime\Unit\Unit.h	/^	u32 id;$/;"	m	struct:Unit	access:public
Unit::move_speed	.\src\Runtime\Unit\Unit.h	/^	float move_speed = 4.f;$/;"	m	struct:Unit	access:public
Unit::position	.\src\Runtime\Unit\Unit.h	/^	Vec2 position;$/;"	m	struct:Unit	access:public
Unit::target_position	.\src\Runtime\Unit\Unit.h	/^	Vec2 target_position;$/;"	m	struct:Unit	access:public
Unit::walk_timer	.\src\Runtime\Unit\Unit.h	/^	float walk_timer = 2.f;$/;"	m	struct:Unit	access:public
UpArrow	.\src\Core\Input\Key.h	/^	UpArrow,$/;"	m	class:Key	access:private
User	.\src\Core\Net\Packet.h	/^	User,$/;"	m	class:Packet_Type	access:private
User	.\src\Runtime\Online\Online.h	/^	User,$/;"	m	class:Rpc	access:private
User_Destroy	.\src\Runtime\Online\Online.h	/^	User_Destroy,$/;"	m	class:Rpc	access:private
V	.\src\Core\Input\Key.h	/^	V,$/;"	m	class:Key	access:private
ValueRaw	.\src\Core\Import\Dat.h	/^	ValueRaw,$/;"	m	class:Dat_Node_Type	access:private
Vec2	.\src\Core\Math\Vector.h	/^	Vec2() : x(0.f), y(0.f) {}$/;"	f	struct:Vec2	access:public	signature:()
Vec2	.\src\Core\Math\Vector.h	/^	Vec2(float v) : x(v), y(v) {}$/;"	f	struct:Vec2	access:public	signature:(float v)
Vec2	.\src\Core\Math\Vector.h	/^	Vec2(float x, float y) : x(x), y(y) {}$/;"	f	struct:Vec2	access:public	signature:(float x, float y)
Vec2	.\src\Core\Math\Vector.h	/^	inline Vec2(const Vec3& v);$/;"	p	struct:Vec2	access:public	signature:(const Vec3& v)
Vec2	.\src\Core\Math\Vector.h	/^	inline Vec2(const Vec4& v);$/;"	p	struct:Vec2	access:public	signature:(const Vec4& v)
Vec2	.\src\Core\Math\Vector.h	/^inline Vec2::Vec2(const Vec3& v) : x(v.x), y(v.y) {}$/;"	f	class:Vec2	signature:(const Vec3& v)
Vec2	.\src\Core\Math\Vector.h	/^inline Vec2::Vec2(const Vec4& v) : x(v.x), y(v.y) {}$/;"	f	class:Vec2	signature:(const Vec4& v)
Vec2	.\src\Core\Math\Vector.h	/^struct Vec2$/;"	s
Vec2::Vec2	.\src\Core\Math\Vector.h	/^	Vec2() : x(0.f), y(0.f) {}$/;"	f	struct:Vec2	access:public	signature:()
Vec2::Vec2	.\src\Core\Math\Vector.h	/^	Vec2(float v) : x(v), y(v) {}$/;"	f	struct:Vec2	access:public	signature:(float v)
Vec2::Vec2	.\src\Core\Math\Vector.h	/^	Vec2(float x, float y) : x(x), y(y) {}$/;"	f	struct:Vec2	access:public	signature:(float x, float y)
Vec2::Vec2	.\src\Core\Math\Vector.h	/^	inline Vec2(const Vec3& v);$/;"	p	struct:Vec2	access:public	signature:(const Vec3& v)
Vec2::Vec2	.\src\Core\Math\Vector.h	/^	inline Vec2(const Vec4& v);$/;"	p	struct:Vec2	access:public	signature:(const Vec4& v)
Vec2::Vec2	.\src\Core\Math\Vector.h	/^inline Vec2::Vec2(const Vec3& v) : x(v.x), y(v.y) {}$/;"	f	class:Vec2	signature:(const Vec3& v)
Vec2::Vec2	.\src\Core\Math\Vector.h	/^inline Vec2::Vec2(const Vec4& v) : x(v.x), y(v.y) {}$/;"	f	class:Vec2	signature:(const Vec4& v)
Vec2::operator =	.\src\Core\Math\Vector.h	/^	Vec2& operator=(const Vec2& other) { x = other.x; y = other.y; return *this; }$/;"	f	struct:Vec2	access:public	signature:(const Vec2& other)
Vec2::operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec2	access:public	signature:(u32 index)
Vec2::x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec2	access:public
Vec2::y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec2	access:public
Vec2_One	.\src\Core\Math\Vector.h	/^const Vec2 Vec2_One = Vec2(1.f, 1.f);$/;"	v
Vec2_X	.\src\Core\Math\Vector.h	/^const Vec2 Vec2_X = Vec2(1.f, 0.f);$/;"	v
Vec2_Y	.\src\Core\Math\Vector.h	/^const Vec2 Vec2_Y = Vec2(0.f, 1.f);$/;"	v
Vec2_Zero	.\src\Core\Math\Vector.h	/^const Vec2 Vec2_Zero = Vec2(0.f, 0.f);$/;"	v
Vec3	.\src\Core\Math\Vector.h	/^	Vec3() : x(0.f), y(0.f), z(0.f) {}$/;"	f	struct:Vec3	access:public	signature:()
Vec3	.\src\Core\Math\Vector.h	/^	Vec3(const Vec2& vec, float z) : x(vec.x), y(vec.y), z(z) {}$/;"	f	struct:Vec3	access:public	signature:(const Vec2& vec, float z)
Vec3	.\src\Core\Math\Vector.h	/^	Vec3(float v) : x(v), y(v), z(v) {}$/;"	f	struct:Vec3	access:public	signature:(float v)
Vec3	.\src\Core\Math\Vector.h	/^	Vec3(float x, float y, float z) : x(x), y(y), z(z) {}$/;"	f	struct:Vec3	access:public	signature:(float x, float y, float z)
Vec3	.\src\Core\Math\Vector.h	/^	inline Vec3(const Vec4& v);$/;"	p	struct:Vec3	access:public	signature:(const Vec4& v)
Vec3	.\src\Core\Math\Vector.h	/^inline Vec3::Vec3(const Vec4& v) : x(v.x), y(v.y), z(v.z) {}$/;"	f	class:Vec3	signature:(const Vec4& v)
Vec3	.\src\Core\Math\Vector.h	/^struct Vec3$/;"	s
Vec3::Vec3	.\src\Core\Math\Vector.h	/^	Vec3() : x(0.f), y(0.f), z(0.f) {}$/;"	f	struct:Vec3	access:public	signature:()
Vec3::Vec3	.\src\Core\Math\Vector.h	/^	Vec3(const Vec2& vec, float z) : x(vec.x), y(vec.y), z(z) {}$/;"	f	struct:Vec3	access:public	signature:(const Vec2& vec, float z)
Vec3::Vec3	.\src\Core\Math\Vector.h	/^	Vec3(float v) : x(v), y(v), z(v) {}$/;"	f	struct:Vec3	access:public	signature:(float v)
Vec3::Vec3	.\src\Core\Math\Vector.h	/^	Vec3(float x, float y, float z) : x(x), y(y), z(z) {}$/;"	f	struct:Vec3	access:public	signature:(float x, float y, float z)
Vec3::Vec3	.\src\Core\Math\Vector.h	/^	inline Vec3(const Vec4& v);$/;"	p	struct:Vec3	access:public	signature:(const Vec4& v)
Vec3::Vec3	.\src\Core\Math\Vector.h	/^inline Vec3::Vec3(const Vec4& v) : x(v.x), y(v.y), z(v.z) {}$/;"	f	class:Vec3	signature:(const Vec4& v)
Vec3::operator =	.\src\Core\Math\Vector.h	/^	Vec3& operator=(const Vec3& other) { x = other.x; y = other.y; z = other.z; return *this; }$/;"	f	struct:Vec3	access:public	signature:(const Vec3& other)
Vec3::operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec3	access:public	signature:(u32 index)
Vec3::x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec3	access:public
Vec3::y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec3	access:public
Vec3::z	.\src\Core\Math\Vector.h	/^	float z;$/;"	m	struct:Vec3	access:public
Vec3_One	.\src\Core\Math\Vector.h	/^const Vec3 Vec3_One = Vec3(1.f, 1.f, 1.f);$/;"	v
Vec3_X	.\src\Core\Math\Vector.h	/^const Vec3 Vec3_X = Vec3(1.f, 0.f, 0.f);$/;"	v
Vec3_Y	.\src\Core\Math\Vector.h	/^const Vec3 Vec3_Y = Vec3(0.f, 1.f, 0.f);$/;"	v
Vec3_Z	.\src\Core\Math\Vector.h	/^const Vec3 Vec3_Z = Vec3(0.f, 0.f, 1.f);$/;"	v
Vec3_Zero	.\src\Core\Math\Vector.h	/^const Vec3 Vec3_Zero = Vec3(0.f, 0.f, 0.f);$/;"	v
Vec4	.\src\Core\Math\Vector.h	/^	Vec4() : x(0.f), y(0.f), z(0.f), w(0.f) {}$/;"	f	struct:Vec4	access:public	signature:()
Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec2& vec, float z, float w) : x(vec.x), y(vec.y), z(z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec2& vec, float z, float w)
Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec3& vec, float w) : x(vec.x), y(vec.y), z(vec.z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec3& vec, float w)
Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec4& v) : x(v.x), y(v.y), z(v.z), w(v.w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec4& v)
Vec4	.\src\Core\Math\Vector.h	/^	Vec4(float v) : x(v), y(v), z(v), w(v) {}$/;"	f	struct:Vec4	access:public	signature:(float v)
Vec4	.\src\Core\Math\Vector.h	/^	Vec4(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(float x, float y, float z, float w)
Vec4	.\src\Core\Math\Vector.h	/^struct Vec4$/;"	s
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4() : x(0.f), y(0.f), z(0.f), w(0.f) {}$/;"	f	struct:Vec4	access:public	signature:()
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec2& vec, float z, float w) : x(vec.x), y(vec.y), z(z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec2& vec, float z, float w)
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec3& vec, float w) : x(vec.x), y(vec.y), z(vec.z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec3& vec, float w)
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4(const Vec4& v) : x(v.x), y(v.y), z(v.z), w(v.w) {}$/;"	f	struct:Vec4	access:public	signature:(const Vec4& v)
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4(float v) : x(v), y(v), z(v), w(v) {}$/;"	f	struct:Vec4	access:public	signature:(float v)
Vec4::Vec4	.\src\Core\Math\Vector.h	/^	Vec4(float x, float y, float z, float w) : x(x), y(y), z(z), w(w) {}$/;"	f	struct:Vec4	access:public	signature:(float x, float y, float z, float w)
Vec4::operator =	.\src\Core\Math\Vector.h	/^	Vec4& operator=(const Vec4& other) { x = other.x; y = other.y; z = other.z; w = other.w; return *this; }$/;"	f	struct:Vec4	access:public	signature:(const Vec4& other)
Vec4::operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec4	access:public	signature:(u32 index)
Vec4::w	.\src\Core\Math\Vector.h	/^	float w;$/;"	m	struct:Vec4	access:public
Vec4::x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec4	access:public
Vec4::y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec4	access:public
Vec4::z	.\src\Core\Math\Vector.h	/^	float z;$/;"	m	struct:Vec4	access:public
Vec4_One	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_One = Vec4(1.f, 1.f, 1.f, 1.f);/;"	v
Vec4_W	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_W = Vec4(0.f, 0.f, 0.f, 1.f);$/;"	v
Vec4_X	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_X = Vec4(1.f, 0.f, 0.f, 0.f);$/;"	v
Vec4_Y	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_Y = Vec4(0.f, 1.f, 0.f, 0.f);$/;"	v
Vec4_Z	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_Z = Vec4(0.f, 0.f, 1.f, 0.f);$/;"	v
Vec4_Zero	.\src\Core\Math\Vector.h	/^const Vec4 Vec4_Zero = Vec4(0.f, 0.f, 0.f, 0.f);$/;"	v
W	.\src\Core\Input\Key.h	/^	W,$/;"	m	class:Key	access:private
WGL_3DFX_multisample	.\include\GL\wglext.h	291;"	d
WGL_3DL_stereo_control	.\include\GL\wglext.h	297;"	d
WGL_ACCELERATION_ARB	.\include\GL\wglext.h	175;"	d
WGL_ACCELERATION_EXT	.\include\GL\wglext.h	449;"	d
WGL_ACCESS_READ_ONLY_NV	.\include\GL\wglext.h	635;"	d
WGL_ACCESS_READ_WRITE_NV	.\include\GL\wglext.h	636;"	d
WGL_ACCESS_WRITE_DISCARD_NV	.\include\GL\wglext.h	637;"	d
WGL_ACCUM_ALPHA_BITS_ARB	.\include\GL\wglext.h	209;"	d
WGL_ACCUM_ALPHA_BITS_EXT	.\include\GL\wglext.h	479;"	d
WGL_ACCUM_BITS_ARB	.\include\GL\wglext.h	205;"	d
WGL_ACCUM_BITS_EXT	.\include\GL\wglext.h	475;"	d
WGL_ACCUM_BLUE_BITS_ARB	.\include\GL\wglext.h	208;"	d
WGL_ACCUM_BLUE_BITS_EXT	.\include\GL\wglext.h	478;"	d
WGL_ACCUM_GREEN_BITS_ARB	.\include\GL\wglext.h	207;"	d
WGL_ACCUM_GREEN_BITS_EXT	.\include\GL\wglext.h	477;"	d
WGL_ACCUM_RED_BITS_ARB	.\include\GL\wglext.h	206;"	d
WGL_ACCUM_RED_BITS_EXT	.\include\GL\wglext.h	476;"	d
WGL_ALPHA_BITS_ARB	.\include\GL\wglext.h	203;"	d
WGL_ALPHA_BITS_EXT	.\include\GL\wglext.h	473;"	d
WGL_ALPHA_SHIFT_ARB	.\include\GL\wglext.h	204;"	d
WGL_ALPHA_SHIFT_EXT	.\include\GL\wglext.h	474;"	d
WGL_AMD_gpu_association	.\include\GL\wglext.h	309;"	d
WGL_ARB_buffer_region	.\include\GL\wglext.h	54;"	d
WGL_ARB_context_flush_control	.\include\GL\wglext.h	72;"	d
WGL_ARB_create_context	.\include\GL\wglext.h	79;"	d
WGL_ARB_create_context_no_error	.\include\GL\wglext.h	94;"	d
WGL_ARB_create_context_profile	.\include\GL\wglext.h	99;"	d
WGL_ARB_create_context_robustness	.\include\GL\wglext.h	107;"	d
WGL_ARB_extensions_string	.\include\GL\wglext.h	115;"	d
WGL_ARB_framebuffer_sRGB	.\include\GL\wglext.h	123;"	d
WGL_ARB_make_current_read	.\include\GL\wglext.h	128;"	d
WGL_ARB_multisample	.\include\GL\wglext.h	140;"	d
WGL_ARB_pbuffer	.\include\GL\wglext.h	146;"	d
WGL_ARB_pixel_format	.\include\GL\wglext.h	171;"	d
WGL_ARB_pixel_format_float	.\include\GL\wglext.h	232;"	d
WGL_ARB_render_texture	.\include\GL\wglext.h	237;"	d
WGL_ARB_robustness_application_isolation	.\include\GL\wglext.h	282;"	d
WGL_ARB_robustness_share_group_isolation	.\include\GL\wglext.h	287;"	d
WGL_ATI_pixel_format_float	.\include\GL\wglext.h	343;"	d
WGL_ATI_render_texture_rectangle	.\include\GL\wglext.h	348;"	d
WGL_AUX0_ARB	.\include\GL\wglext.h	261;"	d
WGL_AUX1_ARB	.\include\GL\wglext.h	262;"	d
WGL_AUX2_ARB	.\include\GL\wglext.h	263;"	d
WGL_AUX3_ARB	.\include\GL\wglext.h	264;"	d
WGL_AUX4_ARB	.\include\GL\wglext.h	265;"	d
WGL_AUX5_ARB	.\include\GL\wglext.h	266;"	d
WGL_AUX6_ARB	.\include\GL\wglext.h	267;"	d
WGL_AUX7_ARB	.\include\GL\wglext.h	268;"	d
WGL_AUX8_ARB	.\include\GL\wglext.h	269;"	d
WGL_AUX9_ARB	.\include\GL\wglext.h	270;"	d
WGL_AUX_BUFFERS_ARB	.\include\GL\wglext.h	212;"	d
WGL_AUX_BUFFERS_EXT	.\include\GL\wglext.h	482;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	.\include\GL\wglext.h	56;"	d
WGL_BACK_LEFT_ARB	.\include\GL\wglext.h	259;"	d
WGL_BACK_RIGHT_ARB	.\include\GL\wglext.h	260;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	.\include\GL\wglext.h	740;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	.\include\GL\wglext.h	741;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	.\include\GL\wglext.h	684;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	.\include\GL\wglext.h	683;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	.\include\GL\wglext.h	682;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	.\include\GL\wglext.h	681;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	.\include\GL\wglext.h	750;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	.\include\GL\wglext.h	749;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	.\include\GL\wglext.h	239;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	.\include\GL\wglext.h	238;"	d
WGL_BIND_TO_VIDEO_RGBA_NV	.\include\GL\wglext.h	805;"	d
WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV	.\include\GL\wglext.h	806;"	d
WGL_BIND_TO_VIDEO_RGB_NV	.\include\GL\wglext.h	804;"	d
WGL_BLUE_BITS_ARB	.\include\GL\wglext.h	201;"	d
WGL_BLUE_BITS_EXT	.\include\GL\wglext.h	471;"	d
WGL_BLUE_SHIFT_ARB	.\include\GL\wglext.h	202;"	d
WGL_BLUE_SHIFT_EXT	.\include\GL\wglext.h	472;"	d
WGL_COLORSPACE_EXT	.\include\GL\wglext.h	354;"	d
WGL_COLORSPACE_LINEAR_EXT	.\include\GL\wglext.h	356;"	d
WGL_COLORSPACE_SRGB_EXT	.\include\GL\wglext.h	355;"	d
WGL_COLOR_BITS_ARB	.\include\GL\wglext.h	196;"	d
WGL_COLOR_BITS_EXT	.\include\GL\wglext.h	466;"	d
WGL_COLOR_SAMPLES_NV	.\include\GL\wglext.h	721;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	.\include\GL\wglext.h	102;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	.\include\GL\wglext.h	101;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	.\include\GL\wglext.h	80;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	.\include\GL\wglext.h	361;"	d
WGL_CONTEXT_ES_PROFILE_BIT_EXT	.\include\GL\wglext.h	366;"	d
WGL_CONTEXT_FLAGS_ARB	.\include\GL\wglext.h	85;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	.\include\GL\wglext.h	81;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	.\include\GL\wglext.h	84;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	.\include\GL\wglext.h	82;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	.\include\GL\wglext.h	83;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	.\include\GL\wglext.h	95;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	.\include\GL\wglext.h	100;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	.\include\GL\wglext.h	73;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	.\include\GL\wglext.h	75;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	.\include\GL\wglext.h	74;"	d
WGL_CONTEXT_RESET_ISOLATION_BIT_ARB	.\include\GL\wglext.h	283;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	.\include\GL\wglext.h	110;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	.\include\GL\wglext.h	108;"	d
WGL_COVERAGE_SAMPLES_NV	.\include\GL\wglext.h	720;"	d
WGL_CUBE_MAP_FACE_ARB	.\include\GL\wglext.h	250;"	d
WGL_DEPTH_BITS_ARB	.\include\GL\wglext.h	210;"	d
WGL_DEPTH_BITS_EXT	.\include\GL\wglext.h	480;"	d
WGL_DEPTH_BUFFER_BIT_ARB	.\include\GL\wglext.h	57;"	d
WGL_DEPTH_COMPONENT_NV	.\include\GL\wglext.h	744;"	d
WGL_DEPTH_FLOAT_EXT	.\include\GL\wglext.h	371;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	.\include\GL\wglext.h	742;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	.\include\GL\wglext.h	522;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	.\include\GL\wglext.h	523;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	.\include\GL\wglext.h	524;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	.\include\GL\wglext.h	525;"	d
WGL_DOUBLE_BUFFER_ARB	.\include\GL\wglext.h	193;"	d
WGL_DOUBLE_BUFFER_EXT	.\include\GL\wglext.h	463;"	d
WGL_DRAW_TO_BITMAP_ARB	.\include\GL\wglext.h	174;"	d
WGL_DRAW_TO_BITMAP_EXT	.\include\GL\wglext.h	448;"	d
WGL_DRAW_TO_PBUFFER_ARB	.\include\GL\wglext.h	148;"	d
WGL_DRAW_TO_PBUFFER_EXT	.\include\GL\wglext.h	421;"	d
WGL_DRAW_TO_WINDOW_ARB	.\include\GL\wglext.h	173;"	d
WGL_DRAW_TO_WINDOW_EXT	.\include\GL\wglext.h	447;"	d
WGL_EXT_colorspace	.\include\GL\wglext.h	353;"	d
WGL_EXT_create_context_es2_profile	.\include\GL\wglext.h	360;"	d
WGL_EXT_create_context_es_profile	.\include\GL\wglext.h	365;"	d
WGL_EXT_depth_float	.\include\GL\wglext.h	370;"	d
WGL_EXT_display_color_table	.\include\GL\wglext.h	375;"	d
WGL_EXT_extensions_string	.\include\GL\wglext.h	389;"	d
WGL_EXT_framebuffer_sRGB	.\include\GL\wglext.h	397;"	d
WGL_EXT_make_current_read	.\include\GL\wglext.h	402;"	d
WGL_EXT_multisample	.\include\GL\wglext.h	413;"	d
WGL_EXT_pbuffer	.\include\GL\wglext.h	419;"	d
WGL_EXT_pixel_format	.\include\GL\wglext.h	445;"	d
WGL_EXT_pixel_format_packed_float	.\include\GL\wglext.h	502;"	d
WGL_EXT_swap_control	.\include\GL\wglext.h	507;"	d
WGL_EXT_swap_control_tear	.\include\GL\wglext.h	517;"	d
WGL_FLOAT_COMPONENTS_NV	.\include\GL\wglext.h	680;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	.\include\GL\wglext.h	124;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT	.\include\GL\wglext.h	398;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	.\include\GL\wglext.h	55;"	d
WGL_FRONT_LEFT_ARB	.\include\GL\wglext.h	257;"	d
WGL_FRONT_RIGHT_ARB	.\include\GL\wglext.h	258;"	d
WGL_FULL_ACCELERATION_ARB	.\include\GL\wglext.h	215;"	d
WGL_FULL_ACCELERATION_EXT	.\include\GL\wglext.h	485;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	.\include\GL\wglext.h	537;"	d
WGL_GAMMA_TABLE_SIZE_I3D	.\include\GL\wglext.h	536;"	d
WGL_GENERIC_ACCELERATION_ARB	.\include\GL\wglext.h	214;"	d
WGL_GENERIC_ACCELERATION_EXT	.\include\GL\wglext.h	484;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	.\include\GL\wglext.h	557;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	.\include\GL\wglext.h	556;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	.\include\GL\wglext.h	560;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	.\include\GL\wglext.h	558;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	.\include\GL\wglext.h	559;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D	.\include\GL\wglext.h	554;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D	.\include\GL\wglext.h	553;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D	.\include\GL\wglext.h	555;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	.\include\GL\wglext.h	552;"	d
WGL_GPU_CLOCK_AMD	.\include\GL\wglext.h	315;"	d
WGL_GPU_FASTEST_TARGET_GPUS_AMD	.\include\GL\wglext.h	313;"	d
WGL_GPU_NUM_PIPES_AMD	.\include\GL\wglext.h	316;"	d
WGL_GPU_NUM_RB_AMD	.\include\GL\wglext.h	318;"	d
WGL_GPU_NUM_SIMD_AMD	.\include\GL\wglext.h	317;"	d
WGL_GPU_NUM_SPI_AMD	.\include\GL\wglext.h	319;"	d
WGL_GPU_OPENGL_VERSION_STRING_AMD	.\include\GL\wglext.h	312;"	d
WGL_GPU_RAM_AMD	.\include\GL\wglext.h	314;"	d
WGL_GPU_RENDERER_STRING_AMD	.\include\GL\wglext.h	311;"	d
WGL_GPU_VENDOR_AMD	.\include\GL\wglext.h	310;"	d
WGL_GREEN_BITS_ARB	.\include\GL\wglext.h	199;"	d
WGL_GREEN_BITS_EXT	.\include\GL\wglext.h	469;"	d
WGL_GREEN_SHIFT_ARB	.\include\GL\wglext.h	200;"	d
WGL_GREEN_SHIFT_EXT	.\include\GL\wglext.h	470;"	d
WGL_I3D_digital_video_control	.\include\GL\wglext.h	521;"	d
WGL_I3D_gamma	.\include\GL\wglext.h	535;"	d
WGL_I3D_genlock	.\include\GL\wglext.h	551;"	d
WGL_I3D_image_buffer	.\include\GL\wglext.h	590;"	d
WGL_I3D_swap_frame_lock	.\include\GL\wglext.h	606;"	d
WGL_I3D_swap_frame_usage	.\include\GL\wglext.h	620;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	.\include\GL\wglext.h	592;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	.\include\GL\wglext.h	591;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	.\include\GL\wglext.h	109;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	.\include\GL\wglext.h	151;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	.\include\GL\wglext.h	424;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	.\include\GL\wglext.h	149;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	.\include\GL\wglext.h	422;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	.\include\GL\wglext.h	150;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	.\include\GL\wglext.h	423;"	d
WGL_MIPMAP_LEVEL_ARB	.\include\GL\wglext.h	249;"	d
WGL_MIPMAP_TEXTURE_ARB	.\include\GL\wglext.h	242;"	d
WGL_NEED_PALETTE_ARB	.\include\GL\wglext.h	176;"	d
WGL_NEED_PALETTE_EXT	.\include\GL\wglext.h	450;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	.\include\GL\wglext.h	177;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	.\include\GL\wglext.h	451;"	d
WGL_NO_ACCELERATION_ARB	.\include\GL\wglext.h	213;"	d
WGL_NO_ACCELERATION_EXT	.\include\GL\wglext.h	483;"	d
WGL_NO_RESET_NOTIFICATION_ARB	.\include\GL\wglext.h	111;"	d
WGL_NO_TEXTURE_ARB	.\include\GL\wglext.h	245;"	d
WGL_NUMBER_OVERLAYS_ARB	.\include\GL\wglext.h	180;"	d
WGL_NUMBER_OVERLAYS_EXT	.\include\GL\wglext.h	454;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	.\include\GL\wglext.h	172;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	.\include\GL\wglext.h	446;"	d
WGL_NUMBER_UNDERLAYS_ARB	.\include\GL\wglext.h	181;"	d
WGL_NUMBER_UNDERLAYS_EXT	.\include\GL\wglext.h	455;"	d
WGL_NUM_VIDEO_CAPTURE_SLOTS_NV	.\include\GL\wglext.h	786;"	d
WGL_NUM_VIDEO_SLOTS_NV	.\include\GL\wglext.h	727;"	d
WGL_NV_DX_interop	.\include\GL\wglext.h	634;"	d
WGL_NV_DX_interop2	.\include\GL\wglext.h	659;"	d
WGL_NV_copy_image	.\include\GL\wglext.h	663;"	d
WGL_NV_delay_before_swap	.\include\GL\wglext.h	671;"	d
WGL_NV_float_buffer	.\include\GL\wglext.h	679;"	d
WGL_NV_gpu_affinity	.\include\GL\wglext.h	692;"	d
WGL_NV_multisample_coverage	.\include\GL\wglext.h	719;"	d
WGL_NV_present_video	.\include\GL\wglext.h	725;"	d
WGL_NV_render_depth_texture	.\include\GL\wglext.h	739;"	d
WGL_NV_render_texture_rectangle	.\include\GL\wglext.h	748;"	d
WGL_NV_swap_group	.\include\GL\wglext.h	755;"	d
WGL_NV_vertex_array_range	.\include\GL\wglext.h	773;"	d
WGL_NV_video_capture	.\include\GL\wglext.h	783;"	d
WGL_NV_video_output	.\include\GL\wglext.h	802;"	d
WGL_OML_sync_control	.\include\GL\wglext.h	834;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	.\include\GL\wglext.h	426;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	.\include\GL\wglext.h	425;"	d
WGL_PBUFFER_HEIGHT_ARB	.\include\GL\wglext.h	154;"	d
WGL_PBUFFER_HEIGHT_EXT	.\include\GL\wglext.h	429;"	d
WGL_PBUFFER_LARGEST_ARB	.\include\GL\wglext.h	152;"	d
WGL_PBUFFER_LARGEST_EXT	.\include\GL\wglext.h	427;"	d
WGL_PBUFFER_LOST_ARB	.\include\GL\wglext.h	155;"	d
WGL_PBUFFER_WIDTH_ARB	.\include\GL\wglext.h	153;"	d
WGL_PBUFFER_WIDTH_EXT	.\include\GL\wglext.h	428;"	d
WGL_PIXEL_TYPE_ARB	.\include\GL\wglext.h	195;"	d
WGL_PIXEL_TYPE_EXT	.\include\GL\wglext.h	465;"	d
WGL_RED_BITS_ARB	.\include\GL\wglext.h	197;"	d
WGL_RED_BITS_EXT	.\include\GL\wglext.h	467;"	d
WGL_RED_SHIFT_ARB	.\include\GL\wglext.h	198;"	d
WGL_RED_SHIFT_EXT	.\include\GL\wglext.h	468;"	d
WGL_SAMPLES_3DFX	.\include\GL\wglext.h	293;"	d
WGL_SAMPLES_ARB	.\include\GL\wglext.h	142;"	d
WGL_SAMPLES_EXT	.\include\GL\wglext.h	415;"	d
WGL_SAMPLE_BUFFERS_3DFX	.\include\GL\wglext.h	292;"	d
WGL_SAMPLE_BUFFERS_ARB	.\include\GL\wglext.h	141;"	d
WGL_SAMPLE_BUFFERS_EXT	.\include\GL\wglext.h	414;"	d
WGL_SHARE_ACCUM_ARB	.\include\GL\wglext.h	190;"	d
WGL_SHARE_ACCUM_EXT	.\include\GL\wglext.h	460;"	d
WGL_SHARE_DEPTH_ARB	.\include\GL\wglext.h	188;"	d
WGL_SHARE_DEPTH_EXT	.\include\GL\wglext.h	458;"	d
WGL_SHARE_STENCIL_ARB	.\include\GL\wglext.h	189;"	d
WGL_SHARE_STENCIL_EXT	.\include\GL\wglext.h	459;"	d
WGL_STENCIL_BITS_ARB	.\include\GL\wglext.h	211;"	d
WGL_STENCIL_BITS_EXT	.\include\GL\wglext.h	481;"	d
WGL_STENCIL_BUFFER_BIT_ARB	.\include\GL\wglext.h	58;"	d
WGL_STEREO_ARB	.\include\GL\wglext.h	194;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	.\include\GL\wglext.h	299;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	.\include\GL\wglext.h	298;"	d
WGL_STEREO_EXT	.\include\GL\wglext.h	464;"	d
WGL_STEREO_POLARITY_INVERT_3DL	.\include\GL\wglext.h	301;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	.\include\GL\wglext.h	300;"	d
WGL_SUPPORT_GDI_ARB	.\include\GL\wglext.h	191;"	d
WGL_SUPPORT_GDI_EXT	.\include\GL\wglext.h	461;"	d
WGL_SUPPORT_OPENGL_ARB	.\include\GL\wglext.h	192;"	d
WGL_SUPPORT_OPENGL_EXT	.\include\GL\wglext.h	462;"	d
WGL_SWAP_COPY_ARB	.\include\GL\wglext.h	217;"	d
WGL_SWAP_COPY_EXT	.\include\GL\wglext.h	487;"	d
WGL_SWAP_EXCHANGE_ARB	.\include\GL\wglext.h	216;"	d
WGL_SWAP_EXCHANGE_EXT	.\include\GL\wglext.h	486;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	.\include\GL\wglext.h	178;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	.\include\GL\wglext.h	452;"	d
WGL_SWAP_METHOD_ARB	.\include\GL\wglext.h	179;"	d
WGL_SWAP_METHOD_EXT	.\include\GL\wglext.h	453;"	d
WGL_SWAP_UNDEFINED_ARB	.\include\GL\wglext.h	218;"	d
WGL_SWAP_UNDEFINED_EXT	.\include\GL\wglext.h	488;"	d
WGL_TEXTURE_1D_ARB	.\include\GL\wglext.h	247;"	d
WGL_TEXTURE_2D_ARB	.\include\GL\wglext.h	248;"	d
WGL_TEXTURE_CUBE_MAP_ARB	.\include\GL\wglext.h	246;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	.\include\GL\wglext.h	252;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	.\include\GL\wglext.h	254;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	.\include\GL\wglext.h	256;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	.\include\GL\wglext.h	251;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	.\include\GL\wglext.h	253;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	.\include\GL\wglext.h	255;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	.\include\GL\wglext.h	743;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	.\include\GL\wglext.h	688;"	d
WGL_TEXTURE_FLOAT_RGB_NV	.\include\GL\wglext.h	687;"	d
WGL_TEXTURE_FLOAT_RG_NV	.\include\GL\wglext.h	686;"	d
WGL_TEXTURE_FLOAT_R_NV	.\include\GL\wglext.h	685;"	d
WGL_TEXTURE_FORMAT_ARB	.\include\GL\wglext.h	240;"	d
WGL_TEXTURE_RECTANGLE_ATI	.\include\GL\wglext.h	349;"	d
WGL_TEXTURE_RECTANGLE_NV	.\include\GL\wglext.h	751;"	d
WGL_TEXTURE_RGBA_ARB	.\include\GL\wglext.h	244;"	d
WGL_TEXTURE_RGB_ARB	.\include\GL\wglext.h	243;"	d
WGL_TEXTURE_TARGET_ARB	.\include\GL\wglext.h	241;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	.\include\GL\wglext.h	186;"	d
WGL_TRANSPARENT_ARB	.\include\GL\wglext.h	182;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	.\include\GL\wglext.h	185;"	d
WGL_TRANSPARENT_EXT	.\include\GL\wglext.h	456;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	.\include\GL\wglext.h	184;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	.\include\GL\wglext.h	187;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	.\include\GL\wglext.h	183;"	d
WGL_TRANSPARENT_VALUE_EXT	.\include\GL\wglext.h	457;"	d
WGL_TYPE_COLORINDEX_ARB	.\include\GL\wglext.h	220;"	d
WGL_TYPE_COLORINDEX_EXT	.\include\GL\wglext.h	490;"	d
WGL_TYPE_RGBA_ARB	.\include\GL\wglext.h	219;"	d
WGL_TYPE_RGBA_EXT	.\include\GL\wglext.h	489;"	d
WGL_TYPE_RGBA_FLOAT_ARB	.\include\GL\wglext.h	233;"	d
WGL_TYPE_RGBA_FLOAT_ATI	.\include\GL\wglext.h	344;"	d
WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT	.\include\GL\wglext.h	503;"	d
WGL_UNIQUE_ID_NV	.\include\GL\wglext.h	785;"	d
WGL_VIDEO_OUT_ALPHA_NV	.\include\GL\wglext.h	808;"	d
WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV	.\include\GL\wglext.h	810;"	d
WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV	.\include\GL\wglext.h	811;"	d
WGL_VIDEO_OUT_COLOR_NV	.\include\GL\wglext.h	807;"	d
WGL_VIDEO_OUT_DEPTH_NV	.\include\GL\wglext.h	809;"	d
WGL_VIDEO_OUT_FIELD_1	.\include\GL\wglext.h	813;"	d
WGL_VIDEO_OUT_FIELD_2	.\include\GL\wglext.h	814;"	d
WGL_VIDEO_OUT_FRAME	.\include\GL\wglext.h	812;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_1_2	.\include\GL\wglext.h	815;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_2_1	.\include\GL\wglext.h	816;"	d
WGL_WGLEXT_VERSION	.\include\GL\wglext.h	42;"	d
WHITESPACE	.\src\Core\Import\Dat.cpp	60;"	d	file:
WHITESPACE	.\src\Core\OS\Path.cpp	9;"	d	file:
WIN32_LEAN_AND_MEAN	.\include\GL\glext.h	39;"	d
WIN32_LEAN_AND_MEAN	.\include\GL\wglext.h	38;"	d
WIN32_LEAN_AND_MEAN	.\src\Core\WinMin.h	13;"	d
WIN32_LEAN_AND_MEAN	.\src\Core\Windows\WinMin.h	13;"	d
Win	.\src\Core\Input\Key.h	/^	Win = 0x5B,$/;"	m	class:Key	access:private
Win_Key_Params	.\src\Core\Context\Context.cpp	/^struct Win_Key_Params$/;"	s	file:
Win_Key_Params::context	.\src\Core\Context\Context.cpp	/^	u32 context		: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::extended	.\src\Core\Context\Context.cpp	/^	u32 extended	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::previous	.\src\Core\Context\Context.cpp	/^	u32 previous	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::repeat	.\src\Core\Context\Context.cpp	/^	u32 repeat		: 16;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::reserved	.\src\Core\Context\Context.cpp	/^	u32 reserved	: 4;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::scancode	.\src\Core\Context\Context.cpp	/^	u32 scancode	: 8;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_Key_Params::transition	.\src\Core\Context\Context.cpp	/^	u32 transition	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
Win_MouseMove_Params	.\src\Core\Context\Context.cpp	/^struct Win_MouseMove_Params$/;"	s	file:
Win_MouseMove_Params::x	.\src\Core\Context\Context.cpp	/^	u16 x;$/;"	m	struct:Win_MouseMove_Params	file:	access:public
Win_MouseMove_Params::y	.\src\Core\Context\Context.cpp	/^	u16 y;$/;"	m	struct:Win_MouseMove_Params	file:	access:public
Win_Size_Params	.\src\Core\Context\Context.cpp	/^struct Win_Size_Params$/;"	s	file:
Win_Size_Params::height	.\src\Core\Context\Context.cpp	/^	u16 height;$/;"	m	struct:Win_Size_Params	file:	access:public
Win_Size_Params::width	.\src\Core\Context\Context.cpp	/^	u16 width;$/;"	m	struct:Win_Size_Params	file:	access:public
Window_Data	.\src\Core\Context\Context.cpp	/^struct Window_Data$/;"	s	file:
Window_Data::context	.\src\Core\Context\Context.cpp	/^	HDC context;$/;"	m	struct:Window_Data	file:	access:public
Window_Data::gl_context	.\src\Core\Context\Context.cpp	/^	HGLRC gl_context;$/;"	m	struct:Window_Data	file:	access:public
Window_Data::handle	.\src\Core\Context\Context.cpp	/^	HWND handle;$/;"	m	struct:Window_Data	file:	access:public
X	.\src\Core\Input\Key.h	/^	X,$/;"	m	class:Key	access:private
X1	.\src\Core\Input\Mouse.h	/^	X1,$/;"	m	class:Mouse_Btn	access:private
X2	.\src\Core\Input\Mouse.h	/^	X2,$/;"	m	class:Mouse_Btn	access:private
Y	.\src\Core\Input\Key.h	/^	Y,$/;"	m	class:Key	access:private
Z	.\src\Core\Input\Key.h	/^	Z,$/;"	m	class:Key	access:private
_Defer	.\src\Core\Defer.h	/^	_Defer() {}$/;"	f	struct:_Defer	access:public	signature:()
_Defer	.\src\Core\Defer.h	/^	_Defer(TFunctor functor) : functor(functor) {}$/;"	f	struct:_Defer	access:public	signature:(TFunctor functor)
_Defer	.\src\Core\Defer.h	/^struct _Defer$/;"	s
_Defer::_Defer	.\src\Core\Defer.h	/^	_Defer() {}$/;"	f	struct:_Defer	access:public	signature:()
_Defer::_Defer	.\src\Core\Defer.h	/^	_Defer(TFunctor functor) : functor(functor) {}$/;"	f	struct:_Defer	access:public	signature:(TFunctor functor)
_Defer::functor	.\src\Core\Defer.h	/^	TFunctor functor;$/;"	m	struct:_Defer	access:public
_Defer::~_Defer	.\src\Core\Defer.h	/^	~_Defer()$/;"	f	struct:_Defer	access:public	signature:()
_GPU_DEVICE	.\include\GL\wglext.h	/^struct _GPU_DEVICE {$/;"	s
_GPU_DEVICE::DeviceName	.\include\GL\wglext.h	/^    CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE	access:public
_GPU_DEVICE::DeviceString	.\include\GL\wglext.h	/^    CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE	access:public
_GPU_DEVICE::Flags	.\include\GL\wglext.h	/^    DWORD  Flags;$/;"	m	struct:_GPU_DEVICE	access:public
_GPU_DEVICE::cb	.\include\GL\wglext.h	/^    DWORD  cb;$/;"	m	struct:_GPU_DEVICE	access:public
_GPU_DEVICE::rcVirtualScreen	.\include\GL\wglext.h	/^    RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE	access:public
__anon10::global_state	.\src\Engine\Render\Render.cpp	/^	Render_State global_state;$/;"	m	namespace:__anon10	file:
__anon10::scale_buffer	.\src\Engine\Render\Render.cpp	/^	Frame_Buffer scale_buffer;$/;"	m	namespace:__anon10	file:
__anon10::shadow_buffer	.\src\Engine\Render\Render.cpp	/^	Frame_Buffer shadow_buffer;$/;"	m	namespace:__anon10	file:
__anon11::Destroy_Unit_Data	.\src\Runtime\Game\Game.cpp	/^	struct Destroy_Unit_Data$/;"	s	namespace:__anon11	file:
__anon11::Destroy_Unit_Data::id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Destroy_Unit_Data	file:	access:public
__anon11::EVENT_Destroy_Unit	.\src\Runtime\Game\Game.cpp	/^		EVENT_Destroy_Unit,$/;"	e	enum:__anon11::Events	file:
__anon11::EVENT_Spawn_Unit	.\src\Runtime\Game\Game.cpp	/^		EVENT_Spawn_Unit,$/;"	e	enum:__anon11::Events	file:
__anon11::Events	.\src\Runtime\Game\Game.cpp	/^	enum Events$/;"	g	namespace:__anon11	file:
__anon11::Player_Add_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Add_Data$/;"	s	namespace:__anon11	file:
__anon11::Player_Add_Data::id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Player_Add_Data	file:	access:public
__anon11::Player_Possess_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Possess_Data$/;"	s	namespace:__anon11	file:
__anon11::Player_Possess_Data::player_id	.\src\Runtime\Game\Game.cpp	/^		u32 player_id;$/;"	m	struct:__anon11::Player_Possess_Data	file:	access:public
__anon11::Player_Possess_Data::unit_id	.\src\Runtime\Game\Game.cpp	/^		u32 unit_id;$/;"	m	struct:__anon11::Player_Possess_Data	file:	access:public
__anon11::Player_Remove_Data	.\src\Runtime\Game\Game.cpp	/^	struct Player_Remove_Data$/;"	s	namespace:__anon11	file:
__anon11::Player_Remove_Data::id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Player_Remove_Data	file:	access:public
__anon11::Spawn_Unit_Data	.\src\Runtime\Game\Game.cpp	/^	struct Spawn_Unit_Data$/;"	s	namespace:__anon11	file:
__anon11::Spawn_Unit_Data::id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Spawn_Unit_Data	file:	access:public
__anon11::Spawn_Unit_Data::position	.\src\Runtime\Game\Game.cpp	/^		Vec2 position;$/;"	m	struct:__anon11::Spawn_Unit_Data	file:	access:public
__anon11::ev_destroy_unit	.\src\Runtime\Game\Game.cpp	/^	void ev_destroy_unit(Game* game, Destroy_Unit_Data* data)$/;"	f	namespace:__anon11	signature:(Game* game, Destroy_Unit_Data* data)
__anon11::ev_spawn_unit	.\src\Runtime\Game\Game.cpp	/^	void ev_spawn_unit(Game* game, Spawn_Unit_Data* data)$/;"	f	namespace:__anon11	signature:(Game* game, Spawn_Unit_Data* data)
__anon12::EVENT_Set_Position	.\src\Runtime\Unit\Unit.cpp	/^		EVENT_Set_Position,$/;"	e	enum:__anon12::Event	file:
__anon12::Event	.\src\Runtime\Unit\Unit.cpp	/^	enum Event$/;"	g	namespace:__anon12	file:
__anon12::Set_Position_Data	.\src\Runtime\Unit\Unit.cpp	/^	struct Set_Position_Data$/;"	s	namespace:__anon12	file:
__anon12::Set_Position_Data::position	.\src\Runtime\Unit\Unit.cpp	/^		Vec2 position;$/;"	m	struct:__anon12::Set_Position_Data	file:	access:public
__anon12::ev_set_position	.\src\Runtime\Unit\Unit.cpp	/^	void ev_set_position(Unit* unit, Set_Position_Data* data)$/;"	f	namespace:__anon12	signature:(Unit* unit, Set_Position_Data* data)
__anon4::prime	.\src\Core\Hash\Hash.cpp	/^	const u32 prime = 0x01000193;$/;"	m	namespace:__anon4	file:
__anon4::seed	.\src\Core\Hash\Hash.cpp	/^	const u32 seed = 0x811C9DC5;$/;"	m	namespace:__anon4	file:
__anon6::get_connection_from_addr	.\src\Core\Net\Net.cpp	/^	Connection* get_connection_from_addr(const Ip_Address& addr)$/;"	f	namespace:__anon6	signature:(const Ip_Address& addr)
__anon6::winsock_init	.\src\Core\Net\Net.cpp	/^	bool winsock_init = false;$/;"	m	namespace:__anon6	file:
__anon6::wsa	.\src\Core\Net\Net.cpp	/^	WSADATA wsa;$/;"	m	namespace:__anon6	file:
__anon6::wsa_init	.\src\Core\Net\Net.cpp	/^	void wsa_init()$/;"	f	namespace:__anon6	signature:()
__anon7::clock_frequency	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER clock_frequency;$/;"	m	namespace:__anon7	file:
__anon7::frame_delta	.\src\Core\Time\Time.cpp	/^	float frame_delta = 0;$/;"	m	namespace:__anon7	file:
__anon7::timepoint_init	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER timepoint_init;$/;"	m	namespace:__anon7	file:
__anon7::timepoint_last_frame	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER timepoint_last_frame;$/;"	m	namespace:__anon7	file:
__anon8::billboard_list	.\src\Engine\Render\Billboard.cpp	/^	Sparse_List<Billboard> billboard_list;$/;"	m	namespace:__anon8	file:
__anon8::billboard_material	.\src\Engine\Render\Billboard.cpp	/^	const Material* billboard_material;$/;"	m	namespace:__anon8	file:
__anon8::billboard_mesh	.\src\Engine\Render\Billboard.cpp	/^	const Mesh* billboard_mesh;$/;"	m	namespace:__anon8	file:
__anon9::drawable_list	.\src\Engine\Render\Drawable.cpp	/^	Sparse_List<Drawable> drawable_list;$/;"	m	namespace:__anon9	file:
__gl_glext_h_	.\include\GL\glext.h	2;"	d
__khrplatform_h_	.\include\KHR\khrplatform.h	2;"	d
__wgl_wglext_h_	.\include\GL\wglext.h	2;"	d
a	.\src\Runtime\main.cpp	/^	int a;$/;"	m	class:MyClass	file:	access:private
active	.\src\Core\Container\SparseList.h	/^	bool active = false;$/;"	m	struct:Sparse_List_Entry	access:public
active	.\src\Core\Net\Net.h	/^	bool active = false;$/;"	m	struct:Net_Service	access:public
active	.\src\Engine\Tick\Tick.h	/^	bool active = false;$/;"	m	struct:Ticker	access:public
active	.\src\Runtime\Online\Online.h	/^	bool active = false;$/;"	m	struct:Online_User	access:public
active	.\src\Runtime\Unit\Unit.h	/^	bool active = false;$/;"	m	struct:Unit	access:public
addr	.\src\Core\Net\Connection.h	/^	Ip_Address addr;$/;"	m	struct:Connection_Handle	access:public
addr	.\src\Core\Net\IpAddress.h	/^		u32 addr;$/;"	m	union:Ip_Address::__anon5	access:public
addr_b	.\src\Core\Net\IpAddress.h	/^		u8 addr_b[4];$/;"	m	union:Ip_Address::__anon5	access:public
addr_w	.\src\Core\Net\IpAddress.h	/^		u16 addr_w[2];$/;"	m	union:Ip_Address::__anon5	access:public
advance_buffer	.\src\Core\Import\Dat.cpp	/^bool advance_buffer(u32 count = 1)$/;"	f	signature:(u32 count = 1)
advance_ptr	.\src\Core\Import\Dat.cpp	/^bool advance_ptr(char** ptr, u32 count = 1)$/;"	f	signature:(char** ptr, u32 count = 1)
alloc_buffer	.\src\Core\Memory\Arena.cpp	/^Arena_Buffer* alloc_buffer(u32 size)$/;"	f	signature:(u32 size)
angle_axis	.\src\Core\Math\Quaternion.cpp	/^Quat angle_axis(float angle, const Vec3& axis)$/;"	f	signature:(float angle, const Vec3& axis)
angle_axis	.\src\Core\Math\Quaternion.h	/^Quat angle_axis(float angle, const Vec3& axis);$/;"	p	signature:(float angle, const Vec3& axis)
arena	.\src\Core\Import\Dat.h	/^	Mem_Arena arena;$/;"	m	struct:Dat_Document	access:public
arena_free	.\src\Core\Memory\Arena.cpp	/^void arena_free(Mem_Arena* arena)$/;"	f	signature:(Mem_Arena* arena)
arena_free	.\src\Core\Memory\Arena.h	/^void arena_free(Mem_Arena* arena);/;"	p	signature:(Mem_Arena* arena)
arena_init	.\src\Core\Memory\Arena.cpp	/^void arena_init(Mem_Arena* arena)$/;"	f	signature:(Mem_Arena* arena)
arena_init	.\src\Core\Memory\Arena.h	/^void arena_init(Mem_Arena* arena);$/;"	p	signature:(Mem_Arena* arena)
arena_malloc	.\src\Core\Memory\Arena.cpp	/^void* arena_malloc(Mem_Arena* arena, u32 size)$/;"	f	signature:(Mem_Arena* arena, u32 size)
arena_malloc	.\src\Core\Memory\Arena.h	/^void* arena_malloc(Mem_Arena* arena, u32 size);$/;"	p	signature:(Mem_Arena* arena, u32 size)
arena_malloc_t	.\src\Core\Memory\Arena.h	18;"	d
args	.\src\Core\Args\Args.cpp	/^} args;$/;"	v	typeref:struct:Args
args_get	.\src\Core\Args\Args.cpp	/^const char* args_get(u32 i)$/;"	f	signature:(u32 i)
args_get	.\src\Core\Args\Args.h	/^const char* args_get(u32 i);$/;"	p	signature:(u32 i)
args_num	.\src\Core\Args\Args.cpp	/^u32 args_num()$/;"	f	signature:()
args_num	.\src\Core\Args\Args.h	/^u32 args_num();$/;"	p	signature:()
args_parse	.\src\Core\Args\Args.cpp	/^void args_parse(u32 argc, const char** argv)$/;"	f	signature:(u32 argc, const char** argv)
args_parse	.\src\Core\Args\Args.h	/^void args_parse(u32 argc, const char** argv);/;"	p	signature:(u32 argc, const char** argv)
assert	.\src\Core\Debug\Assert.h	2;"	d
assert_helpers	.\src\Core\Debug\Assert.cpp	/^namespace assert_helpers$/;"	n	file:
assert_helpers	.\src\Core\Debug\Assert.h	/^namespace assert_helpers$/;"	n
assert_helpers::can_debug_break	.\src\Core\Debug\Assert.cpp	/^	bool can_debug_break()$/;"	f	namespace:assert_helpers	signature:()
assert_helpers::can_debug_break	.\src\Core\Debug\Assert.h	/^	bool can_debug_break();$/;"	p	namespace:assert_helpers	signature:()
assert_helpers::error_exit	.\src\Core\Debug\Assert.cpp	/^	void error_exit()$/;"	f	namespace:assert_helpers	signature:()
assert_helpers::error_exit	.\src\Core\Debug\Assert.h	/^	void error_exit();$/;"	p	namespace:assert_helpers	signature:()
assert_helpers::message_box	.\src\Core\Debug\Assert.cpp	/^	void message_box(const char* title, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* title, const char* format, ...)
assert_helpers::message_box	.\src\Core\Debug\Assert.h	/^	void message_box(const char* title, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* title, const char* format, ...)
assert_helpers::trigger_assert	.\src\Core\Debug\Assert.cpp	/^	bool trigger_assert(const char* expr, const char* file, u32 line)$/;"	f	namespace:assert_helpers	signature:(const char* expr, const char* file, u32 line)
assert_helpers::trigger_assert	.\src\Core\Debug\Assert.h	/^	bool trigger_assert(const char* expr, const char* file, u32 line);$/;"	p	namespace:assert_helpers	signature:(const char* expr, const char* file, u32 line)
assert_helpers::trigger_error	.\src\Core\Debug\Assert.cpp	/^	void trigger_error(const char* file, u32 line, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* file, u32 line, const char* format, ...)
assert_helpers::trigger_error	.\src\Core\Debug\Assert.h	/^	void trigger_error(const char* file, u32 line, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* file, u32 line, const char* format, ...)
assert_helpers::trigger_msg_box	.\src\Core\Debug\Assert.cpp	/^	void trigger_msg_box(const char* file, u32 line, const char* title, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* file, u32 line, const char* title, const char* format, ...)
assert_helpers::trigger_msg_box	.\src\Core\Debug\Assert.h	/^	void trigger_msg_box(const char* file, u32 line, const char* title, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* file, u32 line, const char* title, const char* format, ...)
assert_msg	.\src\Core\Debug\Assert.h	3;"	d
b	.\src\Runtime\main.cpp	/^	int b;$/;"	m	class:MyClass	file:	access:private
billboard	.\src\Runtime\Unit\Unit.h	/^	Billboard* billboard = nullptr;$/;"	m	struct:Unit	access:public
billboard_destroy	.\src\Engine\Render\Billboard.cpp	/^void billboard_destroy(Billboard* billboard)$/;"	f	signature:(Billboard* billboard)
billboard_destroy	.\src\Engine\Render\Billboard.h	/^void billboard_destroy(Billboard* billboard);$/;"	p	signature:(Billboard* billboard)
billboard_init	.\src\Engine\Render\Billboard.cpp	/^void billboard_init()$/;"	f	signature:()
billboard_init	.\src\Engine\Render\Billboard.h	/^void billboard_init();$/;"	p	signature:()
billboard_list	.\src\Engine\Render\Billboard.cpp	/^	Sparse_List<Billboard> billboard_list;$/;"	m	namespace:__anon8	file:
billboard_load	.\src\Engine\Render\Billboard.cpp	/^Billboard* billboard_load(const char* sheet_path)$/;"	f	signature:(const char* sheet_path)
billboard_load	.\src\Engine\Render\Billboard.h	/^Billboard* billboard_load(const char* sheet_path);$/;"	p	signature:(const char* sheet_path)
billboard_make	.\src\Engine\Render\Billboard.cpp	/^Billboard* billboard_make(const Sprite_Sheet* sheet)$/;"	f	signature:(const Sprite_Sheet* sheet)
billboard_make	.\src\Engine\Render\Billboard.h	/^Billboard* billboard_make(const Sprite_Sheet* sheet);$/;"	p	signature:(const Sprite_Sheet* sheet)
billboard_material	.\src\Engine\Render\Billboard.cpp	/^	const Material* billboard_material;$/;"	m	namespace:__anon8	file:
billboard_mesh	.\src\Engine\Render\Billboard.cpp	/^	const Mesh* billboard_mesh;$/;"	m	namespace:__anon8	file:
billboard_render	.\src\Engine\Render\Billboard.cpp	/^void billboard_render(const Render_State& state)$/;"	f	signature:(const Render_State& state)
billboard_render	.\src\Engine\Render\Billboard.h	/^void billboard_render(const Render_State& state);/;"	p	signature:(const Render_State& state)
bit	.\src\Core\Compress\Inflate.cpp	/^			u32 bit		: 3;$/;"	m	struct:Inflate_Stream::__anon2::__anon3	file:	access:public
bits_per_pixel	.\src\Core\Import\TGA.cpp	/^	u8 bits_per_pixel;$/;"	m	struct:Tga_Color_Map	file:	access:public
buffer	.\src\Core\Import\Dat.cpp	/^Dat_Buffer buffer;$/;"	v
buffer_ptr	.\src\Core\Import\Dat.cpp	/^char* buffer_ptr()$/;"	f	signature:()
buffer_remaining	.\src\Core\Import\Dat.cpp	/^u32 buffer_remaining()$/;"	f	signature:()
buffer_size	.\src\Core\Memory\Arena.h	/^	u32 buffer_size = 1024;$/;"	m	struct:Mem_Arena	access:public
buffers	.\src\Engine\Graphics\Mesh.h	/^	GLuint buffers[MESH_BUFFER_MAX] = { GL_INVALID_INDEX };$/;"	m	struct:Mesh	access:public
buttons	.\src\Core\Input\Input.h	/^	Action_State buttons[(u32)Mouse_Btn::MAX];$/;"	m	struct:Mouse_State	access:public
byte	.\src\Core\Compress\Inflate.cpp	/^			u32 byte	: 29;$/;"	m	struct:Inflate_Stream::__anon2::__anon3	file:	access:public
camera	.\src\Runtime\Game\Scene.h	/^	Camera camera;$/;"	m	struct:Scene	access:public
camera_forward	.\src\Runtime\Game\Camera.cpp	/^Vec3 camera_forward(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_forward	.\src\Runtime\Game\Camera.h	/^Vec3 camera_forward(Camera* camera);$/;"	p	signature:(Camera* camera)
camera_projection_matrix	.\src\Runtime\Game\Camera.cpp	/^Mat4 camera_projection_matrix(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_projection_matrix	.\src\Runtime\Game\Camera.h	/^Mat4 camera_projection_matrix(Camera* camera);$/;"	p	signature:(Camera* camera)
camera_right	.\src\Runtime\Game\Camera.cpp	/^Vec3 camera_right(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_right	.\src\Runtime\Game\Camera.h	/^Vec3 camera_right(Camera* camera);$/;"	p	signature:(Camera* camera)
camera_update	.\src\Runtime\Game\Camera.cpp	/^void camera_update(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_update	.\src\Runtime\Game\Camera.h	/^void camera_update(Camera* camera);$/;"	p	signature:(Camera* camera)
camera_view_matrix	.\src\Runtime\Game\Camera.cpp	/^Mat4 camera_view_matrix(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_view_matrix	.\src\Runtime\Game\Camera.h	/^Mat4 camera_view_matrix(Camera* camera);$/;"	p	signature:(Camera* camera)
camera_view_projection_matrix	.\src\Runtime\Game\Camera.cpp	/^Mat4 camera_view_projection_matrix(Camera* camera)$/;"	f	signature:(Camera* camera)
camera_view_projection_matrix	.\src\Runtime\Game\Camera.h	/^Mat4 camera_view_projection_matrix(Camera* camera);$/;"	p	signature:(Camera* camera)
can_debug_break	.\src\Core\Debug\Assert.cpp	/^	bool can_debug_break()$/;"	f	namespace:assert_helpers	signature:()
can_debug_break	.\src\Core\Debug\Assert.h	/^	bool can_debug_break();$/;"	p	namespace:assert_helpers	signature:()
cb	.\include\GL\wglext.h	/^    DWORD  cb;$/;"	m	struct:_GPU_DEVICE	access:public
channel	.\src\Runtime\Game\Game.h	/^	Channel* channel;$/;"	m	struct:Game	access:public
channel	.\src\Runtime\Unit\Unit.h	/^	Channel* channel = nullptr;$/;"	m	struct:Unit	access:public
channel_call_event	.\src\Runtime\Online\Channel.cpp	/^void channel_call_event(Channel* channel, u8 id, const void* data)$/;"	f	signature:(Channel* channel, u8 id, const void* data)
channel_call_event	.\src\Runtime\Online\Channel.h	/^void channel_call_event(Channel* channel, u8 id, const void* data);$/;"	p	signature:(Channel* channel, u8 id, const void* data)
channel_close	.\src\Runtime\Online\Channel.cpp	/^void channel_close(Channel* channel)$/;"	f	signature:(Channel* channel)
channel_close	.\src\Runtime\Online\Channel.h	/^void channel_close(Channel* channel);$/;"	p	signature:(Channel* channel)
channel_create	.\src\Runtime\Online\Channel.cpp	/^Channel* channel_create(const Channel_Id& id)$/;"	f	signature:(const Channel_Id& id)
channel_get	.\src\Runtime\Online\Channel.cpp	/^Channel* channel_get(const Channel_Id& id)$/;"	f	signature:(const Channel_Id& id)
channel_id	.\src\Runtime\Online\Online.h	/^	Channel_Id channel_id;$/;"	m	struct:Rpc_Channel_Event	access:public
channel_open	.\src\Runtime\Online\Channel.cpp	/^Channel* channel_open(const char* id_str, u32 id_index, void* user_ptr)$/;"	f	signature:(const char* id_str, u32 id_index, void* user_ptr)
channel_open	.\src\Runtime\Online\Channel.h	/^Channel* channel_open(const char* id_str, u32 id_index, void* user_ptr);$/;"	p	signature:(const char* id_str, u32 id_index, void* user_ptr)
channel_open_remote	.\src\Runtime\Online\Channel.cpp	/^Channel* channel_open_remote(Online_User* user, const Channel_Id& id)$/;"	f	signature:(Online_User* user, const Channel_Id& id)
channel_open_remote	.\src\Runtime\Online\Channel.h	/^Channel* channel_open_remote(Online_User* user, const Channel_Id& id);$/;"	p	signature:(Online_User* user, const Channel_Id& id)
channel_post	.\src\Runtime\Online\Channel.cpp	/^void channel_post(Channel* channel, u8 id, const void* data, u32 size)$/;"	f	signature:(Channel* channel, u8 id, const void* data, u32 size)
channel_post	.\src\Runtime\Online\Channel.h	/^void channel_post(Channel* channel, u8 id, const void* data, u32 size);$/;"	p	signature:(Channel* channel, u8 id, const void* data, u32 size)
channel_post_t	.\src\Runtime\Online\Channel.h	56;"	d
channel_post_to	.\src\Runtime\Online\Channel.cpp	/^void channel_post_to(Channel* channel, Online_User* user, u8 id, const void* data, u32 size)$/;"	f	signature:(Channel* channel, Online_User* user, u8 id, const void* data, u32 size)
channel_post_to	.\src\Runtime\Online\Channel.h	/^void channel_post_to(Channel* channel, Online_User* user, u8 id, const void* data, u32 size);$/;"	p	signature:(Channel* channel, Online_User* user, u8 id, const void* data, u32 size)
channel_post_to_t	.\src\Runtime\Online\Channel.h	58;"	d
channel_recv	.\src\Runtime\Online\Channel.cpp	/^void channel_recv(Online_User* src, const void* data, u32 size)$/;"	f	signature:(Online_User* src, const void* data, u32 size)
channel_recv	.\src\Runtime\Online\Channel.h	/^void channel_recv(Online_User* src, const void* data, u32 size);$/;"	p	signature:(Online_User* src, const void* data, u32 size)
channel_register_event	.\src\Runtime\Online\Channel.h	63;"	d
channel_register_event_int	.\src\Runtime\Online\Channel.cpp	/^void channel_register_event_int(Channel* channel, u32 id, Channel_Event_Type type, bool reliable, Channel_Event_Proc proc)$/;"	f	signature:(Channel* channel, u32 id, Channel_Event_Type type, bool reliable, Channel_Event_Proc proc)
channel_register_event_int	.\src\Runtime\Online\Channel.h	/^void channel_register_event_int(Channel* channel, u32 id, Channel_Event_Type type, bool reliable, Channel_Event_Proc proc);/;"	p	signature:(Channel* channel, u32 id, Channel_Event_Type type, bool reliable, Channel_Event_Proc proc)
channels	.\src\Runtime\Online\Channel.cpp	/^Channel channels[MAX_CHANNELS];$/;"	v
child	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Node* child = nullptr;$/;"	m	struct:Fbx_Node	access:public
client	.\src\Runtime\Online\Client.cpp	/^Client client;$/;"	v
client_channel_open	.\src\Runtime\Online\Client.cpp	/^void client_channel_open(const Rpc_Channel_Open* rpc)$/;"	f	signature:(const Rpc_Channel_Open* rpc)
client_connected	.\src\Runtime\Online\Client.cpp	/^void client_connected(const Connection_Handle& connection)$/;"	f	signature:(const Connection_Handle& connection)
client_disconnected	.\src\Runtime\Online\Client.cpp	/^void client_disconnected(const Connection_Handle& connection)$/;"	f	signature:(const Connection_Handle& connection)
client_get_user	.\src\Runtime\Online\Client.cpp	/^Online_User* client_get_user(u32 id)$/;"	f	signature:(u32 id)
client_get_user	.\src\Runtime\Online\Client.h	/^Online_User* client_get_user(u32 id);$/;"	p	signature:(u32 id)
client_init	.\src\Runtime\Online\Client.cpp	/^void client_init()$/;"	f	signature:()
client_init	.\src\Runtime\Online\Client.h	/^void client_init();$/;"	p	signature:()
client_is_self	.\src\Runtime\Online\Client.cpp	/^bool client_is_self(u32 id)$/;"	f	signature:(u32 id)
client_is_self	.\src\Runtime\Online\Client.h	/^bool client_is_self(u32 id);$/;"	p	signature:(u32 id)
client_local_user	.\src\Runtime\Online\Client.cpp	/^void client_local_user(const Rpc_Local_User* rpc)$/;"	f	signature:(const Rpc_Local_User* rpc)
client_login	.\src\Runtime\Online\Client.cpp	/^void client_login(const char* name)$/;"	f	signature:(const char* name)
client_login	.\src\Runtime\Online\Client.h	/^void client_login(const char* name);$/;"	p	signature:(const char* name)
client_packet	.\src\Runtime\Online\Client.cpp	/^void client_packet(const Connection_Handle& connection, const void* data, u32 size)$/;"	f	signature:(const Connection_Handle& connection, const void* data, u32 size)
client_process_event	.\src\Runtime\Online\Client.cpp	/^void client_process_event(Net_Event* event)$/;"	f	signature:(Net_Event* event)
client_self_id	.\src\Runtime\Online\Client.cpp	/^u32 client_self_id()$/;"	f	signature:()
client_self_id	.\src\Runtime\Online\Client.h	/^u32 client_self_id();$/;"	p	signature:()
client_send_to_server	.\src\Runtime\Online\Client.cpp	/^void client_send_to_server(bool reliable, const void* data, u32 size)$/;"	f	signature:(bool reliable, const void* data, u32 size)
client_send_to_server	.\src\Runtime\Online\Client.h	/^void client_send_to_server(bool reliable, const void* data, u32 size);/;"	p	signature:(bool reliable, const void* data, u32 size)
client_shutdown	.\src\Runtime\Online\Client.cpp	/^void client_shutdown()$/;"	f	signature:()
client_shutdown	.\src\Runtime\Online\Client.h	/^void client_shutdown();$/;"	p	signature:()
client_update	.\src\Runtime\Online\Client.cpp	/^void client_update()$/;"	f	signature:()
client_update	.\src\Runtime\Online\Client.h	/^void client_update();$/;"	p	signature:()
client_update_single	.\src\Runtime\Online\Client.cpp	/^void client_update_single()$/;"	f	signature:()
client_update_single	.\src\Runtime\Online\Client.h	/^void client_update_single();$/;"	p	signature:()
client_user	.\src\Runtime\Online\Client.cpp	/^void client_user(const Rpc_User* rpc)$/;"	f	signature:(const Rpc_User* rpc)
client_user_destroy	.\src\Runtime\Online\Client.cpp	/^void client_user_destroy(const Rpc_User_Destroy* rpc)$/;"	f	signature:(const Rpc_User_Destroy* rpc)
clock_frequency	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER clock_frequency;$/;"	m	namespace:__anon7	file:
color_map_type	.\src\Core\Import\TGA.cpp	/^	u8 color_map_type;$/;"	m	struct:Tga_Header	file:	access:public
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, bool* value)$/;"	f	signature:(const char* name, bool* value)
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, const char** value)$/;"	f	signature:(const char* name, const char** value)
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, i16* value)$/;"	f	signature:(const char* name, i16* value)
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, i32* value)$/;"	f	signature:(const char* name, i32* value)
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, u16* value)$/;"	f	signature:(const char* name, u16* value)
config_get	.\src\Engine\Config\Config.cpp	/^bool config_get(const char* name, u32* value)$/;"	f	signature:(const char* name, u32* value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, bool* value);$/;"	p	signature:(const char* name, bool* value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, const char** value);/;"	p	signature:(const char* name, const char** value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, i16* value);$/;"	p	signature:(const char* name, i16* value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, i32* value);$/;"	p	signature:(const char* name, i32* value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, u16* value);$/;"	p	signature:(const char* name, u16* value)
config_get	.\src\Engine\Config\Config.h	/^bool config_get(const char* name, u32* value);$/;"	p	signature:(const char* name, u32* value)
config_load	.\src\Engine\Config\Config.cpp	/^void config_load(const char* path)$/;"	f	signature:(const char* path)
config_load	.\src\Engine\Config\Config.h	/^void config_load(const char* path);$/;"	p	signature:(const char* path)
connection	.\src\Core\Net\NetEvent.h	/^	Connection_Handle connection;$/;"	m	struct:Net_Event	access:public
connection	.\src\Runtime\Online\Online.h	/^	Connection_Handle connection;$/;"	m	struct:Online_User	access:public
connection_close	.\src\Core\Net\Connection.cpp	/^void connection_close(Connection* connection)$/;"	f	signature:(Connection* connection)
connection_close	.\src\Core\Net\Connection.h	/^void connection_close(Connection* connection);$/;"	p	signature:(Connection* connection)
connection_init	.\src\Core\Net\Connection.cpp	/^void connection_init(Connection* connection, u32 index)$/;"	f	signature:(Connection* connection, u32 index)
connection_init	.\src\Core\Net\Connection.h	/^void connection_init(Connection* connection, u32 index);$/;"	p	signature:(Connection* connection, u32 index)
connection_lock	.\src\Core\Net\Connection.cpp	/^void connection_lock(Connection* connection, Connection_Lock lock)$/;"	f	signature:(Connection* connection, Connection_Lock lock)
connection_lock	.\src\Core\Net\Connection.h	/^void connection_lock(Connection* connection, Connection_Lock lock);$/;"	p	signature:(Connection* connection, Connection_Lock lock)
connection_open	.\src\Core\Net\Connection.cpp	/^void connection_open(Connection* connection, const Ip_Address& addr)$/;"	f	signature:(Connection* connection, const Ip_Address& addr)
connection_open	.\src\Core\Net\Connection.h	/^void connection_open(Connection* connection, const Ip_Address& addr);$/;"	p	signature:(Connection* connection, const Ip_Address& addr)
connection_queue_out	.\src\Core\Net\Connection.cpp	/^void connection_queue_out(Connection* connection, Packet* packet)$/;"	f	signature:(Connection* connection, Packet* packet)
connection_queue_out	.\src\Core\Net\Connection.h	/^void connection_queue_out(Connection* connection, Packet* packet);$/;"	p	signature:(Connection* connection, Packet* packet)
connection_reset	.\src\Core\Net\Connection.cpp	/^void connection_reset(Connection* connection)$/;"	f	signature:(Connection* connection)
connection_reset	.\src\Core\Net\Connection.h	/^void connection_reset(Connection* connection);$/;"	p	signature:(Connection* connection)
connection_shutdown	.\src\Core\Net\Connection.cpp	/^void connection_shutdown(Connection* connection)$/;"	f	signature:(Connection* connection)
connection_shutdown	.\src\Core\Net\Connection.h	/^void connection_shutdown(Connection* connection);$/;"	p	signature:(Connection* connection)
connection_state	.\src\Runtime\Online\Client.h	/^	Client_Connection_State connection_state;$/;"	m	struct:Client	access:public
connection_try_lock	.\src\Core\Net\Connection.cpp	/^bool connection_try_lock(Connection* connection, Connection_Lock lock)$/;"	f	signature:(Connection* connection, Connection_Lock lock)
connection_try_lock	.\src\Core\Net\Connection.h	/^bool connection_try_lock(Connection* connection, Connection_Lock lock);$/;"	p	signature:(Connection* connection, Connection_Lock lock)
connection_unlock	.\src\Core\Net\Connection.cpp	/^void connection_unlock(Connection* connection, Connection_Lock lock)$/;"	f	signature:(Connection* connection, Connection_Lock lock)
connection_unlock	.\src\Core\Net\Connection.h	/^void connection_unlock(Connection* connection, Connection_Lock lock);$/;"	p	signature:(Connection* connection, Connection_Lock lock)
connections	.\src\Core\Net\Net.h	/^	Connection connections[MAX_CONNECTIONS];$/;"	m	struct:Net_Service	access:public
constrain_to_direction	.\src\Core\Math\Vector.h	/^inline Vec3 constrain_to_direction(const Vec3& vec, const Vec3& direction)$/;"	f	signature:(const Vec3& vec, const Vec3& direction)
constrain_to_plane	.\src\Core\Math\Vector.h	/^inline Vec3 constrain_to_plane(const Vec3& vec, const Vec3& plane)$/;"	f	signature:(const Vec3& vec, const Vec3& plane)
context	.\src\Core\Context\Context.cpp	/^	HDC context;$/;"	m	struct:Window_Data	file:	access:public
context	.\src\Core\Context\Context.cpp	/^	u32 context		: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
context	.\src\Core\Context\Context.cpp	/^Context context;$/;"	v
context_begin_frame	.\src\Core\Context\Context.cpp	/^void context_begin_frame()$/;"	f	signature:()
context_begin_frame	.\src\Core\Context\Context.h	/^void context_begin_frame();$/;"	p	signature:()
context_close	.\src\Core\Context\Context.cpp	/^void context_close()$/;"	f	signature:()
context_close	.\src\Core\Context\Context.h	/^void context_close();$/;"	p	signature:()
context_end_frame	.\src\Core\Context\Context.cpp	/^void context_end_frame()$/;"	f	signature:()
context_end_frame	.\src\Core\Context\Context.h	/^void context_end_frame();$/;"	p	signature:()
context_focus	.\src\Core\Context\Context.cpp	/^void context_focus()$/;"	f	signature:()
context_focus	.\src\Core\Context\Context.h	/^void context_focus();/;"	p	signature:()
context_hide_cursor	.\src\Core\Context\Context.cpp	/^void context_hide_cursor()$/;"	f	signature:()
context_hide_cursor	.\src\Core\Context\Context.h	/^void context_hide_cursor();$/;"	p	signature:()
context_lock_cursor	.\src\Core\Context\Context.cpp	/^void context_lock_cursor()$/;"	f	signature:()
context_lock_cursor	.\src\Core\Context\Context.h	/^void context_lock_cursor();$/;"	p	signature:()
context_open	.\src\Core\Context\Context.cpp	/^void context_open(const char* title, u32 x, u32 y, u32 width, u32 height)$/;"	f	signature:(const char* title, u32 x, u32 y, u32 width, u32 height)
context_open	.\src\Core\Context\Context.h	/^void context_open(const char* title, u32 x, u32 y, u32 width, u32 height);$/;"	p	signature:(const char* title, u32 x, u32 y, u32 width, u32 height)
context_set_topmost	.\src\Core\Context\Context.cpp	/^void context_set_topmost(bool topmost)$/;"	f	signature:(bool topmost)
context_set_topmost	.\src\Core\Context\Context.h	/^void context_set_topmost(bool topmost);$/;"	p	signature:(bool topmost)
context_show_cursor	.\src\Core\Context\Context.cpp	/^void context_show_cursor()$/;"	f	signature:()
context_show_cursor	.\src\Core\Context\Context.h	/^void context_show_cursor();$/;"	p	signature:()
context_unlock_cursor	.\src\Core\Context\Context.cpp	/^void context_unlock_cursor()$/;"	f	signature:()
context_unlock_cursor	.\src\Core\Context\Context.h	/^void context_unlock_cursor();$/;"	p	signature:()
controlled_unit	.\src\Runtime\Player\Player.h	/^	Unit* controlled_unit = nullptr;$/;"	m	struct:Player	access:public
count	.\src\Core\Container\SparseList.h	/^	u32 count = 0;$/;"	m	struct:Sparse_List	access:public
create_connection	.\src\Core\Net\Service\ServiceRecv.cpp	/^Connection* create_connection(const Ip_Address& addr)$/;"	f	signature:(const Ip_Address& addr)
create_func	.\src\Engine\Resource\Resource.h	/^	Res_Create_Func create_func;$/;"	m	struct:Resource	access:public
cross	.\src\Core\Math\Vector.h	/^inline Vec3 cross(const Vec3& a, const Vec3& b)$/;"	f	signature:(const Vec3& a, const Vec3& b)
cross	.\src\Core\Math\Vector.h	/^inline float cross(const Vec2& a, const Vec2& b)$/;"	f	signature:(const Vec2& a, const Vec2& b)
current_buffer	.\src\Core\Memory\Arena.h	/^	Arena_Buffer* current_buffer = nullptr;$/;"	m	struct:Mem_Arena	access:public
cursor	.\src\Core\Memory\Arena.h	/^	u16 cursor = 0;$/;"	m	struct:Arena_Buffer	access:public
cursor_hide	.\src\Core\Context\Context.h	/^	bool cursor_hide = false;$/;"	m	struct:Context	access:public
cursor_lock	.\src\Core\Context\Context.h	/^	bool cursor_lock = false;$/;"	m	struct:Context	access:public
dat_array_read	.\src\Core\Import\Dat.cpp	/^bool dat_array_read(Dat_Array* array, int index, int* value)$/;"	f	signature:(Dat_Array* array, int index, int* value)
dat_array_read	.\src\Core\Import\Dat.h	/^bool dat_array_read(Dat_Array* array, int index, int* value);$/;"	p	signature:(Dat_Array* array, int index, int* value)
dat_free	.\src\Core\Import\Dat.cpp	/^void dat_free(Dat_Document* doc)$/;"	f	signature:(Dat_Document* doc)
dat_free	.\src\Core\Import\Dat.h	/^void dat_free(Dat_Document* doc);$/;"	p	signature:(Dat_Document* doc)
dat_get_array	.\src\Core\Import\Dat.cpp	/^Dat_Array* dat_get_array(Dat_Object* root, const char* expr)$/;"	f	signature:(Dat_Object* root, const char* expr)
dat_get_array	.\src\Core\Import\Dat.h	/^Dat_Array* dat_get_array(Dat_Object* root, const char* expr);$/;"	p	signature:(Dat_Object* root, const char* expr)
dat_get_object	.\src\Core\Import\Dat.cpp	/^Dat_Object* dat_get_object(Dat_Object* root, const char* expr)$/;"	f	signature:(Dat_Object* root, const char* expr)
dat_get_object	.\src\Core\Import\Dat.h	/^Dat_Object* dat_get_object(Dat_Object* root, const char* expr);$/;"	p	signature:(Dat_Object* root, const char* expr)
dat_load_file	.\src\Core\Import\Dat.cpp	/^bool dat_load_file(Dat_Document* doc, const char* file_path)$/;"	f	signature:(Dat_Document* doc, const char* file_path)
dat_load_file	.\src\Core\Import\Dat.h	/^bool dat_load_file(Dat_Document* doc, const char* file_path);$/;"	p	signature:(Dat_Document* doc, const char* file_path)
dat_parse_key	.\src\Core\Import\Dat.cpp	/^Dat_Key* dat_parse_key(Dat_Document* doc)$/;"	f	signature:(Dat_Document* doc)
dat_parse_key	.\src\Core\Import\Dat.cpp	/^Dat_Key* dat_parse_key(Dat_Document* doc);$/;"	p	file:	signature:(Dat_Document* doc)
dat_parse_value	.\src\Core\Import\Dat.cpp	/^Dat_Node* dat_parse_value(Dat_Document* doc)$/;"	f	signature:(Dat_Document* doc)
dat_parse_value	.\src\Core\Import\Dat.cpp	/^Dat_Node* dat_parse_value(Dat_Document* doc);$/;"	p	file:	signature:(Dat_Document* doc)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, bool* value)$/;"	f	signature:(Dat_Object* root, const char* expr, bool* value)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, const i8** value)$/;"	f	signature:(Dat_Object* root, const char* expr, const i8** value)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, i16* value)$/;"	f	signature:(Dat_Object* root, const char* expr, i16* value)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, i32* value)$/;"	f	signature:(Dat_Object* root, const char* expr, i32* value)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, u16* value)$/;"	f	signature:(Dat_Object* root, const char* expr, u16* value)
dat_read	.\src\Core\Import\Dat.cpp	/^bool dat_read(Dat_Object* root, const char* expr, u32* value)$/;"	f	signature:(Dat_Object* root, const char* expr, u32* value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, bool* value);$/;"	p	signature:(Dat_Object* root, const char* expr, bool* value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, const char** value);$/;"	p	signature:(Dat_Object* root, const char* expr, const char** value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, i16* value);$/;"	p	signature:(Dat_Object* root, const char* expr, i16* value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, i32* value);$/;"	p	signature:(Dat_Object* root, const char* expr, i32* value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, u16* value);$/;"	p	signature:(Dat_Object* root, const char* expr, u16* value)
dat_read	.\src\Core\Import\Dat.h	/^bool dat_read(Dat_Object* root, const char* expr, u32* value);$/;"	p	signature:(Dat_Object* root, const char* expr, u32* value)
dat_read_value	.\src\Core\Import\Dat.cpp	/^bool dat_read_value(Dat_Object* root, const char* expr, const char* scan_str, void* value)$/;"	f	signature:(Dat_Object* root, const char* expr, const char* scan_str, void* value)
data	.\src\Core\Compress\Inflate.cpp	/^	u8* data;$/;"	m	struct:Inflate_Stream	file:	access:public
data	.\src\Core\Import\Dat.cpp	/^	char* data;$/;"	m	struct:Dat_Buffer	file:	access:public
data	.\src\Core\Import\FBX_Parse.cpp	/^	u8* data;$/;"	m	struct:Fbx_Buffer	file:	access:public
data	.\src\Core\Import\Fbx_Data.h	/^	char* data;$/;"	m	struct:Fbx_String	access:public
data	.\src\Core\Import\Fbx_Data.h	/^	void* data;$/;"	m	struct:Fbx_Array	access:public
data	.\src\Core\Import\Fbx_Data.h	/^	void* data;$/;"	m	struct:Fbx_Property	access:public
data	.\src\Core\Import\TGA.h	/^	void* data;$/;"	m	struct:Tga_File	access:public
data	.\src\Core\Memory\Arena.h	/^	u8* data = nullptr;$/;"	m	struct:Arena_Buffer	access:public
debug	.\src\Core\Net\Net.h	/^	bool debug = false;$/;"	m	struct:Net_Service	access:public
debug_break	.\src\Core\Debug\Assert.h	1;"	d
debug_log	.\src\Core\Debug\Log.h	2;"	d
decode_distance	.\src\Core\Compress\Inflate.cpp	/^u16 decode_distance(Inflate_Stream* str, u32 symbol)$/;"	f	signature:(Inflate_Stream* str, u32 symbol)
decode_dynamic_huffman_codes	.\src\Core\Compress\Inflate.cpp	/^void decode_dynamic_huffman_codes(Inflate_Stream* stream, u16* code_length_arr, u32 code_num, Huffman_Tree* length_tree)$/;"	f	signature:(Inflate_Stream* stream, u16* code_length_arr, u32 code_num, Huffman_Tree* length_tree)
decode_dynamic_huffman_trees_from_stream	.\src\Core\Compress\Inflate.cpp	/^void decode_dynamic_huffman_trees_from_stream(Inflate_Stream* stream, Huffman_Tree* lit_length_tree, Huffman_Tree* distance_tree)$/;"	f	signature:(Inflate_Stream* stream, Huffman_Tree* lit_length_tree, Huffman_Tree* distance_tree)
decode_huffman_block	.\src\Core\Compress\Inflate.cpp	/^void decode_huffman_block(Inflate_Stream* in, Inflate_Stream* out, Huffman_Tree* length_tree, Huffman_Tree* distance_tree)$/;"	f	signature:(Inflate_Stream* in, Inflate_Stream* out, Huffman_Tree* length_tree, Huffman_Tree* distance_tree)
decode_length	.\src\Core\Compress\Inflate.cpp	/^u16 decode_length(Inflate_Stream* str, u32 symbol)$/;"	f	signature:(Inflate_Stream* str, u32 symbol)
defer	.\src\Core\Defer.h	25;"	d
degrees	.\src\Core\Math\Math.h	/^inline float degrees(float radians) { return radians \/ PI * 180.f; }$/;"	f	signature:(float radians)
delta_x	.\src\Core\Input\Input.h	/^	int delta_x;$/;"	m	struct:Mouse_State	access:public
delta_y	.\src\Core\Input\Input.h	/^	int delta_y;$/;"	m	struct:Mouse_State	access:public
dependencies	.\src\Engine\Resource\Resource.h	/^	Resource_List* dependencies = nullptr;$/;"	m	struct:Resource	access:public
dependent	.\src\Engine\Resource\Resource.h	/^	Resource_List* dependent = nullptr;$/;"	m	struct:Resource	access:public
destroy_func	.\src\Engine\Resource\Resource.h	/^	Res_Destroy_Func destroy_func;$/;"	m	struct:Resource	access:public
destroy_ticker	.\src\Engine\Tick\Tick.cpp	/^void destroy_ticker(Ticker* ticker)$/;"	f	signature:(Ticker* ticker)
destroy_ticker	.\src\Engine\Tick\Tick.h	/^void destroy_ticker(Ticker* ticker);$/;"	p	signature:(Ticker* ticker)
direction	.\src\Core\Math\Ray.h	/^	Vec3 direction;$/;"	m	struct:Ray	access:public
direction	.\src\Runtime\Game\Projectile.h	/^	Vec2 direction;$/;"	m	struct:Projectile	access:public
distance	.\src\Runtime\Game\Camera.h	/^	float distance = 5.f;$/;"	m	struct:Camera	access:public
doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Array	access:public
doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Key	access:public
doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Node	access:public
doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Object	access:public
doc	.\src\Core\Import\Dat.h	/^	Dat_Document* doc = nullptr;$/;"	m	struct:Dat_Value_Raw	access:public
doc	.\src\Engine\Config\Config.cpp	/^Dat_Document doc;$/;"	v
doc_error	.\src\Core\Import\Dat.cpp	/^void doc_error(char* error_location, const char* format, ...)$/;"	f	signature:(char* error_location, const char* format, ...)
dot	.\src\Core\Math\Vector.h	/^inline float dot(const Vec2& a, const Vec2& b)$/;"	f	signature:(const Vec2& a, const Vec2& b)
dot	.\src\Core\Math\Vector.h	/^inline float dot(const Vec3& a, const Vec3& b)$/;"	f	signature:(const Vec3& a, const Vec3& b)
dot	.\src\Core\Math\Vector.h	/^inline float dot(const Vec4& a, const Vec4& b)$/;"	f	signature:(const Vec4& a, const Vec4& b)
draw_count	.\src\Engine\Graphics\Mesh.h	/^	u32 draw_count = 0;$/;"	m	struct:Mesh	access:public
draw_mode	.\src\Engine\Graphics\Mesh.h	/^	GLenum draw_mode = GL_TRIANGLES;$/;"	m	struct:Mesh	access:public
drawable	.\src\Runtime\Game\Projectile.h	/^	Drawable* drawable;$/;"	m	struct:Projectile	access:public
drawable_destroy	.\src\Engine\Render\Drawable.cpp	/^void drawable_destroy(Drawable* drawable)$/;"	f	signature:(Drawable* drawable)
drawable_destroy	.\src\Engine\Render\Drawable.h	/^void drawable_destroy(Drawable* drawable);$/;"	p	signature:(Drawable* drawable)
drawable_init	.\src\Engine\Render\Drawable.cpp	/^void drawable_init()$/;"	f	signature:()
drawable_init	.\src\Engine\Render\Drawable.h	/^void drawable_init();$/;"	p	signature:()
drawable_list	.\src\Engine\Render\Drawable.cpp	/^	Sparse_List<Drawable> drawable_list;$/;"	m	namespace:__anon9	file:
drawable_load	.\src\Engine\Render\Drawable.cpp	/^Drawable* drawable_load(const char* mesh_path, const char* material_path, const char* texture_path)$/;"	f	signature:(const char* mesh_path, const char* material_path, const char* texture_path)
drawable_load	.\src\Engine\Render\Drawable.h	/^Drawable* drawable_load(const char* mesh_path, const char* material_path, const char* texture_path = nullptr);$/;"	p	signature:(const char* mesh_path, const char* material_path, const char* texture_path = nullptr)
drawable_make	.\src\Engine\Render\Drawable.cpp	/^Drawable* drawable_make(const Mesh* mesh, const Material* material, const Texture* texture)$/;"	f	signature:(const Mesh* mesh, const Material* material, const Texture* texture)
drawable_make	.\src\Engine\Render\Drawable.h	/^Drawable* drawable_make(const Mesh* mesh, const Material* material, const Texture* texture = nullptr);$/;"	p	signature:(const Mesh* mesh, const Material* material, const Texture* texture = nullptr)
drawable_render	.\src\Engine\Render\Drawable.cpp	/^void drawable_render(const Render_State& state)$/;"	f	signature:(const Render_State& state)
drawable_render	.\src\Engine\Render\Drawable.h	/^void drawable_render(const Render_State& state);/;"	p	signature:(const Render_State& state)
elements	.\src\Core\Import\Dat.h	/^	Dat_Node** elements = nullptr;$/;"	m	struct:Dat_Array	access:public
encoding	.\src\Core\Import\FBX_Parse.cpp	/^	u32 encoding;$/;"	m	struct:Fbx_Array_Header	file:	access:public
end_offset	.\src\Core\Import\FBX_Parse.cpp	/^	u32 end_offset;$/;"	m	struct:Fbx_Node_Header	file:	access:public
eof	.\src\Core\Import\Dat.cpp	/^bool eof()$/;"	f	signature:()
error	.\src\Core\Debug\Assert.h	4;"	d
error_exit	.\src\Core\Debug\Assert.cpp	/^	void error_exit()$/;"	f	namespace:assert_helpers	signature:()
error_exit	.\src\Core\Debug\Assert.h	/^	void error_exit();$/;"	p	namespace:assert_helpers	signature:()
ev_destroy_unit	.\src\Runtime\Game\Game.cpp	/^	void ev_destroy_unit(Game* game, Destroy_Unit_Data* data)$/;"	f	namespace:__anon11	signature:(Game* game, Destroy_Unit_Data* data)
ev_set_position	.\src\Runtime\Unit\Unit.cpp	/^	void ev_set_position(Unit* unit, Set_Position_Data* data)$/;"	f	namespace:__anon12	signature:(Unit* unit, Set_Position_Data* data)
ev_spawn_unit	.\src\Runtime\Game\Game.cpp	/^	void ev_spawn_unit(Game* game, Spawn_Unit_Data* data)$/;"	f	namespace:__anon11	signature:(Game* game, Spawn_Unit_Data* data)
eval_expr	.\src\Core\Import\Dat.cpp	/^Dat_Node* eval_expr(Dat_Object* root, const char* expr, u32 expr_len)$/;"	f	signature:(Dat_Object* root, const char* expr, u32 expr_len)
event_id	.\src\Runtime\Online\Online.h	/^	u8 event_id;$/;"	m	struct:Rpc_Channel_Event	access:public
event_list	.\src\Core\Net\Net.h	/^	Net_Event* event_list = nullptr;$/;"	m	struct:Net_Service	access:public
event_list_destroy	.\src\Core\Net\NetEvent.cpp	/^void event_list_destroy(Net_Event* event_list)$/;"	f	signature:(Net_Event* event_list)
event_list_destroy	.\src\Core\Net\NetEvent.h	/^void event_list_destroy(Net_Event* event_list);/;"	p	signature:(Net_Event* event_list)
event_mutex	.\src\Core\Net\Net.h	/^	Mutex event_mutex;$/;"	m	struct:Net_Service	access:public
events	.\src\Runtime\Online\Channel.h	/^	Channel_Event events[MAX_CHANNEL_EVENTS];$/;"	m	struct:Channel	access:public
extended	.\src\Core\Context\Context.cpp	/^	u32 extended	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
f32	.\src\Core\Types.h	/^typedef float f32;$/;"	t
f64	.\src\Core\Types.h	/^typedef double f64;/;"	t
faces	.\src\Core\Import\Fbx.h	/^	Fbx_Face* faces = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
far	.\src\Core\WinMin.h	53;"	d
far	.\src\Core\Windows\WinSock.h	12;"	d
far	.\src\Core\Windows\WinSock.h	6;"	d
far_ptr	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* far_ptr = nullptr;$/;"	m	struct:Sparse_List	access:public
fbx_convert_double_to_float	.\src\Core\Import\Fbx.cpp	/^void fbx_convert_double_to_float(f64* in_ptr, f32* out_ptr, u32 count)$/;"	f	signature:(f64* in_ptr, f32* out_ptr, u32 count)
fbx_find_child	.\src\Core\Import\Fbx_Data.cpp	/^Fbx_Node* fbx_find_child(Fbx_Node* node, const char* name, i32 name_len\/* = -1*\/)$/;"	f	signature:(Fbx_Node* node, const char* name, i32 name_len )
fbx_find_child	.\src\Core\Import\Fbx_Data.h	/^Fbx_Node* fbx_find_child(Fbx_Node* node, const char* name, i32 name_len = -1);$/;"	p	signature:(Fbx_Node* node, const char* name, i32 name_len = -1)
fbx_find_sibling	.\src\Core\Import\Fbx_Data.cpp	/^Fbx_Node* fbx_find_sibling(Fbx_Node* node, const char* name, i32 name_len\/* = -1*\/)$/;"	f	signature:(Fbx_Node* node, const char* name, i32 name_len )
fbx_find_sibling	.\src\Core\Import\Fbx_Data.h	/^Fbx_Node* fbx_find_sibling(Fbx_Node* node, const char* name, i32 name_len = -1);$/;"	p	signature:(Fbx_Node* node, const char* name, i32 name_len = -1)
fbx_free	.\src\Core\Import\Fbx.cpp	/^void fbx_free(Fbx_Scene* scene)$/;"	f	signature:(Fbx_Scene* scene)
fbx_free	.\src\Core\Import\Fbx.h	/^void fbx_free(Fbx_Scene* scene);/;"	p	signature:(Fbx_Scene* scene)
fbx_get_property	.\src\Core\Import\Fbx_Data.h	84;"	d
fbx_import	.\src\Core\Import\Fbx.cpp	/^Fbx_Scene* fbx_import(const char* path)$/;"	f	signature:(const char* path)
fbx_import	.\src\Core\Import\Fbx.h	/^Fbx_Scene* fbx_import(const char* path);$/;"	p	signature:(const char* path)
fbx_log_node	.\src\Core\Import\Fbx_Data.cpp	/^void fbx_log_node(Fbx_Node* node, bool log_siblings\/* = false*\/)$/;"	f	signature:(Fbx_Node* node, bool log_siblings )
fbx_log_node	.\src\Core\Import\Fbx_Data.h	/^void fbx_log_node(Fbx_Node* node, bool log_siblings = false);/;"	p	signature:(Fbx_Node* node, bool log_siblings = false)
fbx_parse_element_mapping_type	.\src\Core\Import\Fbx_Data.cpp	/^Fbx_Mapping_Type fbx_parse_element_mapping_type(const char* mapping_str, u32 str_len)$/;"	f	signature:(const char* mapping_str, u32 str_len)
fbx_parse_element_mapping_type	.\src\Core\Import\Fbx_Data.h	/^Fbx_Mapping_Type fbx_parse_element_mapping_type(const char* mapping_str, u32 str_len);$/;"	p	signature:(const char* mapping_str, u32 str_len)
fbx_parse_element_reference_type	.\src\Core\Import\Fbx_Data.cpp	/^Fbx_Reference_Type fbx_parse_element_reference_type(const char* reference_str, u32 str_len)$/;"	f	signature:(const char* reference_str, u32 str_len)
fbx_parse_element_reference_type	.\src\Core\Import\Fbx_Data.h	/^Fbx_Reference_Type fbx_parse_element_reference_type(const char* reference_str, u32 str_len);$/;"	p	signature:(const char* reference_str, u32 str_len)
fbx_parse_node_tree	.\src\Core\Import\FBX_Parse.cpp	/^Fbx_Node* fbx_parse_node_tree(const char* path, Mem_Arena* mem_arena)$/;"	f	signature:(const char* path, Mem_Arena* mem_arena)
fbx_parse_node_tree	.\src\Core\Import\FBX_Parse.h	/^Fbx_Node* fbx_parse_node_tree(const char* path, Mem_Arena* mem_arena);/;"	p	signature:(const char* path, Mem_Arena* mem_arena)
fbx_peek	.\src\Core\Import\FBX_Parse.cpp	/^void fbx_peek(Fbx_Buffer* buffer, void* target, u32 size)$/;"	f	signature:(Fbx_Buffer* buffer, void* target, u32 size)
fbx_print_property	.\src\Core\Import\Fbx_Data.cpp	/^void fbx_print_property(Fbx_Property* prop)$/;"	f	signature:(Fbx_Property* prop)
fbx_print_property	.\src\Core\Import\Fbx_Data.h	/^void fbx_print_property(Fbx_Property* prop);$/;"	p	signature:(Fbx_Property* prop)
fbx_process_mesh	.\src\Core\Import\Fbx.cpp	/^Fbx_Mesh* fbx_process_mesh(Fbx_Node* mesh_node, Mem_Arena* mem_arena)$/;"	f	signature:(Fbx_Node* mesh_node, Mem_Arena* mem_arena)
fbx_read	.\src\Core\Import\FBX_Parse.cpp	/^void fbx_read(Fbx_Buffer* buffer, void* target, u32 size)$/;"	f	signature:(Fbx_Buffer* buffer, void* target, u32 size)
fbx_read_node	.\src\Core\Import\FBX_Parse.cpp	/^Fbx_Node* fbx_read_node(Fbx_Buffer* buffer, Mem_Arena* mem_arena)$/;"	f	signature:(Fbx_Buffer* buffer, Mem_Arena* mem_arena)
fbx_read_property	.\src\Core\Import\FBX_Parse.cpp	/^bool fbx_read_property(Fbx_Buffer* buffer, Fbx_Property* prop, Mem_Arena* mem_arena)$/;"	f	signature:(Fbx_Buffer* buffer, Fbx_Property* prop, Mem_Arena* mem_arena)
fbx_read_t	.\src\Core\Import\FBX_Parse.cpp	54;"	d	file:
file_modified_time	.\src\Core\OS\File.cpp	/^i64 file_modified_time(const char* path)$/;"	f	signature:(const char* path)
file_modified_time	.\src\Core\OS\File.h	/^i64 file_modified_time(const char* path);/;"	p	signature:(const char* path)
file_read_all	.\src\Core\OS\File.cpp	/^i32 file_read_all(const char* path, char* buffer, u32 size)$/;"	f	signature:(const char* path, char* buffer, u32 size)
file_read_all	.\src\Core\OS\File.h	/^i32 file_read_all(const char* path, char* buffer, u32 size);$/;"	p	signature:(const char* path, char* buffer, u32 size)
file_read_all_dynamic	.\src\Core\OS\File.cpp	/^i32 file_read_all_dynamic(const char* path, char*& buffer)$/;"	f	signature:(const char* path, char*& buffer)
file_read_all_dynamic	.\src\Core\OS\File.h	/^i32 file_read_all_dynamic(const char* path, char*& buffer);$/;"	p	signature:(const char* path, char*& buffer)
fill_color	.\src\Engine\Render\Billboard.h	/^	Vec4 fill_color = Vec4(0.f);$/;"	m	struct:Billboard	access:public
first	.\src\Core\Net\PacketList.h	/^	Packet_Block* first = nullptr;$/;"	m	struct:Packet_List	access:public
first_index	.\src\Core\Import\TGA.cpp	/^	u16 first_index;$/;"	m	struct:Tga_Color_Map	file:	access:public
first_key	.\src\Core\Import\Dat.h	/^	Dat_Key* first_key = nullptr;$/;"	m	struct:Dat_Object	access:public
floor	.\src\Runtime\Game\Scene.h	/^	Drawable* floor;$/;"	m	struct:Scene	access:public
flush_incoming	.\src\Core\Net\Service\ServiceRecv.cpp	/^void flush_incoming(Connection* connection)$/;"	f	signature:(Connection* connection)
fragment	.\src\Engine\Graphics\Material.h	/^	GLuint fragment;$/;"	m	struct:Material	access:public
frame_delta	.\src\Core\Time\Time.cpp	/^	float frame_delta = 0;$/;"	m	namespace:__anon7	file:
frame_num	.\src\Core\Input\Input.h	/^	u32 frame_num = 0;$/;"	m	struct:Action_State	access:public
frame_num	.\src\Core\Input\Input.h	/^	u32 frame_num;$/;"	m	struct:Input	access:public
framebuffer_add_color_texture	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_add_color_texture(Frame_Buffer* fb)$/;"	f	signature:(Frame_Buffer* fb)
framebuffer_add_color_texture	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_add_color_texture(Frame_Buffer* fb);$/;"	p	signature:(Frame_Buffer* fb)
framebuffer_add_depth_texture	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_add_depth_texture(Frame_Buffer* fb)$/;"	f	signature:(Frame_Buffer* fb)
framebuffer_add_depth_texture	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_add_depth_texture(Frame_Buffer* fb);$/;"	p	signature:(Frame_Buffer* fb)
framebuffer_bind	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_bind(Frame_Buffer* fb)$/;"	f	signature:(Frame_Buffer* fb)
framebuffer_bind	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_bind(Frame_Buffer* fb);$/;"	p	signature:(Frame_Buffer* fb)
framebuffer_create	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_create(Frame_Buffer* fb, u32 width, u32 height)$/;"	f	signature:(Frame_Buffer* fb, u32 width, u32 height)
framebuffer_create	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_create(Frame_Buffer* fb, u32 width, u32 height);$/;"	p	signature:(Frame_Buffer* fb, u32 width, u32 height)
framebuffer_free	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_free(Frame_Buffer* fb)$/;"	f	signature:(Frame_Buffer* fb)
framebuffer_free	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_free(Frame_Buffer* fb);$/;"	p	signature:(Frame_Buffer* fb)
framebuffer_is_complete	.\src\Engine\Graphics\FrameBuffer.cpp	/^bool framebuffer_is_complete(Frame_Buffer* fb)$/;"	f	signature:(Frame_Buffer* fb)
framebuffer_is_complete	.\src\Engine\Graphics\FrameBuffer.h	/^bool framebuffer_is_complete(Frame_Buffer* fb);$/;"	p	signature:(Frame_Buffer* fb)
framebuffer_reset	.\src\Engine\Graphics\FrameBuffer.cpp	/^void framebuffer_reset()$/;"	f	signature:()
framebuffer_reset	.\src\Engine\Graphics\FrameBuffer.h	/^void framebuffer_reset();/;"	p	signature:()
func	.\src\Core\Thread\Thread.h	/^	Thread_Func func;$/;"	m	struct:Thread	access:public
func	.\src\Engine\Tick\Tick.h	/^	tick_func_ptr func = nullptr;$/;"	m	struct:Ticker	access:public
functor	.\src\Core\Defer.h	/^	TFunctor functor;$/;"	m	struct:_Defer	access:public
game	.\src\Runtime\Game\Game.cpp	/^Game game;$/;"	v
game_init	.\src\Runtime\Game\Game.cpp	/^void game_init()$/;"	f	signature:()
game_init	.\src\Runtime\Game\Game.h	/^void game_init();$/;"	p	signature:()
game_update	.\src\Runtime\Game\Game.cpp	/^void game_update()$/;"	f	signature:()
game_update	.\src\Runtime\Game\Game.h	/^void game_update();$/;"	p	signature:()
game_user_added	.\src\Runtime\Game\Game.cpp	/^void game_user_added(Online_User* user)$/;"	f	signature:(Online_User* user)
game_user_added	.\src\Runtime\Game\Game.h	/^void game_user_added(Online_User* user);$/;"	p	signature:(Online_User* user)
game_user_leave	.\src\Runtime\Game\Game.cpp	/^void game_user_leave(Online_User* user)$/;"	f	signature:(Online_User* user)
game_user_leave	.\src\Runtime\Game\Game.h	/^void game_user_leave(Online_User* user);$/;"	p	signature:(Online_User* user)
generation	.\src\Core\Net\Connection.h	/^	int generation;$/;"	m	struct:Connection_Handle	access:public
get_connection_from_addr	.\src\Core\Net\Net.cpp	/^	Connection* get_connection_from_addr(const Ip_Address& addr)$/;"	f	namespace:__anon6	signature:(const Ip_Address& addr)
get_connection_from_ip	.\src\Core\Net\Service\ServiceRecv.cpp	/^Connection* get_connection_from_ip(const Ip_Address& addr)$/;"	f	signature:(const Ip_Address& addr)
glAccumxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glAccumxOES (GLenum op, GLfixed value);$/;"	p	signature:(GLenum op, GLfixed value)
glAcquireKeyedMutexWin32EXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glAcquireKeyedMutexWin32EXT (GLuint memory, GLuint64 key, GLuint timeout);$/;"	p	signature:(GLuint memory, GLuint64 key, GLuint timeout)
glActiveProgramEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	p	signature:(GLuint program)
glActiveShaderProgram	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	p	signature:(GLuint pipeline, GLuint program)
glActiveStencilFaceEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum face);$/;"	p	signature:(GLenum face)
glActiveTexture	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveTextureARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveVaryingNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glActiveVaryingNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glAlphaFragmentOp1ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glAlphaFragmentOp2ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glAlphaFragmentOp3ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glAlphaFuncxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glAlphaFuncxOES (GLenum func, GLfixed ref);$/;"	p	signature:(GLenum func, GLfixed ref)
glAlphaToCoverageDitherControlNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glAlphaToCoverageDitherControlNV (GLenum mode);$/;"	p	signature:(GLenum mode)
glApplyFramebufferAttachmentCMAAINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glApplyFramebufferAttachmentCMAAINTEL (void);$/;"	p	signature:(void)
glApplyTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glAreProgramsResidentNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *programs, GLboolean *residences)
glAreTexturesResidentEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *textures, GLboolean *residences)
glArrayElementEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint i);$/;"	p	signature:(GLint i)
glArrayObjectATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glAsyncMarkerSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glAttachObjectARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB obj)
glAttachShader	.\include\GL\glext.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glBeginConditionalRender	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginConditionalRenderNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginConditionalRenderNVX	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginConditionalRenderNVX (GLuint id);$/;"	p	signature:(GLuint id)
glBeginFragmentShaderATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	p	signature:(void)
glBeginOcclusionQueryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glBeginPerfMonitorAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glBeginPerfQueryINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginPerfQueryINTEL (GLuint queryHandle);$/;"	p	signature:(GLuint queryHandle)
glBeginQuery	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryIndexed	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	p	signature:(GLenum target, GLuint index, GLuint id)
glBeginTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackEXT (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginTransformFeedbackNV (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginVertexShaderEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	p	signature:(void)
glBeginVideoCaptureNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBeginVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glBindAttribLocation	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, const GLchar *name)
glBindAttribLocationARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, const GLcharARB *name)
glBindBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBufferARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBufferBase	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferOffsetNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBuffersBase	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBuffersBase (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	p	signature:(GLenum target, GLuint first, GLsizei count, const GLuint *buffers)
glBindBuffersRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindBuffersRange (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	p	signature:(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes)
glBindFragDataLocation	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationIndexed	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name)
glBindFragmentShaderATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glBindFramebuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindFramebufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindImageTexture	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindImageTexture (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	p	signature:(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format)
glBindImageTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	p	signature:(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format)
glBindImageTextures	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindImageTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p	signature:(GLuint first, GLsizei count, const GLuint *textures)
glBindLightParameterEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum light, GLenum value);$/;"	p	signature:(GLenum light, GLenum value)
glBindMaterialParameterEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum face, GLenum value);$/;"	p	signature:(GLenum face, GLenum value)
glBindMultiTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint texture)
glBindParameterEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum value);$/;"	p	signature:(GLenum value)
glBindProgramARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum target, GLuint program);$/;"	p	signature:(GLenum target, GLuint program)
glBindProgramNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindProgramPipeline	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glBindRenderbuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindRenderbufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindSampler	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	p	signature:(GLuint unit, GLuint sampler)
glBindSamplers	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindSamplers (GLuint first, GLsizei count, const GLuint *samplers);$/;"	p	signature:(GLuint first, GLsizei count, const GLuint *samplers)
glBindShadingRateImageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindShadingRateImageNV (GLuint texture);$/;"	p	signature:(GLuint texture)
glBindTexGenParameterEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);$/;"	p	signature:(GLenum unit, GLenum coord, GLenum value)
glBindTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBindTextureUnit	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindTextureUnit (GLuint unit, GLuint texture);$/;"	p	signature:(GLuint unit, GLuint texture)
glBindTextureUnitParameterEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum unit, GLenum value);$/;"	p	signature:(GLenum unit, GLenum value)
glBindTextures	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindTextures (GLuint first, GLsizei count, const GLuint *textures);$/;"	p	signature:(GLuint first, GLsizei count, const GLuint *textures)
glBindTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindTransformFeedbackNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindVertexArray	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexArrayAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVertexBuffer (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p	signature:(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
glBindVertexBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVertexBuffers (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	p	signature:(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides)
glBindVertexShaderEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glBindVideoCaptureStreamBufferNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset)
glBindVideoCaptureStreamTextureNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture)
glBinormal3bEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);$/;"	p	signature:(GLbyte bx, GLbyte by, GLbyte bz)
glBinormal3bvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glBinormal3dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);$/;"	p	signature:(GLdouble bx, GLdouble by, GLdouble bz)
glBinormal3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glBinormal3fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);$/;"	p	signature:(GLfloat bx, GLfloat by, GLfloat bz)
glBinormal3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glBinormal3iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint bx, GLint by, GLint bz);$/;"	p	signature:(GLint bx, GLint by, GLint bz)
glBinormal3ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glBinormal3sEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);$/;"	p	signature:(GLshort bx, GLshort by, GLshort bz)
glBinormal3svEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glBinormalPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const void *pointer)
glBitmapxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glBitmapxOES (GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);$/;"	p	signature:(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap)
glBlendBarrierKHR	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendBarrierKHR (void);$/;"	p	signature:(void)
glBlendBarrierNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendBarrierNV (void);$/;"	p	signature:(void)
glBlendColor	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glBlendColorEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendColorEXT (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
glBlendColorxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glBlendEquation	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquationEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquationIndexedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationIndexedAMD (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationSeparate	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateIndexedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparatei	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateiARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationi	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationiARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendFuncIndexedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFuncSeparate	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateINGR	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateIndexedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparatei	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparateiARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFunci	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFunciARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendParameteriNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlendParameteriNV (GLenum pname, GLint value);$/;"	p	signature:(GLenum pname, GLint value)
glBlitFramebuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBlitFramebufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBlitNamedFramebuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glBlitNamedFramebuffer (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBufferAddressRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	p	signature:(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length)
glBufferAttachMemoryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferAttachMemoryNV (GLenum target, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLuint memory, GLuint64 offset)
glBufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptr size, const void *data, GLenum usage)
glBufferDataARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage)
glBufferPageCommitmentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferPageCommitmentARB (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit)
glBufferParameteriAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glBufferStorage	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferStorage (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p	signature:(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags)
glBufferStorageExternalEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferStorageExternalEXT (GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags)
glBufferStorageMemEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferStorageMemEXT (GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset)
glBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, const void *data)
glBufferSubDataARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data)
glCallCommandListNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCallCommandListNV (GLuint list);$/;"	p	signature:(GLuint list)
glCheckFramebufferStatus	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	signature:(GLenum target)
glCheckFramebufferStatusEXT	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum target);$/;"	p	signature:(GLenum target)
glCheckNamedFramebufferStatus	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatus (GLuint framebuffer, GLenum target);$/;"	p	signature:(GLuint framebuffer, GLenum target)
glCheckNamedFramebufferStatusEXT	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	p	signature:(GLuint framebuffer, GLenum target)
glClampColor	.\include\GL\glext.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClampColorARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glClampColorARB (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClearAccumxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearAccumxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glClearBufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferData (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data)
glClearBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferSubData (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data)
glClearBufferfi	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
glClearBufferfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLfloat *value)
glClearBufferiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLint *value)
glClearBufferuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLuint *value)
glClearColorIiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);$/;"	p	signature:(GLint red, GLint green, GLint blue, GLint alpha)
glClearColorIuiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)
glClearColorxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearColorxOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glClearDepthdNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	p	signature:(GLdouble depth)
glClearDepthf	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearDepthf (GLfloat d);$/;"	p	signature:(GLfloat d)
glClearDepthfOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearDepthfOES (GLclampf depth);$/;"	p	signature:(GLclampf depth)
glClearDepthxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearDepthxOES (GLfixed depth);$/;"	p	signature:(GLfixed depth)
glClearNamedBufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedBufferData (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data)
glClearNamedBufferDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedBufferDataEXT (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data)
glClearNamedBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedBufferSubData (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data)
glClearNamedBufferSubDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedBufferSubDataEXT (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data)
glClearNamedFramebufferfi	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedFramebufferfi (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p	signature:(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
glClearNamedFramebufferfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedFramebufferfv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p	signature:(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value)
glClearNamedFramebufferiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedFramebufferiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p	signature:(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value)
glClearNamedFramebufferuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearNamedFramebufferuiv (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p	signature:(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value)
glClearTexImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearTexImage (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint texture, GLint level, GLenum format, GLenum type, const void *data)
glClearTexSubImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glClearTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data)
glClientActiveTexture	.\include\GL\glext.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveTextureARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveVertexStreamATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum stream);$/;"	p	signature:(GLenum stream)
glClientAttribDefaultEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClientWaitSync	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glClipControl	.\include\GL\glext.h	/^GLAPI void APIENTRY glClipControl (GLenum origin, GLenum depth);$/;"	p	signature:(GLenum origin, GLenum depth)
glClipPlanefOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClipPlanefOES (GLenum plane, const GLfloat *equation);$/;"	p	signature:(GLenum plane, const GLfloat *equation)
glClipPlanexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glClipPlanexOES (GLenum plane, const GLfixed *equation);$/;"	p	signature:(GLenum plane, const GLfixed *equation)
glColor3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glColor3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *v)
glColor3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glColor3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3xOES (GLfixed red, GLfixed green, GLfixed blue);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue)
glColor3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor3xvOES (const GLfixed *components);$/;"	p	signature:(const GLfixed *components)
glColor4fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glColor4fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *n, const GLfloat *v)
glColor4hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)
glColor4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor4ubVertex2fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)
glColor4ubVertex2fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColor4ubVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glColor4ubVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColor4xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4xOES (GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);$/;"	p	signature:(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
glColor4xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glColor4xvOES (const GLfixed *components);$/;"	p	signature:(const GLfixed *components)
glColorFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glColorFragmentOp1ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glColorFragmentOp2ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glColorFragmentOp3ATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glColorMaskIndexedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorMaski	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorP4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorP4ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorP4uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer)
glColorPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glColorPointervINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	signature:(GLint size, GLenum type, const void **pointer)
glColorSubTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data)
glColorSubTableEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data)
glColorTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table)
glColorTableEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	p	signature:(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table)
glColorTableParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameterfvSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableParameterivSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table)
glCombinerInputNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glCombinerOutputNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)
glCombinerParameterfNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glCombinerParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glCombinerParameteriNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glCombinerParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glCombinerStageParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, const GLfloat *params)
glCommandListSegmentsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCommandListSegmentsNV (GLuint list, GLuint segments);$/;"	p	signature:(GLuint list, GLuint segments)
glCompileCommandListNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompileCommandListNV (GLuint list);$/;"	p	signature:(GLuint list)
glCompileShader	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glCompileShaderARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB shaderObj);$/;"	p	signature:(GLhandleARB shaderObj)
glCompileShaderIncludeARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length)
glCompressedMultiTexImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits)
glCompressedMultiTexImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits)
glCompressedMultiTexImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits)
glCompressedMultiTexSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits)
glCompressedMultiTexSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits)
glCompressedMultiTexSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits)
glCompressedTexImage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data)
glCompressedTexImage1DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data)
glCompressedTexImage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data)
glCompressedTexImage2DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data)
glCompressedTexImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)
glCompressedTexImage3DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)
glCompressedTexSubImage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data)
glCompressedTexSubImage1DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data)
glCompressedTexSubImage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data)
glCompressedTexSubImage2DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data)
glCompressedTexSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)
glCompressedTexSubImage3DARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)
glCompressedTextureImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits)
glCompressedTextureImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits)
glCompressedTextureImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits)
glCompressedTextureSubImage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data)
glCompressedTextureSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits)
glCompressedTextureSubImage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data)
glCompressedTextureSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits)
glCompressedTextureSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)
glCompressedTextureSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits)
glConservativeRasterParameterfNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glConservativeRasterParameterfNV (GLenum pname, GLfloat value);$/;"	p	signature:(GLenum pname, GLfloat value)
glConservativeRasterParameteriNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glConservativeRasterParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glConvolutionFilter1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image)
glConvolutionFilter1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image)
glConvolutionFilter2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image)
glConvolutionFilter2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image)
glConvolutionParameterf	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glConvolutionParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glConvolutionParameterxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glConvolutionParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glConvolutionParameterxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glCopyBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glCopyColorSubTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorSubTableEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyColorTableSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyConvolutionFilter2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyImageSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyImageSubData (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	p	signature:(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)
glCopyImageSubDataNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
glCopyMultiTexImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyMultiTexImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyMultiTexSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyMultiTexSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyMultiTexSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyNamedBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyNamedBufferSubData (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glCopyPathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyPathNV (GLuint resultPath, GLuint srcPath);$/;"	p	signature:(GLuint resultPath, GLuint srcPath)
glCopyTexImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTexImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTexSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTextureImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTextureSubImage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTextureSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTextureSubImage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCoverFillPathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glCoverFillPathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverFillPathNV (GLuint path, GLenum coverMode);$/;"	p	signature:(GLuint path, GLenum coverMode)
glCoverStrokePathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glCoverStrokePathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverStrokePathNV (GLuint path, GLenum coverMode);$/;"	p	signature:(GLuint path, GLenum coverMode)
glCoverageModulationNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverageModulationNV (GLenum components);$/;"	p	signature:(GLenum components)
glCoverageModulationTableNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCoverageModulationTableNV (GLsizei n, const GLfloat *v);$/;"	p	signature:(GLsizei n, const GLfloat *v)
glCreateBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateBuffers (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glCreateCommandListsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateCommandListsNV (GLsizei n, GLuint *lists);$/;"	p	signature:(GLsizei n, GLuint *lists)
glCreateFramebuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glCreateMemoryObjectsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateMemoryObjectsEXT (GLsizei n, GLuint *memoryObjects);$/;"	p	signature:(GLsizei n, GLuint *memoryObjects)
glCreatePerfQueryINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreatePerfQueryINTEL (GLuint queryId, GLuint *queryHandle);$/;"	p	signature:(GLuint queryId, GLuint *queryHandle)
glCreateProgram	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p	signature:(void)
glCreateProgramObjectARB	.\include\GL\glext.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	p	signature:(void)
glCreateProgramPipelines	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p	signature:(GLsizei n, GLuint *pipelines)
glCreateQueries	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateQueries (GLenum target, GLsizei n, GLuint *ids);$/;"	p	signature:(GLenum target, GLsizei n, GLuint *ids)
glCreateRenderbuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glCreateSamplers	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateSamplers (GLsizei n, GLuint *samplers);$/;"	p	signature:(GLsizei n, GLuint *samplers)
glCreateShader	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	p	signature:(GLenum type)
glCreateShaderObjectARB	.\include\GL\glext.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum shaderType);$/;"	p	signature:(GLenum shaderType)
glCreateShaderProgramEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	p	signature:(GLenum type, const GLchar *string)
glCreateShaderProgramv	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	p	signature:(GLenum type, GLsizei count, const GLchar *const*strings)
glCreateStatesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateStatesNV (GLsizei n, GLuint *states);$/;"	p	signature:(GLsizei n, GLuint *states)
glCreateSyncFromCLeventARB	.\include\GL\glext.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	p	signature:(struct _cl_context *context, struct _cl_event *event, GLbitfield flags)
glCreateTextures	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateTextures (GLenum target, GLsizei n, GLuint *textures);$/;"	p	signature:(GLenum target, GLsizei n, GLuint *textures)
glCreateTransformFeedbacks	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glCreateVertexArrays	.\include\GL\glext.h	/^GLAPI void APIENTRY glCreateVertexArrays (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glCullParameterdvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum pname, GLdouble *params)
glCullParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glCurrentPaletteMatrixARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint index);$/;"	p	signature:(GLint index)
glDebugMessageCallback	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	p	signature:(GLDEBUGPROC callback, const void *userParam)
glDebugMessageCallbackAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, void *userParam);$/;"	p	signature:(GLDEBUGPROCAMD callback, void *userParam)
glDebugMessageCallbackARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const void *userParam);$/;"	p	signature:(GLDEBUGPROCARB callback, const void *userParam)
glDebugMessageControl	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageControlARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageEnableAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageInsert	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDebugMessageInsertAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf)
glDebugMessageInsertARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDeformSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glDeformationMap3dSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	p	signature:(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points)
glDeformationMap3fSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points)
glDeleteAsyncMarkersSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);$/;"	p	signature:(GLuint marker, GLsizei range)
glDeleteBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteBuffersARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteCommandListsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteCommandListsNV (GLsizei n, const GLuint *lists);$/;"	p	signature:(GLsizei n, const GLuint *lists)
glDeleteFencesAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFencesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFragmentShaderATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glDeleteFramebuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteFramebuffersEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteMemoryObjectsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteMemoryObjectsEXT (GLsizei n, const GLuint *memoryObjects);$/;"	p	signature:(GLsizei n, const GLuint *memoryObjects)
glDeleteNamedStringARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glDeleteNamesAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, const GLuint *names)
glDeleteObjectARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB obj);$/;"	p	signature:(GLhandleARB obj)
glDeleteOcclusionQueriesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeletePathsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeletePathsNV (GLuint path, GLsizei range);$/;"	p	signature:(GLuint path, GLsizei range)
glDeletePerfMonitorsAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glDeletePerfQueryINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeletePerfQueryINTEL (GLuint queryHandle);$/;"	p	signature:(GLuint queryHandle)
glDeleteProgram	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	p	signature:(GLuint program)
glDeleteProgramPipelines	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	p	signature:(GLsizei n, const GLuint *pipelines)
glDeleteProgramsARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteProgramsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteQueries	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteQueriesARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteQueryResourceTagNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteQueryResourceTagNV (GLsizei n, const GLint *tagIds);$/;"	p	signature:(GLsizei n, const GLint *tagIds)
glDeleteRenderbuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteRenderbuffersEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteSamplers	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	p	signature:(GLsizei count, const GLuint *samplers)
glDeleteSemaphoresEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteSemaphoresEXT (GLsizei n, const GLuint *semaphores);$/;"	p	signature:(GLsizei n, const GLuint *semaphores)
glDeleteShader	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glDeleteStatesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteStatesNV (GLsizei n, const GLuint *states);$/;"	p	signature:(GLsizei n, const GLuint *states)
glDeleteSync	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glDeleteTexturesEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei n, const GLuint *textures);$/;"	p	signature:(GLsizei n, const GLuint *textures)
glDeleteTransformFeedbacks	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteTransformFeedbacksNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacksNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteVertexArrays	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexArraysAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexShaderEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDepthBoundsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);$/;"	p	signature:(GLclampd zmin, GLclampd zmax)
glDepthBoundsdNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	p	signature:(GLdouble zmin, GLdouble zmax)
glDepthRangeArrayv	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLdouble *v)
glDepthRangeIndexed	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLdouble n, GLdouble f);$/;"	p	signature:(GLuint index, GLdouble n, GLdouble f)
glDepthRangedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLdouble zNear, GLdouble zFar)
glDepthRangef	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangef (GLfloat n, GLfloat f);$/;"	p	signature:(GLfloat n, GLfloat f)
glDepthRangefOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangefOES (GLclampf n, GLclampf f);$/;"	p	signature:(GLclampf n, GLclampf f)
glDepthRangexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glDepthRangexOES (GLfixed n, GLfixed f);$/;"	p	signature:(GLfixed n, GLfixed f)
glDetachObjectARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB attachedObj)
glDetachShader	.\include\GL\glext.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glDetailTexFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glDisableClientStateIndexedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glDisableClientStateiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableClientStateiEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glDisableIndexedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDisableVariantClientStateEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDisableVertexArrayAttrib	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexArrayAttrib (GLuint vaobj, GLuint index);$/;"	p	signature:(GLuint vaobj, GLuint index)
glDisableVertexArrayAttribEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p	signature:(GLuint vaobj, GLuint index)
glDisableVertexArrayEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p	signature:(GLuint vaobj, GLenum array)
glDisableVertexAttribAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glDisableVertexAttribArray	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glDisableVertexAttribArrayARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glDisablei	.\include\GL\glext.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDispatchCompute	.\include\GL\glext.h	/^GLAPI void APIENTRY glDispatchCompute (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	p	signature:(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)
glDispatchComputeGroupSizeARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDispatchComputeGroupSizeARB (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	p	signature:(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z)
glDispatchComputeIndirect	.\include\GL\glext.h	/^GLAPI void APIENTRY glDispatchComputeIndirect (GLintptr indirect);$/;"	p	signature:(GLintptr indirect)
glDrawArraysEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArraysIndirect	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const void *indirect);$/;"	p	signature:(GLenum mode, const void *indirect)
glDrawArraysInstanced	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei instancecount)
glDrawArraysInstancedARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei primcount)
glDrawArraysInstancedBaseInstance	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedBaseInstance (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance)
glDrawArraysInstancedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
glDrawBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawCommandsAddressNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawCommandsAddressNV (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	p	signature:(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count)
glDrawCommandsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawCommandsNV (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	p	signature:(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count)
glDrawCommandsStatesAddressNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawCommandsStatesAddressNV (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p	signature:(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count)
glDrawCommandsStatesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawCommandsStatesNV (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p	signature:(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count)
glDrawElementArrayAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawElementArrayATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum mode, GLsizei count);$/;"	p	signature:(GLenum mode, GLsizei count)
glDrawElementsBaseVertex	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex)
glDrawElementsIndirect	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect)
glDrawElementsInstanced	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount)
glDrawElementsInstancedARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)
glDrawElementsInstancedBaseInstance	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance)
glDrawElementsInstancedBaseVertex	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex)
glDrawElementsInstancedBaseVertexBaseInstance	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertexBaseInstance (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)
glDrawElementsInstancedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)
glDrawMeshArraysSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei width)
glDrawMeshTasksIndirectNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawMeshTasksIndirectNV (GLintptr indirect);$/;"	p	signature:(GLintptr indirect)
glDrawMeshTasksNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawMeshTasksNV (GLuint first, GLuint count);$/;"	p	signature:(GLuint first, GLuint count)
glDrawRangeElementArrayAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)
glDrawRangeElementArrayATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count)
glDrawRangeElements	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices)
glDrawRangeElementsBaseVertex	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex)
glDrawRangeElementsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices)
glDrawTextureNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTextureNV (GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	p	signature:(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1)
glDrawTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackInstanced	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackInstanced (GLenum mode, GLuint id, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLuint id, GLsizei instancecount)
glDrawTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackNV (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackStream	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	p	signature:(GLenum mode, GLuint id, GLuint stream)
glDrawTransformFeedbackStreamInstanced	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStreamInstanced (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	p	signature:(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount)
glDrawVkImageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glDrawVkImageNV (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	p	signature:(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1)
glEGLImageTargetTexStorageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEGLImageTargetTexStorageEXT (GLenum target, GLeglImageOES image, const GLint* attrib_list);$/;"	p	signature:(GLenum target, GLeglImageOES image, const GLint* attrib_list)
glEGLImageTargetTextureStorageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEGLImageTargetTextureStorageEXT (GLuint texture, GLeglImageOES image, const GLint* attrib_list);$/;"	p	signature:(GLuint texture, GLeglImageOES image, const GLint* attrib_list)
glEdgeFlagFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	p	signature:(GLsizei stride)
glEdgeFlagPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	p	signature:(GLsizei stride, GLsizei count, const GLboolean *pointer)
glEdgeFlagPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint stride, const GLboolean **pointer, GLint ptrstride);$/;"	p	signature:(GLint stride, const GLboolean **pointer, GLint ptrstride)
glElementPointerAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum type, const void *pointer);$/;"	p	signature:(GLenum type, const void *pointer)
glElementPointerATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum type, const void *pointer);$/;"	p	signature:(GLenum type, const void *pointer)
glEnableClientStateIndexedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glEnableClientStateiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableClientStateiEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glEnableIndexedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEnableVariantClientStateEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glEnableVertexArrayAttrib	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexArrayAttrib (GLuint vaobj, GLuint index);$/;"	p	signature:(GLuint vaobj, GLuint index)
glEnableVertexArrayAttribEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexArrayAttribEXT (GLuint vaobj, GLuint index);$/;"	p	signature:(GLuint vaobj, GLuint index)
glEnableVertexArrayEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexArrayEXT (GLuint vaobj, GLenum array);$/;"	p	signature:(GLuint vaobj, GLenum array)
glEnableVertexAttribAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glEnableVertexAttribArray	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glEnableVertexAttribArrayARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glEnablei	.\include\GL\glext.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndConditionalRender	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	p	signature:(void)
glEndConditionalRenderNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	p	signature:(void)
glEndConditionalRenderNVX	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndConditionalRenderNVX (void);$/;"	p	signature:(void)
glEndFragmentShaderATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	p	signature:(void)
glEndOcclusionQueryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	p	signature:(void)
glEndPerfMonitorAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glEndPerfQueryINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndPerfQueryINTEL (GLuint queryHandle);$/;"	p	signature:(GLuint queryHandle)
glEndQuery	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryIndexed	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	p	signature:(void)
glEndTransformFeedbackEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackEXT (void);$/;"	p	signature:(void)
glEndTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndTransformFeedbackNV (void);$/;"	p	signature:(void)
glEndVertexShaderEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	p	signature:(void)
glEndVideoCaptureNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEndVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glEvalCoord1xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvalCoord1xOES (GLfixed u);$/;"	p	signature:(GLfixed u)
glEvalCoord1xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvalCoord1xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glEvalCoord2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvalCoord2xOES (GLfixed u, GLfixed v);$/;"	p	signature:(GLfixed u, GLfixed v)
glEvalCoord2xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvalCoord2xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glEvalMapsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glEvaluateDepthValuesARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glEvaluateDepthValuesARB (void);$/;"	p	signature:(void)
glExecuteProgramNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint id, const GLfloat *params)
glExtractComponentEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glFeedbackBufferxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glFeedbackBufferxOES (GLsizei n, GLenum type, const GLfixed *buffer);$/;"	p	signature:(GLsizei n, GLenum type, const GLfixed *buffer)
glFenceSync	.\include\GL\glext.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	p	signature:(GLenum condition, GLbitfield flags)
glFinalCombinerInputNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glFinishAsyncSGIX	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glFinishFenceAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishFenceNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishObjectAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum object, GLint name);$/;"	p	signature:(GLenum object, GLint name)
glFinishTextureSUNX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	p	signature:(void)
glFlushMappedBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length)
glFlushMappedBufferRangeAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size)
glFlushMappedNamedBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glFlushMappedNamedBufferRangeEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glFlushPixelDataRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum target);$/;"	p	signature:(GLenum target)
glFlushRasterSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	p	signature:(void)
glFlushStaticDataIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushStaticDataIBM (GLenum target);$/;"	p	signature:(GLenum target)
glFlushVertexArrayRangeAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	p	signature:(GLsizei length, void *pointer)
glFlushVertexArrayRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	p	signature:(void)
glFogCoordFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glFogCoordPointer	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const void *pointer)
glFogCoordPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const void *pointer)
glFogCoordPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glFogCoordd	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddv	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoorddvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoordf	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordhNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);$/;"	p	signature:(GLhalfNV fog)
glFogCoordhvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);$/;"	p	signature:(const GLhalfNV *fog)
glFogFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei n, const GLfloat *points);$/;"	p	signature:(GLsizei n, const GLfloat *points)
glFogxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glFogxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glFogxvOES (GLenum pname, const GLfixed *param);$/;"	p	signature:(GLenum pname, const GLfixed *param)
glFragmentColorMaterialSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glFragmentCoverageColorNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentCoverageColorNV (GLuint color);$/;"	p	signature:(GLuint color)
glFragmentLightModelfSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glFragmentLightModelfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glFragmentLightModeliSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glFragmentLightModelivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glFragmentLightfSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat param)
glFragmentLightfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)
glFragmentLightiSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);$/;"	p	signature:(GLenum light, GLenum pname, GLint param)
glFragmentLightivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLint *params)
glFragmentMaterialfSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat param)
glFragmentMaterialfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)
glFragmentMaterialiSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);$/;"	p	signature:(GLenum face, GLenum pname, GLint param)
glFragmentMaterialivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLint *params)
glFrameTerminatorGREMEDY	.\include\GL\glext.h	/^GLAPI void APIENTRY glFrameTerminatorGREMEDY (void);$/;"	p	signature:(void)
glFrameZoomSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint factor);$/;"	p	signature:(GLint factor)
glFramebufferDrawBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferDrawBuffersEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLuint framebuffer, GLsizei n, const GLenum *bufs)
glFramebufferFetchBarrierEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferFetchBarrierEXT (void);$/;"	p	signature:(void)
glFramebufferParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glFramebufferReadBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferRenderbuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferRenderbufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferSampleLocationsfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferSampleLocationsfvARB (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint start, GLsizei count, const GLfloat *v)
glFramebufferSampleLocationsfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferSampleLocationsfvNV (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint start, GLsizei count, const GLfloat *v)
glFramebufferSamplePositionsfvAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferSamplePositionsfvAMD (GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values);$/;"	p	signature:(GLenum target, GLuint numsamples, GLuint pixelindex, const GLfloat *values)
glFramebufferTexture	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTexture1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTexture3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTextureARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureFaceARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureFaceEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureLayer	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureMultiviewOVR	.\include\GL\glext.h	/^GLAPI void APIENTRY glFramebufferTextureMultiviewOVR (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews)
glFreeObjectBufferATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glFrustumfOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glFrustumfOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	p	signature:(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)
glFrustumxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glFrustumxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	p	signature:(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f)
glGenAsyncMarkersSGIX	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenBuffersARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenFencesAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFencesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFragmentShadersATI	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint range);$/;"	p	signature:(GLuint range)
glGenFramebuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenFramebuffersEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenNamesAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenNamesAMD (GLenum identifier, GLuint num, GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, GLuint *names)
glGenOcclusionQueriesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenPathsNV	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGenPathsNV (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenPerfMonitorsAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glGenProgramPipelines	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p	signature:(GLsizei n, GLuint *pipelines)
glGenProgramsARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenProgramsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenQueries	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenQueriesARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenQueryResourceTagNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenQueryResourceTagNV (GLsizei n, GLint *tagIds);$/;"	p	signature:(GLsizei n, GLint *tagIds)
glGenRenderbuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenRenderbuffersEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenSamplers	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	p	signature:(GLsizei count, GLuint *samplers)
glGenSemaphoresEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenSemaphoresEXT (GLsizei n, GLuint *semaphores);$/;"	p	signature:(GLsizei n, GLuint *semaphores)
glGenSymbolsEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	p	signature:(GLenum datatype, GLenum storagetype, GLenum range, GLuint components)
glGenTexturesEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei n, GLuint *textures);$/;"	p	signature:(GLsizei n, GLuint *textures)
glGenTransformFeedbacks	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenTransformFeedbacksNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenTransformFeedbacksNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenVertexArrays	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexArraysAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexShadersEXT	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint range);$/;"	p	signature:(GLuint range)
glGenerateMipmap	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMipmapEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMultiTexMipmapEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	p	signature:(GLenum texunit, GLenum target)
glGenerateTextureMipmap	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenerateTextureMipmap (GLuint texture);$/;"	p	signature:(GLuint texture)
glGenerateTextureMipmapEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	p	signature:(GLuint texture, GLenum target)
glGetActiveAtomicCounterBufferiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveAtomicCounterBufferiv (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params)
glGetActiveAttrib	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveAttribARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveSubroutineName	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformName	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values)
glGetActiveUniform	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveUniformARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveUniformBlockName	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)
glGetActiveUniformBlockiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
glGetActiveUniformName	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	p	signature:(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName)
glGetActiveUniformsiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)
glGetActiveVaryingNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetArrayObjectfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum array, GLenum pname, GLfloat *params)
glGetArrayObjectivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params);$/;"	p	signature:(GLenum array, GLenum pname, GLint *params)
glGetAttachedObjectsARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	p	signature:(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)
glGetAttachedShaders	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	p	signature:(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders)
glGetAttribLocation	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetAttribLocationARB	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetBooleanIndexedvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBooleani_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBufferParameteri64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint64 *params)
glGetBufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameterivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameterui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint64EXT *params)
glGetBufferPointerv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, void **params);$/;"	p	signature:(GLenum target, GLenum pname, void **params)
glGetBufferPointervARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum target, GLenum pname, void **params);$/;"	p	signature:(GLenum target, GLenum pname, void **params)
glGetBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, void *data)
glGetBufferSubDataARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data)
glGetClipPlanefOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetClipPlanefOES (GLenum plane, GLfloat *equation);$/;"	p	signature:(GLenum plane, GLfloat *equation)
glGetClipPlanexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetClipPlanexOES (GLenum plane, GLfixed *equation);$/;"	p	signature:(GLenum plane, GLfixed *equation)
glGetColorTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTable (GLenum target, GLenum format, GLenum type, void *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *table)
glGetColorTableEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum target, GLenum format, GLenum type, void *data);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *data)
glGetColorTableParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableSGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum target, GLenum format, GLenum type, void *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *table)
glGetCombinerInputParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params)
glGetCombinerInputParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params)
glGetCombinerOutputParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLfloat *params)
glGetCombinerOutputParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLint *params)
glGetCombinerStageParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, GLfloat *params)
glGetCommandHeaderNV	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetCommandHeaderNV (GLenum tokenID, GLuint size);$/;"	p	signature:(GLenum tokenID, GLuint size)
glGetCompressedMultiTexImageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	p	signature:(GLenum texunit, GLenum target, GLint lod, void *img)
glGetCompressedTexImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, void *img);$/;"	p	signature:(GLenum target, GLint level, void *img)
glGetCompressedTexImageARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum target, GLint level, void *img);$/;"	p	signature:(GLenum target, GLint level, void *img)
glGetCompressedTextureImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedTextureImage (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLsizei bufSize, void *pixels)
glGetCompressedTextureImageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, void *img);$/;"	p	signature:(GLuint texture, GLenum target, GLint lod, void *img)
glGetCompressedTextureSubImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCompressedTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels)
glGetConvolutionFilter	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, void *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *image)
glGetConvolutionFilterEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, void *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *image)
glGetConvolutionParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetConvolutionParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetConvolutionParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetConvolutionParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glGetCoverageModulationTableNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetCoverageModulationTableNV (GLsizei bufsize, GLfloat *v);$/;"	p	signature:(GLsizei bufsize, GLfloat *v)
glGetDebugMessageLog	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDebugMessageLogAMD	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message)
glGetDebugMessageLogARB	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDetailTexFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetDoubleIndexedvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetDoublei_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetDoublei_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetDoublei_vEXT (GLenum pname, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum pname, GLuint index, GLdouble *params)
glGetFenceivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	p	signature:(GLuint fence, GLenum pname, GLint *params)
glGetFinalCombinerInputParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLfloat *params)
glGetFinalCombinerInputParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLint *params)
glGetFirstPerfQueryIdINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFirstPerfQueryIdINTEL (GLuint *queryId);$/;"	p	signature:(GLuint *queryId)
glGetFixedvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFixedvOES (GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum pname, GLfixed *params)
glGetFloatIndexedvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloati_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloati_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFloati_vEXT (GLenum pname, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *params)
glGetFogFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *points);$/;"	p	signature:(GLfloat *points)
glGetFragDataIndex	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocation	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocationEXT	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetFragDataLocationEXT (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragmentLightfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetFragmentLightivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, GLint *params)
glGetFragmentMaterialfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat *params)
glGetFragmentMaterialivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferParameterfvAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFramebufferParameterfvAMD (GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);$/;"	p	signature:(GLenum target, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values)
glGetFramebufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFramebufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetFramebufferParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *params)
glGetGraphicsResetStatus	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatus (void);$/;"	p	signature:(void)
glGetGraphicsResetStatusARB	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	p	signature:(void)
glGetHandleARB	.\include\GL\glext.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum pname);$/;"	p	signature:(GLenum pname)
glGetHistogram	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values)
glGetHistogramEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values)
glGetHistogramParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetHistogramParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetHistogramParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetHistogramParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glGetImageHandleARB	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleARB (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	p	signature:(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)
glGetImageHandleNV	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetImageHandleNV (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	p	signature:(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)
glGetImageTransformParameterfvHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetImageTransformParameterivHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetInfoLogARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)
glGetInstrumentsSGIX	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	p	signature:(void)
glGetInteger64i_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	p	signature:(GLenum target, GLuint index, GLint64 *data)
glGetInteger64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *data);$/;"	p	signature:(GLenum pname, GLint64 *data)
glGetIntegerIndexedvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegeri_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegerui64i_vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint index, GLuint64EXT *result)
glGetIntegerui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint64EXT *result)
glGetInternalformatSampleivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInternalformatSampleivNV (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params)
glGetInternalformati64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInternalformati64v (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params)
glGetInternalformativ	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInternalformativ (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params)
glGetInvariantBooleanvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetInvariantFloatvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetInvariantIntegervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetLightxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetLightxOES (GLenum light, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed *params)
glGetListParameterfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat *params)
glGetListParameterivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, GLint *params)
glGetLocalConstantBooleanvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetLocalConstantFloatvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetLocalConstantIntegervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetMapAttribParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetMapAttribParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetMapControlPointsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points)
glGetMapParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMapParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMapxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMapxvOES (GLenum target, GLenum query, GLfixed *v);$/;"	p	signature:(GLenum target, GLenum query, GLfixed *v)
glGetMaterialxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed param)
glGetMemoryObjectDetachedResourcesuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMemoryObjectDetachedResourcesuivNV (GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params);$/;"	p	signature:(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params)
glGetMemoryObjectParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMemoryObjectParameterivEXT (GLuint memoryObject, GLenum pname, GLint *params);$/;"	p	signature:(GLuint memoryObject, GLenum pname, GLint *params)
glGetMinmax	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values)
glGetMinmaxEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values)
glGetMinmaxParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMinmaxParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMultiTexEnvfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexEnvivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexGendvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params)
glGetMultiTexGenfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params)
glGetMultiTexGenivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint *params)
glGetMultiTexImageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels)
glGetMultiTexLevelParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetMultiTexLevelParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params)
glGetMultiTexParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLuint *params)
glGetMultiTexParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultisamplefv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetMultisamplefvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetNamedBufferParameteri64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameteri64v (GLuint buffer, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint64 *params)
glGetNamedBufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameteriv (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetNamedBufferParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetNamedBufferParameterui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLuint64EXT *params)
glGetNamedBufferPointerv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferPointerv (GLuint buffer, GLenum pname, void **params);$/;"	p	signature:(GLuint buffer, GLenum pname, void **params)
glGetNamedBufferPointervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, void **params);$/;"	p	signature:(GLuint buffer, GLenum pname, void **params)
glGetNamedBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data)
glGetNamedBufferSubDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data)
glGetNamedFramebufferAttachmentParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameteriv (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params)
glGetNamedFramebufferAttachmentParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params)
glGetNamedFramebufferParameterfvAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterfvAMD (GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLuint numsamples, GLuint pixelindex, GLsizei size, GLfloat *values)
glGetNamedFramebufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameteriv (GLuint framebuffer, GLenum pname, GLint *param);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *param)
glGetNamedFramebufferParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *params)
glGetNamedProgramLocalParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint *params)
glGetNamedProgramLocalParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint *params)
glGetNamedProgramLocalParameterdvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble *params)
glGetNamedProgramLocalParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat *params)
glGetNamedProgramStringEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, void *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, void *string)
glGetNamedProgramivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, GLint *params)
glGetNamedRenderbufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameteriv (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint renderbuffer, GLenum pname, GLint *params)
glGetNamedRenderbufferParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint renderbuffer, GLenum pname, GLint *params)
glGetNamedStringARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	p	signature:(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string)
glGetNamedStringivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	p	signature:(GLint namelen, const GLchar *name, GLenum pname, GLint *params)
glGetNextPerfQueryIdINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetNextPerfQueryIdINTEL (GLuint queryId, GLuint *nextQueryId);$/;"	p	signature:(GLuint queryId, GLuint *nextQueryId)
glGetObjectBufferfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLfloat *params)
glGetObjectBufferivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetObjectLabel	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetObjectLabelEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetObjectParameterfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLfloat *params)
glGetObjectParameterivAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum pname, GLint *params)
glGetObjectParameterivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLint *params)
glGetObjectPtrLabel	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetOcclusionQueryivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetOcclusionQueryuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetPathColorGenfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathColorGenfvNV (GLenum color, GLenum pname, GLfloat *value);$/;"	p	signature:(GLenum color, GLenum pname, GLfloat *value)
glGetPathColorGenivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathColorGenivNV (GLenum color, GLenum pname, GLint *value);$/;"	p	signature:(GLenum color, GLenum pname, GLint *value)
glGetPathCommandsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathCommandsNV (GLuint path, GLubyte *commands);$/;"	p	signature:(GLuint path, GLubyte *commands)
glGetPathCoordsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathCoordsNV (GLuint path, GLfloat *coords);$/;"	p	signature:(GLuint path, GLfloat *coords)
glGetPathDashArrayNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathDashArrayNV (GLuint path, GLfloat *dashArray);$/;"	p	signature:(GLuint path, GLfloat *dashArray)
glGetPathLengthNV	.\include\GL\glext.h	/^GLAPI GLfloat APIENTRY glGetPathLengthNV (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	p	signature:(GLuint path, GLsizei startSegment, GLsizei numSegments)
glGetPathMetricRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathMetricRangeNV (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	p	signature:(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics)
glGetPathMetricsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathMetricsNV (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	p	signature:(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics)
glGetPathParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathParameterfvNV (GLuint path, GLenum pname, GLfloat *value);$/;"	p	signature:(GLuint path, GLenum pname, GLfloat *value)
glGetPathParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathParameterivNV (GLuint path, GLenum pname, GLint *value);$/;"	p	signature:(GLuint path, GLenum pname, GLint *value)
glGetPathSpacingNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathSpacingNV (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	p	signature:(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing)
glGetPathTexGenfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathTexGenfvNV (GLenum texCoordSet, GLenum pname, GLfloat *value);$/;"	p	signature:(GLenum texCoordSet, GLenum pname, GLfloat *value)
glGetPathTexGenivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPathTexGenivNV (GLenum texCoordSet, GLenum pname, GLint *value);$/;"	p	signature:(GLenum texCoordSet, GLenum pname, GLint *value)
glGetPerfCounterInfoINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfCounterInfoINTEL (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	p	signature:(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue)
glGetPerfMonitorCounterDataAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	p	signature:(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)
glGetPerfMonitorCounterInfoAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	p	signature:(GLuint group, GLuint counter, GLenum pname, void *data)
glGetPerfMonitorCounterStringAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	p	signature:(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)
glGetPerfMonitorCountersAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	p	signature:(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)
glGetPerfMonitorGroupStringAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	p	signature:(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)
glGetPerfMonitorGroupsAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	p	signature:(GLint *numGroups, GLsizei groupsSize, GLuint *groups)
glGetPerfQueryDataINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfQueryDataINTEL (GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten);$/;"	p	signature:(GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten)
glGetPerfQueryIdByNameINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfQueryIdByNameINTEL (GLchar *queryName, GLuint *queryId);$/;"	p	signature:(GLchar *queryName, GLuint *queryId)
glGetPerfQueryInfoINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPerfQueryInfoINTEL (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	p	signature:(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask)
glGetPixelMapxv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPixelMapxv (GLenum map, GLint size, GLfixed *values);$/;"	p	signature:(GLenum map, GLint size, GLfixed *values)
glGetPixelTexGenParameterfvSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glGetPixelTexGenParameterivSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params);$/;"	p	signature:(GLenum pname, GLint *params)
glGetPixelTransformParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetPixelTransformParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPixelTransformParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetPointerIndexedvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, void **data);$/;"	p	signature:(GLenum target, GLuint index, void **data)
glGetPointeri_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPointeri_vEXT (GLenum pname, GLuint index, void **params);$/;"	p	signature:(GLenum pname, GLuint index, void **params)
glGetPointervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum pname, void **params);$/;"	p	signature:(GLenum pname, void **params)
glGetProgramBinary	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary)
glGetProgramEnvParameterIivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramEnvParameterIuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramEnvParameterdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramEnvParameterfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramInfoLog	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramInterfaceiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramInterfaceiv (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum programInterface, GLenum pname, GLint *params)
glGetProgramLocalParameterIivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramLocalParameterIuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramLocalParameterdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramLocalParameterfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramNamedParameterdvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params)
glGetProgramNamedParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params)
glGetProgramParameterdvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLdouble *params)
glGetProgramParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetProgramPipelineInfoLog	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramPipelineiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	p	signature:(GLuint pipeline, GLenum pname, GLint *params)
glGetProgramResourceIndex	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetProgramResourceIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceLocation	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocation (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceLocationIndex	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetProgramResourceLocationIndex (GLuint program, GLenum programInterface, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, const GLchar *name)
glGetProgramResourceName	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramResourceName (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)
glGetProgramResourcefvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramResourcefvNV (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);$/;"	p	signature:(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params)
glGetProgramResourceiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramResourceiv (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	p	signature:(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params)
glGetProgramStageiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLenum pname, GLint *values)
glGetProgramStringARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum target, GLenum pname, void *string);$/;"	p	signature:(GLenum target, GLenum pname, void *string)
glGetProgramStringNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program);$/;"	p	signature:(GLuint id, GLenum pname, GLubyte *program)
glGetProgramSubroutineParameteruivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint *param);$/;"	p	signature:(GLenum target, GLuint index, GLuint *param)
glGetProgramiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum pname, GLint *params)
glGetProgramivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetProgramivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryBufferObjecti64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryBufferObjecti64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p	signature:(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
glGetQueryBufferObjectiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryBufferObjectiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p	signature:(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
glGetQueryBufferObjectui64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryBufferObjectui64v (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p	signature:(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
glGetQueryBufferObjectuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryBufferObjectuiv (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	p	signature:(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
glGetQueryIndexediv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetQueryObjecti64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64 *params)
glGetQueryObjecti64vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64 *params)
glGetQueryObjectiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectui64v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64 *params)
glGetQueryObjectui64vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64 *params)
glGetQueryObjectuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryObjectuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetQueryivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetSamplerParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSamplerParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLuint *params)
glGetSamplerParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat *params)
glGetSamplerParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSemaphoreParameterui64vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSemaphoreParameterui64vEXT (GLuint semaphore, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint semaphore, GLenum pname, GLuint64 *params)
glGetSeparableFilter	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span)
glGetSeparableFilterEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span)
glGetShaderInfoLog	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetShaderPrecisionFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	p	signature:(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)
glGetShaderSource	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
glGetShaderSourceARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)
glGetShaderiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	p	signature:(GLuint shader, GLenum pname, GLint *params)
glGetShadingRateImagePaletteNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShadingRateImagePaletteNV (GLuint viewport, GLuint entry, GLenum *rate);$/;"	p	signature:(GLuint viewport, GLuint entry, GLenum *rate)
glGetShadingRateSampleLocationivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetShadingRateSampleLocationivNV (GLenum rate, GLuint samples, GLuint index, GLint *location);$/;"	p	signature:(GLenum rate, GLuint samples, GLuint index, GLint *location)
glGetSharpenTexFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetStageIndexNV	.\include\GL\glext.h	/^GLAPI GLushort APIENTRY glGetStageIndexNV (GLenum shadertype);$/;"	p	signature:(GLenum shadertype)
glGetStringi	.\include\GL\glext.h	/^GLAPI const GLubyte *APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	p	signature:(GLenum name, GLuint index)
glGetSubroutineIndex	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSubroutineUniformLocation	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSynciv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glGetTexBumpParameterfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);$/;"	p	signature:(GLenum pname, GLfloat *param)
glGetTexBumpParameterivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum pname, GLint *param);$/;"	p	signature:(GLenum pname, GLint *param)
glGetTexEnvxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexEnvxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glGetTexFilterFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLfloat *weights)
glGetTexGenxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexGenxvOES (GLenum coord, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum coord, GLenum pname, GLfixed *params)
glGetTexLevelParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexLevelParameterxvOES (GLenum target, GLint level, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLint level, GLenum pname, GLfixed *params)
glGetTexParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterPointervAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, void **params);$/;"	p	signature:(GLenum target, GLenum pname, void **params)
glGetTexParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTexParameterxvOES (GLenum target, GLenum pname, GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed *params)
glGetTextureHandleARB	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleARB (GLuint texture);$/;"	p	signature:(GLuint texture)
glGetTextureHandleNV	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureHandleNV (GLuint texture);$/;"	p	signature:(GLuint texture)
glGetTextureImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureImage (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels)
glGetTextureImageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels)
glGetTextureLevelParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfv (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLint level, GLenum pname, GLfloat *params)
glGetTextureLevelParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetTextureLevelParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameteriv (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLint level, GLenum pname, GLint *params)
glGetTextureLevelParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params)
glGetTextureParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterIiv (GLuint texture, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum pname, GLint *params)
glGetTextureParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTextureParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterIuiv (GLuint texture, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint texture, GLenum pname, GLuint *params)
glGetTextureParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLuint *params)
glGetTextureParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterfv (GLuint texture, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum pname, GLfloat *params)
glGetTextureParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat *params)
glGetTextureParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameteriv (GLuint texture, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum pname, GLint *params)
glGetTextureParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTextureSamplerHandleARB	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleARB (GLuint texture, GLuint sampler);$/;"	p	signature:(GLuint texture, GLuint sampler)
glGetTextureSamplerHandleNV	.\include\GL\glext.h	/^GLAPI GLuint64 APIENTRY glGetTextureSamplerHandleNV (GLuint texture, GLuint sampler);$/;"	p	signature:(GLuint texture, GLuint sampler)
glGetTextureSubImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTextureSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels)
glGetTrackMatrixivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint address, GLenum pname, GLint *params)
glGetTransformFeedbackVarying	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location);$/;"	p	signature:(GLuint program, GLuint index, GLint *location)
glGetTransformFeedbacki64_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbacki64_v (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	p	signature:(GLuint xfb, GLenum pname, GLuint index, GLint64 *param)
glGetTransformFeedbacki_v	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbacki_v (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	p	signature:(GLuint xfb, GLenum pname, GLuint index, GLint *param)
glGetTransformFeedbackiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetTransformFeedbackiv (GLuint xfb, GLenum pname, GLint *param);$/;"	p	signature:(GLuint xfb, GLenum pname, GLint *param)
glGetUniformBlockIndex	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, const GLchar *uniformBlockName)
glGetUniformBufferSizeEXT	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetUniformBufferSizeEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformIndices	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices)
glGetUniformLocation	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetUniformLocationARB	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetUniformOffsetEXT	.\include\GL\glext.h	/^GLAPI GLintptr APIENTRY glGetUniformOffsetEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformSubroutineuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);$/;"	p	signature:(GLenum shadertype, GLint location, GLuint *params)
glGetUniformdv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLdouble *params)
glGetUniformfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLfloat *params)
glGetUniformfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLfloat *params)
glGetUniformi64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformi64vARB (GLuint program, GLint location, GLint64 *params);$/;"	p	signature:(GLuint program, GLint location, GLint64 *params)
glGetUniformi64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT *params)
glGetUniformiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLint *params)
glGetUniformivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLint *params)
glGetUniformui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformui64vARB (GLuint program, GLint location, GLuint64 *params);$/;"	p	signature:(GLuint program, GLint location, GLuint64 *params)
glGetUniformui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT *params)
glGetUniformuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetUniformuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetUnsignedBytei_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUnsignedBytei_vEXT (GLenum target, GLuint index, GLubyte *data);$/;"	p	signature:(GLenum target, GLuint index, GLubyte *data)
glGetUnsignedBytevEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetUnsignedBytevEXT (GLenum pname, GLubyte *data);$/;"	p	signature:(GLenum pname, GLubyte *data)
glGetVariantArrayObjectfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint id, GLenum pname, GLfloat *params)
glGetVariantArrayObjectivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetVariantBooleanvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetVariantFloatvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetVariantIntegervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetVariantPointervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint id, GLenum value, void **data);$/;"	p	signature:(GLuint id, GLenum value, void **data)
glGetVaryingLocationNV	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glGetVaryingLocationNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetVertexArrayIndexed64iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayIndexed64iv (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	p	signature:(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param)
glGetVertexArrayIndexediv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayIndexediv (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	p	signature:(GLuint vaobj, GLuint index, GLenum pname, GLint *param)
glGetVertexArrayIntegeri_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	p	signature:(GLuint vaobj, GLuint index, GLenum pname, GLint *param)
glGetVertexArrayIntegervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayIntegervEXT (GLuint vaobj, GLenum pname, GLint *param);$/;"	p	signature:(GLuint vaobj, GLenum pname, GLint *param)
glGetVertexArrayPointeri_vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointeri_vEXT (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	p	signature:(GLuint vaobj, GLuint index, GLenum pname, void **param)
glGetVertexArrayPointervEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayPointervEXT (GLuint vaobj, GLenum pname, void **param);$/;"	p	signature:(GLuint vaobj, GLenum pname, void **param)
glGetVertexArrayiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexArrayiv (GLuint vaobj, GLenum pname, GLint *param);$/;"	p	signature:(GLuint vaobj, GLenum pname, GLint *param)
glGetVertexAttribArrayObjectfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribArrayObjectivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribLdv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLdvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLi64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint64EXT *params)
glGetVertexAttribLui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vARB (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint64EXT *params)
glGetVertexAttribLui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint64EXT *params)
glGetVertexAttribPointerv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, void **pointer);$/;"	p	signature:(GLuint index, GLenum pname, void **pointer)
glGetVertexAttribPointervARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint index, GLenum pname, void **pointer);$/;"	p	signature:(GLuint index, GLenum pname, void **pointer)
glGetVertexAttribPointervNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint index, GLenum pname, void **pointer);$/;"	p	signature:(GLuint index, GLenum pname, void **pointer)
glGetVertexAttribdv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVideoCaptureStreamdvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params)
glGetVideoCaptureStreamfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params)
glGetVideoCaptureStreamivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params)
glGetVideoCaptureivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLenum pname, GLint *params)
glGetVideoi64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint64EXT *params)
glGetVideoivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoivNV (GLuint video_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint *params)
glGetVideoui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint64EXT *params)
glGetVideouivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint *params)
glGetVkProcAddrNV	.\include\GL\glext.h	/^GLAPI GLVULKANPROCNV APIENTRY glGetVkProcAddrNV (const GLchar *name);$/;"	p	signature:(const GLchar *name)
glGetnColorTable	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnColorTable (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table)
glGetnColorTableARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table)
glGetnCompressedTexImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnCompressedTexImage (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLenum target, GLint lod, GLsizei bufSize, void *pixels)
glGetnCompressedTexImageARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	p	signature:(GLenum target, GLint lod, GLsizei bufSize, void *img)
glGetnConvolutionFilter	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnConvolutionFilter (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image)
glGetnConvolutionFilterARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image)
glGetnHistogram	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values)
glGetnHistogramARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values)
glGetnMapdv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapdv (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v)
glGetnMapdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v)
glGetnMapfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapfv (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v)
glGetnMapfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v)
glGetnMapiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapiv (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLint *v)
glGetnMapivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLint *v)
glGetnMinmax	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values)
glGetnMinmaxARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values)
glGetnPixelMapfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapfv (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLfloat *values)
glGetnPixelMapfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLfloat *values)
glGetnPixelMapuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapuiv (GLenum map, GLsizei bufSize, GLuint *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLuint *values)
glGetnPixelMapuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLuint *values)
glGetnPixelMapusv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapusv (GLenum map, GLsizei bufSize, GLushort *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLushort *values)
glGetnPixelMapusvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLushort *values)
glGetnPolygonStipple	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPolygonStipple (GLsizei bufSize, GLubyte *pattern);$/;"	p	signature:(GLsizei bufSize, GLubyte *pattern)
glGetnPolygonStippleARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnPolygonStippleARB (GLsizei bufSize, GLubyte *pattern);$/;"	p	signature:(GLsizei bufSize, GLubyte *pattern)
glGetnSeparableFilter	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnSeparableFilter (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span)
glGetnSeparableFilterARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span)
glGetnTexImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels)
glGetnTexImageARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img)
glGetnUniformdv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformdv (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
glGetnUniformdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
glGetnUniformfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformfv (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
glGetnUniformfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
glGetnUniformi64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformi64vARB (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint64 *params)
glGetnUniformiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformiv (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint *params)
glGetnUniformivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint *params)
glGetnUniformui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformui64vARB (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params)
glGetnUniformuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformuiv (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
glGetnUniformuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
glGlobalAlphaFactorbSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte factor);$/;"	p	signature:(GLbyte factor)
glGlobalAlphaFactordSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble factor);$/;"	p	signature:(GLdouble factor)
glGlobalAlphaFactorfSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glGlobalAlphaFactoriSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint factor);$/;"	p	signature:(GLint factor)
glGlobalAlphaFactorsSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort factor);$/;"	p	signature:(GLshort factor)
glGlobalAlphaFactorubSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte factor);$/;"	p	signature:(GLubyte factor)
glGlobalAlphaFactoruiSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint factor);$/;"	p	signature:(GLuint factor)
glGlobalAlphaFactorusSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort factor);$/;"	p	signature:(GLushort factor)
glHintPGI	.\include\GL\glext.h	/^GLAPI void APIENTRY glHintPGI (GLenum target, GLint mode);$/;"	p	signature:(GLenum target, GLint mode)
glHistogram	.\include\GL\glext.h	/^GLAPI void APIENTRY glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glHistogramEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glIglooInterfaceSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum pname, const void *params);$/;"	p	signature:(GLenum pname, const void *params)
glImageTransformParameterfHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glImageTransformParameterfvHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glImageTransformParameteriHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glImageTransformParameterivHP	.\include\GL\glext.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glImportMemoryFdEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportMemoryFdEXT (GLuint memory, GLuint64 size, GLenum handleType, GLint fd);$/;"	p	signature:(GLuint memory, GLuint64 size, GLenum handleType, GLint fd)
glImportMemoryWin32HandleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportMemoryWin32HandleEXT (GLuint memory, GLuint64 size, GLenum handleType, void *handle);$/;"	p	signature:(GLuint memory, GLuint64 size, GLenum handleType, void *handle)
glImportMemoryWin32NameEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportMemoryWin32NameEXT (GLuint memory, GLuint64 size, GLenum handleType, const void *name);$/;"	p	signature:(GLuint memory, GLuint64 size, GLenum handleType, const void *name)
glImportSemaphoreFdEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportSemaphoreFdEXT (GLuint semaphore, GLenum handleType, GLint fd);$/;"	p	signature:(GLuint semaphore, GLenum handleType, GLint fd)
glImportSemaphoreWin32HandleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportSemaphoreWin32HandleEXT (GLuint semaphore, GLenum handleType, void *handle);$/;"	p	signature:(GLuint semaphore, GLenum handleType, void *handle)
glImportSemaphoreWin32NameEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glImportSemaphoreWin32NameEXT (GLuint semaphore, GLenum handleType, const void *name);$/;"	p	signature:(GLuint semaphore, GLenum handleType, const void *name)
glImportSyncEXT	.\include\GL\glext.h	/^GLAPI GLsync APIENTRY glImportSyncEXT (GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);$/;"	p	signature:(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags)
glIndexFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glIndexFuncEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glIndexMaterialEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glIndexPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const void *pointer)
glIndexPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glIndexxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexxOES (GLfixed component);$/;"	p	signature:(GLfixed component)
glIndexxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glIndexxvOES (const GLfixed *component);$/;"	p	signature:(const GLfixed *component)
glInsertComponentEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glInsertEventMarkerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	signature:(GLsizei length, const GLchar *marker)
glInstrumentsBufferSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei size, GLint *buffer);$/;"	p	signature:(GLsizei size, GLint *buffer)
glInterpolatePathsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glInterpolatePathsNV (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	p	signature:(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight)
glInvalidateBufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateBufferData (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glInvalidateBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glInvalidateFramebuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	p	signature:(GLenum target, GLsizei numAttachments, const GLenum *attachments)
glInvalidateNamedFramebufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateNamedFramebufferData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	p	signature:(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments)
glInvalidateNamedFramebufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateNamedFramebufferSubData (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height)
glInvalidateSubFramebuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateSubFramebuffer (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height)
glInvalidateTexImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateTexImage (GLuint texture, GLint level);$/;"	p	signature:(GLuint texture, GLint level)
glInvalidateTexSubImage	.\include\GL\glext.h	/^GLAPI void APIENTRY glInvalidateTexSubImage (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth)
glIsAsyncMarkerSGIX	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glIsBuffer	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferResidentNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glIsCommandListNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsCommandListNV (GLuint list);$/;"	p	signature:(GLuint list)
glIsEnabledIndexedEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsEnabledi	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsFenceAPPLE	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFenceNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFramebuffer	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsFramebufferEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsImageHandleResidentARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentARB (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsImageHandleResidentNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsImageHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsMemoryObjectEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsMemoryObjectEXT (GLuint memoryObject);$/;"	p	signature:(GLuint memoryObject)
glIsNameAMD	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsNameAMD (GLenum identifier, GLuint name);$/;"	p	signature:(GLenum identifier, GLuint name)
glIsNamedBufferResidentNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsNamedStringARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glIsObjectBufferATI	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsOcclusionQueryNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsPathNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsPathNV (GLuint path);$/;"	p	signature:(GLuint path)
glIsPointInFillPathNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsPointInFillPathNV (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint path, GLuint mask, GLfloat x, GLfloat y)
glIsPointInStrokePathNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsPointInStrokePathNV (GLuint path, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint path, GLfloat x, GLfloat y)
glIsProgram	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsProgramPipeline	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glIsQuery	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	p	signature:(GLuint id)
glIsQueryARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint id);$/;"	p	signature:(GLuint id)
glIsRenderbuffer	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsRenderbufferEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsSampler	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	p	signature:(GLuint sampler)
glIsSemaphoreEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsSemaphoreEXT (GLuint semaphore);$/;"	p	signature:(GLuint semaphore)
glIsShader	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glIsStateNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsStateNV (GLuint state);$/;"	p	signature:(GLuint state)
glIsSync	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glIsTextureEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint texture);$/;"	p	signature:(GLuint texture)
glIsTextureHandleResidentARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentARB (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsTextureHandleResidentNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsTextureHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glIsTransformFeedback	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	p	signature:(GLuint id)
glIsTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedbackNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsVariantEnabledEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint id, GLenum cap);$/;"	p	signature:(GLuint id, GLenum cap)
glIsVertexArray	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexArrayAPPLE	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexAttribEnabledAPPLE	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glLGPUCopyImageSubDataNVX	.\include\GL\glext.h	/^GLAPI void APIENTRY glLGPUCopyImageSubDataNVX (GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint sourceGpu, GLbitfield destinationGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srxY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
glLGPUInterlockNVX	.\include\GL\glext.h	/^GLAPI void APIENTRY glLGPUInterlockNVX (void);$/;"	p	signature:(void)
glLGPUNamedBufferSubDataNVX	.\include\GL\glext.h	/^GLAPI void APIENTRY glLGPUNamedBufferSubDataNVX (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data)
glLabelObjectEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	p	signature:(GLenum type, GLuint object, GLsizei length, const GLchar *label)
glLightEnviSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glLightModelxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLightModelxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glLightModelxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLightModelxvOES (GLenum pname, const GLfixed *param);$/;"	p	signature:(GLenum pname, const GLfixed *param)
glLightxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLightxOES (GLenum light, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum light, GLenum pname, GLfixed param)
glLightxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLightxvOES (GLenum light, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfixed *params)
glLineWidthxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLineWidthxOES (GLfixed width);$/;"	p	signature:(GLfixed width)
glLinkProgram	.\include\GL\glext.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	p	signature:(GLuint program)
glLinkProgramARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glListDrawCommandsStatesClientNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glListDrawCommandsStatesClientNV (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	p	signature:(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count)
glListParameterfSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat param)
glListParameterfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLfloat *params)
glListParameteriSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint list, GLenum pname, GLint param);$/;"	p	signature:(GLuint list, GLenum pname, GLint param)
glListParameterivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint list, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLint *params)
glLoadIdentityDeformationMapSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glLoadMatrixxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glLoadProgramNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	p	signature:(GLenum target, GLuint id, GLsizei len, const GLubyte *program)
glLoadTransposeMatrixd	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixdARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixf	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadTransposeMatrixfARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadTransposeMatrixxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glLoadTransposeMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glLockArraysEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint first, GLsizei count);$/;"	p	signature:(GLint first, GLsizei count)
glMakeBufferNonResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glMakeBufferResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMakeImageHandleNonResidentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentARB (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeImageHandleNonResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeImageHandleNonResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeImageHandleResidentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentARB (GLuint64 handle, GLenum access);$/;"	p	signature:(GLuint64 handle, GLenum access)
glMakeImageHandleResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeImageHandleResidentNV (GLuint64 handle, GLenum access);$/;"	p	signature:(GLuint64 handle, GLenum access)
glMakeNamedBufferNonResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMakeNamedBufferResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMakeTextureHandleNonResidentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentARB (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeTextureHandleNonResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeTextureHandleNonResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeTextureHandleResidentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentARB (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMakeTextureHandleResidentNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMakeTextureHandleResidentNV (GLuint64 handle);$/;"	p	signature:(GLuint64 handle)
glMap1xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMap1xOES (GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);$/;"	p	signature:(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points)
glMap2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMap2xOES (GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);$/;"	p	signature:(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points)
glMapBuffer	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferARB	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapBufferARB (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferRange	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapControlPointsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points)
glMapGrid1xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapGrid1xOES (GLint n, GLfixed u1, GLfixed u2);$/;"	p	signature:(GLint n, GLfixed u1, GLfixed u2)
glMapGrid2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapGrid2xOES (GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);$/;"	p	signature:(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2)
glMapNamedBuffer	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapNamedBuffer (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMapNamedBufferEXT	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMapNamedBufferRange	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapNamedBufferRangeEXT	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapObjectBufferATI	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMapParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glMapParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glMapTexture2DINTEL	.\include\GL\glext.h	/^GLAPI void *APIENTRY glMapTexture2DINTEL (GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);$/;"	p	signature:(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout)
glMapVertexAttrib1dAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
glMapVertexAttrib1fAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
glMapVertexAttrib2dAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
glMapVertexAttrib2fAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
glMaterialxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMaterialxOES (GLenum face, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum face, GLenum pname, GLfixed param)
glMaterialxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMaterialxvOES (GLenum face, GLenum pname, const GLfixed *param);$/;"	p	signature:(GLenum face, GLenum pname, const GLfixed *param)
glMatrixFrustumEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixIndexPointerARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const void *pointer)
glMatrixIndexubvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint size, const GLubyte *indices);$/;"	p	signature:(GLint size, const GLubyte *indices)
glMatrixIndexuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint size, const GLuint *indices);$/;"	p	signature:(GLint size, const GLuint *indices)
glMatrixIndexusvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint size, const GLushort *indices);$/;"	p	signature:(GLint size, const GLushort *indices)
glMatrixLoad3x2fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoad3x2fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixLoad3x3fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoad3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixLoadIdentityEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixLoadTranspose3x3fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoadTranspose3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixLoadTransposedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadTransposefEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixLoaddEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMult3x2fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMult3x2fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixMult3x3fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMult3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixMultTranspose3x3fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMultTranspose3x3fNV (GLenum matrixMode, const GLfloat *m);$/;"	p	signature:(GLenum matrixMode, const GLfloat *m)
glMatrixMultTransposedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultTransposefEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMultdEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixOrthoEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixPopEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixPushEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixRotatedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
glMatrixRotatefEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
glMatrixScaledEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixScalefEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMatrixTranslatedEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixTranslatefEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMaxShaderCompilerThreadsARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMaxShaderCompilerThreadsARB (GLuint count);$/;"	p	signature:(GLuint count)
glMaxShaderCompilerThreadsKHR	.\include\GL\glext.h	/^GLAPI void APIENTRY glMaxShaderCompilerThreadsKHR (GLuint count);$/;"	p	signature:(GLuint count)
glMemoryBarrier	.\include\GL\glext.h	/^GLAPI void APIENTRY glMemoryBarrier (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMemoryBarrierByRegion	.\include\GL\glext.h	/^GLAPI void APIENTRY glMemoryBarrierByRegion (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMemoryBarrierEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMemoryObjectParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMemoryObjectParameterivEXT (GLuint memoryObject, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint memoryObject, GLenum pname, const GLint *params)
glMinSampleShading	.\include\GL\glext.h	/^GLAPI void APIENTRY glMinSampleShading (GLfloat value);$/;"	p	signature:(GLfloat value)
glMinSampleShadingARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLfloat value);$/;"	p	signature:(GLfloat value)
glMinmax	.\include\GL\glext.h	/^GLAPI void APIENTRY glMinmax (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMinmaxEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMultMatrixxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glMultTransposeMatrixd	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixdARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixf	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultTransposeMatrixfARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultTransposeMatrixxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultTransposeMatrixxOES (const GLfixed *m);$/;"	p	signature:(const GLfixed *m)
glMultiDrawArrays	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount)
glMultiDrawArraysEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawArraysIndirect	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirect (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride)
glMultiDrawArraysIndirectAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectAMD (GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride)
glMultiDrawArraysIndirectBindlessCountNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessCountNV (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p	signature:(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount)
glMultiDrawArraysIndirectBindlessNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectBindlessNV (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p	signature:(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount)
glMultiDrawArraysIndirectCount	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCount (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)
glMultiDrawArraysIndirectCountARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawArraysIndirectCountARB (GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)
glMultiDrawElementArrayAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawElements	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount)
glMultiDrawElementsBaseVertex	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex)
glMultiDrawElementsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount)
glMultiDrawElementsIndirect	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirect (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride)
glMultiDrawElementsIndirectAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectAMD (GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride)
glMultiDrawElementsIndirectBindlessCountNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessCountNV (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount)
glMultiDrawElementsIndirectBindlessNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectBindlessNV (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount)
glMultiDrawElementsIndirectCount	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCount (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)
glMultiDrawElementsIndirectCountARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawElementsIndirectCountARB (GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p	signature:(GLenum mode, GLenum type, const void *indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)
glMultiDrawMeshTasksIndirectCountNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawMeshTasksIndirectCountNV (GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	p	signature:(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)
glMultiDrawMeshTasksIndirectNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawMeshTasksIndirectNV (GLintptr indirect, GLsizei drawcount, GLsizei stride);$/;"	p	signature:(GLintptr indirect, GLsizei drawcount, GLsizei stride)
glMultiDrawRangeElementArrayAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiModeDrawArraysIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride)
glMultiModeDrawElementsIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride)
glMultiTexBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer)
glMultiTexCoord1bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bOES (GLenum texture, GLbyte s);$/;"	p	signature:(GLenum texture, GLbyte s)
glMultiTexCoord1bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1bvOES (GLenum texture, const GLbyte *coords);$/;"	p	signature:(GLenum texture, const GLbyte *coords)
glMultiTexCoord1d	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1f	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum target, GLhalfNV s);$/;"	p	signature:(GLenum target, GLhalfNV s)
glMultiTexCoord1hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord1i	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1s	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord1svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord1xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xOES (GLenum texture, GLfixed s);$/;"	p	signature:(GLenum texture, GLfixed s)
glMultiTexCoord1xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord1xvOES (GLenum texture, const GLfixed *coords);$/;"	p	signature:(GLenum texture, const GLfixed *coords)
glMultiTexCoord2bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bOES (GLenum texture, GLbyte s, GLbyte t);$/;"	p	signature:(GLenum texture, GLbyte s, GLbyte t)
glMultiTexCoord2bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2bvOES (GLenum texture, const GLbyte *coords);$/;"	p	signature:(GLenum texture, const GLbyte *coords)
glMultiTexCoord2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2f	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t)
glMultiTexCoord2hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord2i	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2s	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xOES (GLenum texture, GLfixed s, GLfixed t);$/;"	p	signature:(GLenum texture, GLfixed s, GLfixed t)
glMultiTexCoord2xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord2xvOES (GLenum texture, const GLfixed *coords);$/;"	p	signature:(GLenum texture, const GLfixed *coords)
glMultiTexCoord3bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r);$/;"	p	signature:(GLenum texture, GLbyte s, GLbyte t, GLbyte r)
glMultiTexCoord3bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3bvOES (GLenum texture, const GLbyte *coords);$/;"	p	signature:(GLenum texture, const GLbyte *coords)
glMultiTexCoord3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)
glMultiTexCoord3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3s	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r);$/;"	p	signature:(GLenum texture, GLfixed s, GLfixed t, GLfixed r)
glMultiTexCoord3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord3xvOES (GLenum texture, const GLfixed *coords);$/;"	p	signature:(GLenum texture, const GLfixed *coords)
glMultiTexCoord4bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bOES (GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	p	signature:(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q)
glMultiTexCoord4bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4bvOES (GLenum texture, const GLbyte *coords);$/;"	p	signature:(GLenum texture, const GLbyte *coords)
glMultiTexCoord4d	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4f	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glMultiTexCoord4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord4i	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4s	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xOES (GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	p	signature:(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
glMultiTexCoord4xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoord4xvOES (GLenum texture, const GLfixed *coords);$/;"	p	signature:(GLenum texture, const GLfixed *coords)
glMultiTexCoordP1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer)
glMultiTexEnvfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexEnvfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexEnviEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexEnvivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexGendEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble param)
glMultiTexGendvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params)
glMultiTexGenfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat param)
glMultiTexGenfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params)
glMultiTexGeniEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint param)
glMultiTexGenivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLint *params)
glMultiTexImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels)
glMultiTexImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels)
glMultiTexImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)
glMultiTexParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLuint *params)
glMultiTexParameterfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexRenderbufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint renderbuffer)
glMultiTexSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels)
glMultiTexSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels)
glMultiTexSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
glMulticastBarrierNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastBarrierNV (void);$/;"	p	signature:(void)
glMulticastBlitFramebufferNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastBlitFramebufferNV (GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLuint srcGpu, GLuint dstGpu, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glMulticastBufferSubDataNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastBufferSubDataNV (GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLbitfield gpuMask, GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data)
glMulticastCopyBufferSubDataNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastCopyBufferSubDataNV (GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLuint readGpu, GLbitfield writeGpuMask, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glMulticastCopyImageSubDataNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastCopyImageSubDataNV (GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	p	signature:(GLuint srcGpu, GLbitfield dstGpuMask, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)
glMulticastFramebufferSampleLocationsfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastFramebufferSampleLocationsfvNV (GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint gpu, GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v)
glMulticastGetQueryObjecti64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastGetQueryObjecti64vNV (GLuint gpu, GLuint id, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint gpu, GLuint id, GLenum pname, GLint64 *params)
glMulticastGetQueryObjectivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastGetQueryObjectivNV (GLuint gpu, GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint gpu, GLuint id, GLenum pname, GLint *params)
glMulticastGetQueryObjectui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastGetQueryObjectui64vNV (GLuint gpu, GLuint id, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint gpu, GLuint id, GLenum pname, GLuint64 *params)
glMulticastGetQueryObjectuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastGetQueryObjectuivNV (GLuint gpu, GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint gpu, GLuint id, GLenum pname, GLuint *params)
glMulticastWaitSyncNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glMulticastWaitSyncNV (GLuint signalGpu, GLbitfield waitGpuMask);$/;"	p	signature:(GLuint signalGpu, GLbitfield waitGpuMask)
glNamedBufferAttachMemoryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferAttachMemoryNV (GLuint buffer, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint buffer, GLuint memory, GLuint64 offset)
glNamedBufferData	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferData (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage)
glNamedBufferDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage)
glNamedBufferPageCommitmentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferPageCommitmentARB (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit)
glNamedBufferPageCommitmentEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferPageCommitmentEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit)
glNamedBufferStorage	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferStorage (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags)
glNamedBufferStorageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferStorageEXT (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags)
glNamedBufferStorageExternalEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferStorageExternalEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags)
glNamedBufferStorageMemEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferStorageMemEXT (GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset)
glNamedBufferSubData	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferSubData (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data)
glNamedBufferSubDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data)
glNamedCopyBufferSubDataEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glNamedFramebufferDrawBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferDrawBuffer (GLuint framebuffer, GLenum buf);$/;"	p	signature:(GLuint framebuffer, GLenum buf)
glNamedFramebufferDrawBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferDrawBuffers (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLuint framebuffer, GLsizei n, const GLenum *bufs)
glNamedFramebufferParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferParameteri (GLuint framebuffer, GLenum pname, GLint param);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint param)
glNamedFramebufferParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferParameteriEXT (GLuint framebuffer, GLenum pname, GLint param);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint param)
glNamedFramebufferReadBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferReadBuffer (GLuint framebuffer, GLenum src);$/;"	p	signature:(GLuint framebuffer, GLenum src)
glNamedFramebufferRenderbuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbuffer (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glNamedFramebufferRenderbufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glNamedFramebufferSampleLocationsfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferSampleLocationsfvARB (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v)
glNamedFramebufferSampleLocationsfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferSampleLocationsfvNV (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v)
glNamedFramebufferSamplePositionsfvAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferSamplePositionsfvAMD (GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values);$/;"	p	signature:(GLuint framebuffer, GLuint numsamples, GLuint pixelindex, const GLfloat *values)
glNamedFramebufferTexture	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level)
glNamedFramebufferTexture1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glNamedFramebufferTextureEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level)
glNamedFramebufferTextureFaceEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face)
glNamedFramebufferTextureLayer	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayer (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer)
glNamedFramebufferTextureLayerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer)
glNamedProgramLocalParameter4dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glNamedProgramLocalParameter4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLdouble *params)
glNamedProgramLocalParameter4fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glNamedProgramLocalParameter4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLfloat *params)
glNamedProgramLocalParameterI4iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glNamedProgramLocalParameterI4ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLint *params)
glNamedProgramLocalParameterI4uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glNamedProgramLocalParameterI4uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLuint *params)
glNamedProgramLocalParameters4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glNamedProgramLocalParametersI4ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params)
glNamedProgramLocalParametersI4uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params)
glNamedProgramStringEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string)
glNamedRenderbufferStorage	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorage (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisample (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleAdvancedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleAdvancedAMD (GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleCoverageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedStringARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	p	signature:(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string)
glNewObjectBufferATI	.\include\GL\glext.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei size, const void *pointer, GLenum usage);$/;"	p	signature:(GLsizei size, const void *pointer, GLenum usage)
glNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *n, const GLfloat *v)
glNormal3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	p	signature:(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)
glNormal3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glNormal3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3xOES (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	p	signature:(GLfixed nx, GLfixed ny, GLfixed nz)
glNormal3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormal3xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glNormalFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glNormalP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glNormalP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glNormalPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const void *pointer)
glNormalPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glNormalPointervINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum type, const void **pointer);$/;"	p	signature:(GLenum type, const void **pointer)
glNormalStream3bATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	p	signature:(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz)
glNormalStream3bvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum stream, const GLbyte *coords);$/;"	p	signature:(GLenum stream, const GLbyte *coords)
glNormalStream3dATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	p	signature:(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz)
glNormalStream3dvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glNormalStream3fATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	signature:(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz)
glNormalStream3fvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glNormalStream3iATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	p	signature:(GLenum stream, GLint nx, GLint ny, GLint nz)
glNormalStream3ivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glNormalStream3sATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	p	signature:(GLenum stream, GLshort nx, GLshort ny, GLshort nz)
glNormalStream3svATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glObjectLabel	.\include\GL\glext.h	/^GLAPI void APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)
glObjectPtrLabel	.\include\GL\glext.h	/^GLAPI void APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei length, const GLchar *label)
glObjectPurgeableAPPLE	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glObjectUnpurgeableAPPLE	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glOrthofOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glOrthofOES (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);$/;"	p	signature:(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f)
glOrthoxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glOrthoxOES (GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);$/;"	p	signature:(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f)
glPNTrianglesfATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPNTrianglesiATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPassTexCoordATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint coord, GLenum swizzle)
glPassThroughxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPassThroughxOES (GLfixed token);$/;"	p	signature:(GLfixed token)
glPatchParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	p	signature:(GLenum pname, const GLfloat *values)
glPatchParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	p	signature:(GLenum pname, GLint value)
glPathColorGenNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathColorGenNV (GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);$/;"	p	signature:(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs)
glPathCommandsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathCommandsNV (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p	signature:(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)
glPathCoordsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathCoordsNV (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p	signature:(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords)
glPathCoverDepthFuncNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathCoverDepthFuncNV (GLenum func);$/;"	p	signature:(GLenum func)
glPathDashArrayNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathDashArrayNV (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	p	signature:(GLuint path, GLsizei dashCount, const GLfloat *dashArray)
glPathFogGenNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathFogGenNV (GLenum genMode);$/;"	p	signature:(GLenum genMode)
glPathGlyphIndexArrayNV	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glPathGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathGlyphIndexRangeNV	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glPathGlyphIndexRangeNV (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	p	signature:(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2])
glPathGlyphRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathGlyphRangeNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathGlyphsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathGlyphsNV (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathMemoryGlyphIndexArrayNV	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glPathMemoryGlyphIndexArrayNV (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	p	signature:(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
glPathParameterfNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathParameterfNV (GLuint path, GLenum pname, GLfloat value);$/;"	p	signature:(GLuint path, GLenum pname, GLfloat value)
glPathParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathParameterfvNV (GLuint path, GLenum pname, const GLfloat *value);$/;"	p	signature:(GLuint path, GLenum pname, const GLfloat *value)
glPathParameteriNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathParameteriNV (GLuint path, GLenum pname, GLint value);$/;"	p	signature:(GLuint path, GLenum pname, GLint value)
glPathParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathParameterivNV (GLuint path, GLenum pname, const GLint *value);$/;"	p	signature:(GLuint path, GLenum pname, const GLint *value)
glPathStencilDepthOffsetNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathStencilDepthOffsetNV (GLfloat factor, GLfloat units);$/;"	p	signature:(GLfloat factor, GLfloat units)
glPathStencilFuncNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathStencilFuncNV (GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum func, GLint ref, GLuint mask)
glPathStringNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathStringNV (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	p	signature:(GLuint path, GLenum format, GLsizei length, const void *pathString)
glPathSubCommandsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathSubCommandsNV (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p	signature:(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)
glPathSubCoordsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathSubCoordsNV (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	p	signature:(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords)
glPathTexGenNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPathTexGenNV (GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	p	signature:(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs)
glPauseTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	p	signature:(void)
glPauseTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPauseTransformFeedbackNV (void);$/;"	p	signature:(void)
glPixelDataRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum target, GLsizei length, const void *pointer);$/;"	p	signature:(GLenum target, GLsizei length, const void *pointer)
glPixelMapx	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelMapx (GLenum map, GLint size, const GLfixed *values);$/;"	p	signature:(GLenum map, GLint size, const GLfixed *values)
glPixelStorex	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelStorex (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glPixelTexGenParameterfSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPixelTexGenParameterfvSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPixelTexGenParameteriSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelTexGenParameterivSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPixelTexGenSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum mode);$/;"	p	signature:(GLenum mode)
glPixelTransferxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTransferxOES (GLenum pname, GLfixed param);$/;"	p	signature:(GLenum pname, GLfixed param)
glPixelTransformParameterfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glPixelTransformParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glPixelTransformParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glPixelTransformParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glPixelZoomxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPixelZoomxOES (GLfixed xfactor, GLfixed yfactor);$/;"	p	signature:(GLfixed xfactor, GLfixed yfactor)
glPointAlongPathNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glPointAlongPathNV (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	p	signature:(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY)
glPointParameterf	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPointParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPointParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointParameterxvOES (GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum pname, const GLfixed *params)
glPointSizexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPointSizexOES (GLfixed size);$/;"	p	signature:(GLfixed size)
glPollAsyncSGIX	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glPollInstrumentsSGIX	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *marker_p);$/;"	p	signature:(GLint *marker_p)
glPolygonOffsetClamp	.\include\GL\glext.h	/^GLAPI void APIENTRY glPolygonOffsetClamp (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	p	signature:(GLfloat factor, GLfloat units, GLfloat clamp)
glPolygonOffsetClampEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPolygonOffsetClampEXT (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	p	signature:(GLfloat factor, GLfloat units, GLfloat clamp)
glPolygonOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat factor, GLfloat bias);$/;"	p	signature:(GLfloat factor, GLfloat bias)
glPolygonOffsetxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPolygonOffsetxOES (GLfixed factor, GLfixed units);$/;"	p	signature:(GLfixed factor, GLfixed units)
glPopDebugGroup	.\include\GL\glext.h	/^GLAPI void APIENTRY glPopDebugGroup (void);$/;"	p	signature:(void)
glPopGroupMarkerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPopGroupMarkerEXT (void);$/;"	p	signature:(void)
glPresentFrameDualFillNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)
glPresentFrameKeyedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)
glPrimitiveBoundingBoxARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrimitiveBoundingBoxARB (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	p	signature:(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW)
glPrimitiveRestartIndex	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartIndexNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	p	signature:(void)
glPrioritizeTexturesEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	p	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)
glPrioritizeTexturesxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glPrioritizeTexturesxOES (GLsizei n, const GLuint *textures, const GLfixed *priorities);$/;"	p	signature:(GLsizei n, const GLuint *textures, const GLfixed *priorities)
glProgramBinary	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	p	signature:(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length)
glProgramBufferParametersIivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params)
glProgramBufferParametersIuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramBufferParametersIuivNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params)
glProgramBufferParametersfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramBufferParametersfvNV (GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params)
glProgramEnvParameter4dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramEnvParameter4dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramEnvParameter4fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramEnvParameter4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramEnvParameterI4iNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramEnvParameterI4ivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramEnvParameterI4uiNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramEnvParameterI4uivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramEnvParameters4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramEnvParametersI4ivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramEnvParametersI4uivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramLocalParameter4dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramLocalParameter4dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramLocalParameter4fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramLocalParameter4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramLocalParameterI4iNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramLocalParameterI4ivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramLocalParameterI4uiNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramLocalParameterI4uivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramLocalParameters4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramLocalParametersI4ivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramLocalParametersI4uivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramNamedParameter4dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramNamedParameter4dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v)
glProgramNamedParameter4fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramNamedParameter4fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v)
glProgramParameter4dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramParameter4dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *v)
glProgramParameter4fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramParameter4fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *v)
glProgramParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameters4dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum target, GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLdouble *v)
glProgramParameters4fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum target, GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *v)
glProgramPathFragmentInputGenNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramPathFragmentInputGenNV (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	p	signature:(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs)
glProgramStringARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum target, GLenum format, GLsizei len, const void *string);$/;"	p	signature:(GLenum target, GLenum format, GLsizei len, const void *string)
glProgramSubroutineParametersuivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLsizei count, const GLuint *params)
glProgramUniform1d	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0)
glProgramUniform1dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	p	signature:(GLuint program, GLint location, GLdouble x)
glProgramUniform1dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1f	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1i	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1i64ARB (GLuint program, GLint location, GLint64 x);$/;"	p	signature:(GLuint program, GLint location, GLint64 x)
glProgramUniform1i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x)
glProgramUniform1i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64 *value)
glProgramUniform1i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform1iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64ARB (GLuint program, GLint location, GLuint64 x);$/;"	p	signature:(GLuint program, GLint location, GLuint64 x)
glProgramUniform1ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x)
glProgramUniform1ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *value)
glProgramUniform1ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform1uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform1uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1)
glProgramUniform2dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y)
glProgramUniform2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2f	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2i	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	p	signature:(GLuint program, GLint location, GLint64 x, GLint64 y)
glProgramUniform2i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y)
glProgramUniform2i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64 *value)
glProgramUniform2i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform2iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	p	signature:(GLuint program, GLint location, GLuint64 x, GLuint64 y)
glProgramUniform2ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y)
glProgramUniform2ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *value)
glProgramUniform2ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform2uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2)
glProgramUniform3dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
glProgramUniform3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	p	signature:(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z)
glProgramUniform3i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glProgramUniform3i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64 *value)
glProgramUniform3i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform3iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	p	signature:(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z)
glProgramUniform3ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glProgramUniform3ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *value)
glProgramUniform3ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform3uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4d	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3)
glProgramUniform4dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramUniform4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4f	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4i	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4i64ARB (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	p	signature:(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
glProgramUniform4i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glProgramUniform4i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4i64vARB (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64 *value)
glProgramUniform4i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform4iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64ARB (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	p	signature:(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
glProgramUniform4ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glProgramUniform4ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *value)
glProgramUniform4ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform4uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniformHandleui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64ARB (GLuint program, GLint location, GLuint64 value);$/;"	p	signature:(GLuint program, GLint location, GLuint64 value)
glProgramUniformHandleui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64NV (GLuint program, GLint location, GLuint64 value);$/;"	p	signature:(GLuint program, GLint location, GLuint64 value)
glProgramUniformHandleui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vARB (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *values)
glProgramUniformHandleui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformHandleui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64 *values)
glProgramUniformMatrix2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT value)
glProgramUniformui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramVertexLimitNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glProgramVertexLimitNV (GLenum target, GLint limit);$/;"	p	signature:(GLenum target, GLint limit)
glProvokingVertex	.\include\GL\glext.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	p	signature:(GLenum mode)
glProvokingVertexEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glProvokingVertexEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glPushClientAttribDefaultEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glPushDebugGroup	.\include\GL\glext.h	/^GLAPI void APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	p	signature:(GLenum source, GLuint id, GLsizei length, const GLchar *message)
glPushGroupMarkerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	signature:(GLsizei length, const GLchar *marker)
glQueryCounter	.\include\GL\glext.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	p	signature:(GLuint id, GLenum target)
glQueryMatrixxOES	.\include\GL\glext.h	/^GLAPI GLbitfield APIENTRY glQueryMatrixxOES (GLfixed *mantissa, GLint *exponent);$/;"	p	signature:(GLfixed *mantissa, GLint *exponent)
glQueryObjectParameteruiAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glQueryObjectParameteruiAMD (GLenum target, GLuint id, GLenum pname, GLuint param);$/;"	p	signature:(GLenum target, GLuint id, GLenum pname, GLuint param)
glQueryResourceNV	.\include\GL\glext.h	/^GLAPI GLint APIENTRY glQueryResourceNV (GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer);$/;"	p	signature:(GLenum queryType, GLint tagId, GLuint bufSize, GLint *buffer)
glQueryResourceTagNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glQueryResourceTagNV (GLint tagId, const GLchar *tagString);$/;"	p	signature:(GLint tagId, const GLchar *tagString)
glRasterPos2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos2xOES (GLfixed x, GLfixed y);$/;"	p	signature:(GLfixed x, GLfixed y)
glRasterPos2xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos2xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glRasterPos3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos3xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glRasterPos3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos3xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glRasterPos4xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos4xOES (GLfixed x, GLfixed y, GLfixed z, GLfixed w);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z, GLfixed w)
glRasterPos4xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterPos4xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glRasterSamplesEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glRasterSamplesEXT (GLuint samples, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint samples, GLboolean fixedsamplelocations)
glReadInstrumentsSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glReadnPixels	.\include\GL\glext.h	/^GLAPI void APIENTRY glReadnPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)
glReadnPixelsARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)
glRectxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRectxOES (GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);$/;"	p	signature:(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2)
glRectxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRectxvOES (const GLfixed *v1, const GLfixed *v2);$/;"	p	signature:(const GLfixed *v1, const GLfixed *v2)
glReferencePlaneSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *equation);$/;"	p	signature:(const GLdouble *equation)
glReleaseKeyedMutexWin32EXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glReleaseKeyedMutexWin32EXT (GLuint memory, GLuint64 key);$/;"	p	signature:(GLuint memory, GLuint64 key)
glReleaseShaderCompiler	.\include\GL\glext.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	p	signature:(void)
glRenderGpuMaskNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderGpuMaskNV (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glRenderbufferStorage	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleAdvancedAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleAdvancedAMD (GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleCoverageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glReplacementCodePointerSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum type, GLsizei stride, const void **pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const void **pointer)
glReplacementCodeubSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte code);$/;"	p	signature:(GLubyte code)
glReplacementCodeubvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *code);$/;"	p	signature:(const GLubyte *code)
glReplacementCodeuiColor3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *v)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiColor4ubVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4ubVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLubyte *c, const GLfloat *v)
glReplacementCodeuiNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint code);$/;"	p	signature:(GLuint code)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *v)
glReplacementCodeuiVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *v)
glReplacementCodeuivSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *code);$/;"	p	signature:(const GLuint *code)
glReplacementCodeusSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort code);$/;"	p	signature:(GLushort code)
glReplacementCodeusvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *code);$/;"	p	signature:(const GLushort *code)
glRequestResidentProgramsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glResetHistogram	.\include\GL\glext.h	/^GLAPI void APIENTRY glResetHistogram (GLenum target);$/;"	p	signature:(GLenum target)
glResetHistogramEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResetMemoryObjectParameterNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glResetMemoryObjectParameterNV (GLuint memory, GLenum pname);$/;"	p	signature:(GLuint memory, GLenum pname)
glResetMinmax	.\include\GL\glext.h	/^GLAPI void APIENTRY glResetMinmax (GLenum target);$/;"	p	signature:(GLenum target)
glResetMinmaxEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResizeBuffersMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	p	signature:(void)
glResolveDepthValuesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glResolveDepthValuesNV (void);$/;"	p	signature:(void)
glResumeTransformFeedback	.\include\GL\glext.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	p	signature:(void)
glResumeTransformFeedbackNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glResumeTransformFeedbackNV (void);$/;"	p	signature:(void)
glRotatexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glRotatexOES (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
glSampleCoverage	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleCoverage (GLfloat value, GLboolean invert);$/;"	p	signature:(GLfloat value, GLboolean invert)
glSampleCoverageARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLfloat value, GLboolean invert);$/;"	p	signature:(GLfloat value, GLboolean invert)
glSampleMapATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint interp, GLenum swizzle)
glSampleMaskEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaskIndexedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleMaskIndexedNV (GLuint index, GLbitfield mask);$/;"	p	signature:(GLuint index, GLbitfield mask)
glSampleMaskSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaski	.\include\GL\glext.h	/^GLAPI void APIENTRY glSampleMaski (GLuint maskNumber, GLbitfield mask);$/;"	p	signature:(GLuint maskNumber, GLbitfield mask)
glSamplePatternEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplePatternSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplerParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glSamplerParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLuint *param)
glSamplerParameterf	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat param)
glSamplerParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLfloat *param)
glSamplerParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint param)
glSamplerParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glScalexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glScalexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glScissorArrayv	.\include\GL\glext.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLint *v)
glScissorExclusiveArrayvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glScissorExclusiveArrayvNV (GLuint first, GLsizei count, const GLint *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLint *v)
glScissorExclusiveNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glScissorExclusiveNV (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glScissorIndexed	.\include\GL\glext.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)
glScissorIndexedv	.\include\GL\glext.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glSecondaryColor3b	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3bvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glSecondaryColor3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glSecondaryColor3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3s	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3svEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3ub	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ubvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3us	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColor3usvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColorFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glSecondaryColorP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glSecondaryColorP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glSecondaryColorPointer	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const void *pointer)
glSecondaryColorPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const void *pointer)
glSecondaryColorPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glSelectPerfMonitorCountersAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	p	signature:(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)
glSemaphoreParameterui64vEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSemaphoreParameterui64vEXT (GLuint semaphore, GLenum pname, const GLuint64 *params);$/;"	p	signature:(GLuint semaphore, GLenum pname, const GLuint64 *params)
glSeparableFilter2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column)
glSeparableFilter2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column)
glSetFenceAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glSetFenceNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	p	signature:(GLuint fence, GLenum condition)
glSetFragmentShaderConstantATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value);$/;"	p	signature:(GLuint dst, const GLfloat *value)
glSetInvariantEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint id, GLenum type, const void *addr);$/;"	p	signature:(GLuint id, GLenum type, const void *addr)
glSetLocalConstantEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint id, GLenum type, const void *addr);$/;"	p	signature:(GLuint id, GLenum type, const void *addr)
glSetMultisamplefvAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glSetMultisamplefvAMD (GLenum pname, GLuint index, const GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, const GLfloat *val)
glShaderBinary	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	p	signature:(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length)
glShaderOp1EXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1)
glShaderOp2EXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2)
glShaderOp3EXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)
glShaderSource	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length)
glShaderSourceARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);$/;"	p	signature:(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length)
glShaderStorageBlockBinding	.\include\GL\glext.h	/^GLAPI void APIENTRY glShaderStorageBlockBinding (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	p	signature:(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding)
glShadingRateImageBarrierNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glShadingRateImageBarrierNV (GLboolean synchronize);$/;"	p	signature:(GLboolean synchronize)
glShadingRateImagePaletteNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glShadingRateImagePaletteNV (GLuint viewport, GLuint first, GLsizei count, const GLenum *rates);$/;"	p	signature:(GLuint viewport, GLuint first, GLsizei count, const GLenum *rates)
glShadingRateSampleOrderCustomNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glShadingRateSampleOrderCustomNV (GLenum rate, GLuint samples, const GLint *locations);$/;"	p	signature:(GLenum rate, GLuint samples, const GLint *locations)
glShadingRateSampleOrderNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glShadingRateSampleOrderNV (GLenum order);$/;"	p	signature:(GLenum order)
glSharpenTexFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glSignalSemaphoreEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSignalSemaphoreEXT (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts);$/;"	p	signature:(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts)
glSignalVkFenceNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSignalVkFenceNV (GLuint64 vkFence);$/;"	p	signature:(GLuint64 vkFence)
glSignalVkSemaphoreNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSignalVkSemaphoreNV (GLuint64 vkSemaphore);$/;"	p	signature:(GLuint64 vkSemaphore)
glSpecializeShader	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpecializeShader (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	p	signature:(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue)
glSpecializeShaderARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpecializeShaderARB (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	p	signature:(GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue)
glSpriteParameterfSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glSpriteParameterfvSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glSpriteParameteriSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glSpriteParameterivSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glStartInstrumentsSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	p	signature:(void)
glStateCaptureNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStateCaptureNV (GLuint state, GLenum mode);$/;"	p	signature:(GLuint state, GLenum mode)
glStencilClearTagEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	p	signature:(GLsizei stencilTagBits, GLuint stencilClearTag)
glStencilFillPathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues)
glStencilFillPathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilFillPathNV (GLuint path, GLenum fillMode, GLuint mask);$/;"	p	signature:(GLuint path, GLenum fillMode, GLuint mask)
glStencilFuncSeparate	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum face, GLenum func, GLint ref, GLuint mask)
glStencilFuncSeparateATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	p	signature:(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
glStencilMaskSeparate	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	signature:(GLenum face, GLuint mask)
glStencilOpSeparate	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStencilOpSeparateATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStencilOpValueAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilOpValueAMD (GLenum face, GLuint value);$/;"	p	signature:(GLenum face, GLuint value)
glStencilStrokePathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues)
glStencilStrokePathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilStrokePathNV (GLuint path, GLint reference, GLuint mask);$/;"	p	signature:(GLuint path, GLint reference, GLuint mask)
glStencilThenCoverFillPathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilThenCoverFillPathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glStencilThenCoverFillPathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilThenCoverFillPathNV (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	p	signature:(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode)
glStencilThenCoverStrokePathInstancedNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilThenCoverStrokePathInstancedNV (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
glStencilThenCoverStrokePathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glStencilThenCoverStrokePathNV (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	p	signature:(GLuint path, GLint reference, GLuint mask, GLenum coverMode)
glStopInstrumentsSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glStringMarkerGREMEDY	.\include\GL\glext.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei len, const void *string);$/;"	p	signature:(GLsizei len, const void *string)
glSubpixelPrecisionBiasNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glSubpixelPrecisionBiasNV (GLuint xbits, GLuint ybits);$/;"	p	signature:(GLuint xbits, GLuint ybits)
glSwizzleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
glSyncTextureINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glSyncTextureINTEL (GLuint texture);$/;"	p	signature:(GLuint texture)
glTagSampleBufferSGIX	.\include\GL\glext.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	p	signature:(void)
glTangent3bEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	p	signature:(GLbyte tx, GLbyte ty, GLbyte tz)
glTangent3bvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glTangent3dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	p	signature:(GLdouble tx, GLdouble ty, GLdouble tz)
glTangent3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTangent3fEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	p	signature:(GLfloat tx, GLfloat ty, GLfloat tz)
glTangent3fvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTangent3iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint tx, GLint ty, GLint tz);$/;"	p	signature:(GLint tx, GLint ty, GLint tz)
glTangent3ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glTangent3sEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);$/;"	p	signature:(GLshort tx, GLshort ty, GLshort tz)
glTangent3svEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTangentPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const void *pointer)
glTbufferMask3DFX	.\include\GL\glext.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint mask);$/;"	p	signature:(GLuint mask)
glTessellationFactorAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glTessellationFactorAMD (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glTessellationModeAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glTessellationModeAMD (GLenum mode);$/;"	p	signature:(GLenum mode)
glTestFenceAPPLE	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestFenceNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestObjectAPPLE	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum object, GLuint name);$/;"	p	signature:(GLenum object, GLuint name)
glTexAttachMemoryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexAttachMemoryNV (GLenum target, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLuint memory, GLuint64 offset)
glTexBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBufferRange (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTexBumpParameterfvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum pname, const GLfloat *param);$/;"	p	signature:(GLenum pname, const GLfloat *param)
glTexBumpParameterivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum pname, const GLint *param);$/;"	p	signature:(GLenum pname, const GLint *param)
glTexCoord1bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1bOES (GLbyte s);$/;"	p	signature:(GLbyte s)
glTexCoord1bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glTexCoord1hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV s);$/;"	p	signature:(GLhalfNV s)
glTexCoord1hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord1xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1xOES (GLfixed s);$/;"	p	signature:(GLfixed s)
glTexCoord1xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord1xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glTexCoord2bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2bOES (GLbyte s, GLbyte t);$/;"	p	signature:(GLbyte s, GLbyte t)
glTexCoord2bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glTexCoord2fColor3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *v)
glTexCoord2fColor4fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord2fColor4ubVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4ubVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLubyte *c, const GLfloat *v)
glTexCoord2fNormal3fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fNormal3fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glTexCoord2fVertex3fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fVertex3fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord2hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLhalfNV s, GLhalfNV t)
glTexCoord2hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2xOES (GLfixed s, GLfixed t);$/;"	p	signature:(GLfixed s, GLfixed t)
glTexCoord2xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord2xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glTexCoord3bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3bOES (GLbyte s, GLbyte t, GLbyte r);$/;"	p	signature:(GLbyte s, GLbyte t, GLbyte r)
glTexCoord3bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glTexCoord3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r)
glTexCoord3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3xOES (GLfixed s, GLfixed t, GLfixed r);$/;"	p	signature:(GLfixed s, GLfixed t, GLfixed r)
glTexCoord3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord3xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glTexCoord4bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4bOES (GLbyte s, GLbyte t, GLbyte r, GLbyte q);$/;"	p	signature:(GLbyte s, GLbyte t, GLbyte r, GLbyte q)
glTexCoord4bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glTexCoord4fColor4fNormal3fVertex4fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fColor4fNormal3fVertex4fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord4fVertex4fSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fVertex4fvSUN	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord4hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glTexCoord4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord4xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4xOES (GLfixed s, GLfixed t, GLfixed r, GLfixed q);$/;"	p	signature:(GLfixed s, GLfixed t, GLfixed r, GLfixed q)
glTexCoord4xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoord4xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glTexCoordFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glTexCoordP1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP1ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP1uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP2ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP2uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP4ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordP4uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer)
glTexCoordPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glTexCoordPointervINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	signature:(GLint size, GLenum type, const void **pointer)
glTexEnvxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexEnvxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexEnvxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexEnvxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexFilterFuncSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights)
glTexGenxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexGenxOES (GLenum coord, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum coord, GLenum pname, GLfixed param)
glTexGenxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexGenxvOES (GLenum coord, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum coord, GLenum pname, const GLfixed *params)
glTexImage2DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTexImage2DMultisampleCoverageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage2DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTexImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)
glTexImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)
glTexImage3DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTexImage3DMultisampleCoverageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage3DMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTexImage4DSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels)
glTexPageCommitmentARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexPageCommitmentARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit)
glTexParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterxOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterxOES (GLenum target, GLenum pname, GLfixed param);$/;"	p	signature:(GLenum target, GLenum pname, GLfixed param)
glTexParameterxvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexParameterxvOES (GLenum target, GLenum pname, const GLfixed *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfixed *params)
glTexRenderbufferNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexRenderbufferNV (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glTexStorage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorage1D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTexStorage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorage2D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTexStorage2DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorage2DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTexStorage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorage3D (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTexStorage3DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorage3DMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTexStorageMem1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageMem1DEXT (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset)
glTexStorageMem2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageMem2DEXT (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset)
glTexStorageMem2DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageMem2DMultisampleEXT (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)
glTexStorageMem3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageMem3DEXT (GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset)
glTexStorageMem3DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageMem3DMultisampleEXT (GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)
glTexStorageSparseAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexStorageSparseAMD (GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	p	signature:(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags)
glTexSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels)
glTexSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels)
glTexSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
glTexSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
glTexSubImage4DSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels)
glTextureAttachMemoryNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureAttachMemoryNV (GLuint texture, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLuint memory, GLuint64 offset)
glTextureBarrier	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBarrier (void);$/;"	p	signature:(void)
glTextureBarrierNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	p	signature:(void)
glTextureBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBuffer (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLuint texture, GLenum internalformat, GLuint buffer)
glTextureBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer)
glTextureBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBufferRange (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTextureBufferRangeEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureBufferRangeEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTextureColorMaskSGIS	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glTextureImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels)
glTextureImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels)
glTextureImage2DMultisampleCoverageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTextureImage2DMultisampleNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage2DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
glTextureImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)
glTextureImage3DMultisampleCoverageNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleCoverageNV (GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTextureImage3DMultisampleNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureImage3DMultisampleNV (GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
glTextureLightEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum pname);$/;"	p	signature:(GLenum pname)
glTextureMaterialEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glTextureNormalEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glTexturePageCommitmentEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTexturePageCommitmentEXT (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit)
glTextureParameterIiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterIiv (GLuint texture, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum pname, const GLint *params)
glTextureParameterIivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureParameterIuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterIuiv (GLuint texture, GLenum pname, const GLuint *params);$/;"	p	signature:(GLuint texture, GLenum pname, const GLuint *params)
glTextureParameterIuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLuint *params)
glTextureParameterf	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterf (GLuint texture, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint texture, GLenum pname, GLfloat param)
glTextureParameterfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat param)
glTextureParameterfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterfv (GLuint texture, GLenum pname, const GLfloat *param);$/;"	p	signature:(GLuint texture, GLenum pname, const GLfloat *param)
glTextureParameterfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLfloat *params)
glTextureParameteri	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameteri (GLuint texture, GLenum pname, GLint param);$/;"	p	signature:(GLuint texture, GLenum pname, GLint param)
glTextureParameteriEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint param)
glTextureParameteriv	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameteriv (GLuint texture, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint texture, GLenum pname, const GLint *param)
glTextureParameterivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureRangeAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureRangeAPPLE (GLenum target, GLsizei length, const void *pointer);$/;"	p	signature:(GLenum target, GLsizei length, const void *pointer)
glTextureRenderbufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLuint texture, GLenum target, GLuint renderbuffer)
glTextureStorage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage1D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width)
glTextureStorage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTextureStorage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage2D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTextureStorage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTextureStorage2DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage2DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTextureStorage2DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage2DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTextureStorage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage3D (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTextureStorage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTextureStorage3DMultisample	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage3DMultisample (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTextureStorage3DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorage3DMultisampleEXT (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTextureStorageMem1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageMem1DEXT (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLuint memory, GLuint64 offset)
glTextureStorageMem2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageMem2DEXT (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset)
glTextureStorageMem2DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageMem2DMultisampleEXT (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)
glTextureStorageMem3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageMem3DEXT (GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset)
glTextureStorageMem3DMultisampleEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageMem3DMultisampleEXT (GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset);$/;"	p	signature:(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)
glTextureStorageSparseAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureStorageSparseAMD (GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags)
glTextureSubImage1D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage1D (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels)
glTextureSubImage1DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels)
glTextureSubImage2D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage2D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels)
glTextureSubImage2DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels)
glTextureSubImage3D	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage3D (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
glTextureSubImage3DEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
glTextureView	.\include\GL\glext.h	/^GLAPI void APIENTRY glTextureView (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	p	signature:(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)
glTrackMatrixNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	p	signature:(GLenum target, GLuint address, GLenum matrix, GLenum transform)
glTransformFeedbackAttribsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackAttribsNV (GLsizei count, const GLint *attribs, GLenum bufferMode);$/;"	p	signature:(GLsizei count, const GLint *attribs, GLenum bufferMode)
glTransformFeedbackBufferBase	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackBufferBase (GLuint xfb, GLuint index, GLuint buffer);$/;"	p	signature:(GLuint xfb, GLuint index, GLuint buffer)
glTransformFeedbackBufferRange	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackBufferRange (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glTransformFeedbackStreamAttribsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	p	signature:(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode)
glTransformFeedbackVaryings	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode)
glTransformFeedbackVaryingsEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode)
glTransformFeedbackVaryingsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode)
glTransformPathNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glTransformPathNV (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	p	signature:(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues)
glTranslatexOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glTranslatexOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glUniform1d	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	p	signature:(GLint location, GLdouble x)
glUniform1dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform1f	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1fARB (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1i	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1i64ARB (GLint location, GLint64 x);$/;"	p	signature:(GLint location, GLint64 x)
glUniform1i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	p	signature:(GLint location, GLint64EXT x)
glUniform1i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64 *value)
glUniform1i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform1iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1iARB (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ui64ARB (GLint location, GLuint64 x);$/;"	p	signature:(GLint location, GLuint64 x)
glUniform1ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	p	signature:(GLint location, GLuint64EXT x)
glUniform1ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniform1ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform1uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1uiEXT (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform1uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y)
glUniform2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform2f	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2i	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2i64ARB (GLint location, GLint64 x, GLint64 y);$/;"	p	signature:(GLint location, GLint64 x, GLint64 y)
glUniform2i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y)
glUniform2i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64 *value)
glUniform2i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform2iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2iARB (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ui64ARB (GLint location, GLuint64 x, GLuint64 y);$/;"	p	signature:(GLint location, GLuint64 x, GLuint64 y)
glUniform2ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y)
glUniform2ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniform2ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform2uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z)
glUniform3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	p	signature:(GLint location, GLint64 x, GLint64 y, GLint64 z)
glUniform3i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glUniform3i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64 *value)
glUniform3i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform3iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	p	signature:(GLint location, GLuint64 x, GLuint64 y, GLuint64 z)
glUniform3ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glUniform3ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniform3ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform3uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4d	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glUniform4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform4f	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4i	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4i64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4i64ARB (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	p	signature:(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w)
glUniform4i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glUniform4i64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4i64vARB (GLint location, GLsizei count, const GLint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64 *value)
glUniform4i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform4iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ui64ARB (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	p	signature:(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w)
glUniform4ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glUniform4ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniform4ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform4uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniformBlockBinding	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
glUniformBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);$/;"	p	signature:(GLuint program, GLint location, GLuint buffer)
glUniformHandleui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformHandleui64ARB (GLint location, GLuint64 value);$/;"	p	signature:(GLint location, GLuint64 value)
glUniformHandleui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformHandleui64NV (GLint location, GLuint64 value);$/;"	p	signature:(GLint location, GLuint64 value)
glUniformHandleui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformHandleui64vARB (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniformHandleui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformHandleui64vNV (GLint location, GLsizei count, const GLuint64 *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64 *value)
glUniformMatrix2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformSubroutinesuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	p	signature:(GLenum shadertype, GLsizei count, const GLuint *indices)
glUniformui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	p	signature:(GLint location, GLuint64EXT value)
glUniformui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUnlockArraysEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	p	signature:(void)
glUnmapBuffer	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapBufferARB	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapNamedBuffer	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUnmapNamedBufferEXT	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUnmapObjectBufferATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUnmapTexture2DINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glUnmapTexture2DINTEL (GLuint texture, GLint level);$/;"	p	signature:(GLuint texture, GLint level)
glUpdateObjectBufferATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);$/;"	p	signature:(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve)
glUseProgram	.\include\GL\glext.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	p	signature:(GLuint program)
glUseProgramObjectARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glUseProgramStages	.\include\GL\glext.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p	signature:(GLuint pipeline, GLbitfield stages, GLuint program)
glUseShaderProgramEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	p	signature:(GLenum type, GLuint program)
glVDPAUFiniNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUFiniNV (void);$/;"	p	signature:(void)
glVDPAUGetSurfaceivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glVDPAUInitNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUInitNV (const void *vdpDevice, const void *getProcAddress);$/;"	p	signature:(const void *vdpDevice, const void *getProcAddress)
glVDPAUIsSurfaceNV	.\include\GL\glext.h	/^GLAPI GLboolean APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glVDPAUMapSurfacesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)
glVDPAURegisterOutputSurfaceNV	.\include\GL\glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAURegisterVideoSurfaceNV	.\include\GL\glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAURegisterVideoSurfaceWithPictureStructureNV	.\include\GL\glext.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceWithPictureStructureNV (const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure);$/;"	p	signature:(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames, GLboolean isFrameStructure)
glVDPAUSurfaceAccessNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum access)
glVDPAUUnmapSurfacesNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces)
glVDPAUUnregisterSurfaceNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glValidateProgram	.\include\GL\glext.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	p	signature:(GLuint program)
glValidateProgramARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glValidateProgramPipeline	.\include\GL\glext.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glVariantArrayObjectATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glVariantPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const void *addr);$/;"	p	signature:(GLuint id, GLenum type, GLuint stride, const void *addr)
glVariantbvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint id, const GLbyte *addr);$/;"	p	signature:(GLuint id, const GLbyte *addr)
glVariantdvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint id, const GLdouble *addr);$/;"	p	signature:(GLuint id, const GLdouble *addr)
glVariantfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint id, const GLfloat *addr);$/;"	p	signature:(GLuint id, const GLfloat *addr)
glVariantivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint id, const GLint *addr);$/;"	p	signature:(GLuint id, const GLint *addr)
glVariantsvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint id, const GLshort *addr);$/;"	p	signature:(GLuint id, const GLshort *addr)
glVariantubvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint id, const GLubyte *addr);$/;"	p	signature:(GLuint id, const GLubyte *addr)
glVariantuivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint id, const GLuint *addr);$/;"	p	signature:(GLuint id, const GLuint *addr)
glVariantusvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint id, const GLushort *addr);$/;"	p	signature:(GLuint id, const GLushort *addr)
glVertex2bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2bOES (GLbyte x, GLbyte y);$/;"	p	signature:(GLbyte x, GLbyte y)
glVertex2bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glVertex2hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLhalfNV x, GLhalfNV y)
glVertex2hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex2xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2xOES (GLfixed x);$/;"	p	signature:(GLfixed x)
glVertex2xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex2xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glVertex3bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3bOES (GLbyte x, GLbyte y, GLbyte z);$/;"	p	signature:(GLbyte x, GLbyte y, GLbyte z)
glVertex3bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glVertex3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertex3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex3xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3xOES (GLfixed x, GLfixed y);$/;"	p	signature:(GLfixed x, GLfixed y)
glVertex3xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex3xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glVertex4bOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4bOES (GLbyte x, GLbyte y, GLbyte z, GLbyte w);$/;"	p	signature:(GLbyte x, GLbyte y, GLbyte z, GLbyte w)
glVertex4bvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4bvOES (const GLbyte *coords);$/;"	p	signature:(const GLbyte *coords)
glVertex4hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertex4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex4xOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4xOES (GLfixed x, GLfixed y, GLfixed z);$/;"	p	signature:(GLfixed x, GLfixed y, GLfixed z)
glVertex4xvOES	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertex4xvOES (const GLfixed *coords);$/;"	p	signature:(const GLfixed *coords)
glVertexArrayAttribBinding	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayAttribBinding (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
glVertexArrayAttribFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayAttribFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)
glVertexArrayAttribIFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayAttribIFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayAttribLFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayAttribLFormat (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayBindVertexBufferEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayBindVertexBufferEXT (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
glVertexArrayBindingDivisor	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayBindingDivisor (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint divisor)
glVertexArrayColorOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayEdgeFlagOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayEdgeFlagOffsetEXT (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset)
glVertexArrayElementBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayElementBuffer (GLuint vaobj, GLuint buffer);$/;"	p	signature:(GLuint vaobj, GLuint buffer)
glVertexArrayFogCoordOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayFogCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayIndexOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayIndexOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayMultiTexCoordOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayMultiTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayNormalOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayNormalOffsetEXT (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayParameteriAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexArrayRangeAPPLE	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei length, void *pointer);$/;"	p	signature:(GLsizei length, void *pointer)
glVertexArrayRangeNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei length, const void *pointer);$/;"	p	signature:(GLsizei length, const void *pointer)
glVertexArraySecondaryColorOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArraySecondaryColorOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayTexCoordOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayTexCoordOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayVertexAttribBindingEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribBindingEXT (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
glVertexArrayVertexAttribDivisorEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribDivisorEXT (GLuint vaobj, GLuint index, GLuint divisor);$/;"	p	signature:(GLuint vaobj, GLuint index, GLuint divisor)
glVertexArrayVertexAttribFormatEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)
glVertexArrayVertexAttribIFormatEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayVertexAttribIOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribIOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayVertexAttribLFormatEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLFormatEXT (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexArrayVertexAttribLOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexArrayVertexAttribOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset)
glVertexArrayVertexBindingDivisorEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBindingDivisorEXT (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint divisor)
glVertexArrayVertexBuffer	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBuffer (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	p	signature:(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
glVertexArrayVertexBuffers	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexBuffers (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	p	signature:(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides)
glVertexArrayVertexOffsetEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexArrayVertexOffsetEXT (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexAttrib1d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1f	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);$/;"	p	signature:(GLuint index, GLhalfNV x)
glVertexAttrib1hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib1s	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2f	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y)
glVertexAttrib2hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib2s	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertexAttrib3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib3s	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nbv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4NbvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4Niv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4NivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4Nsv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4NsvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nub	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4NubARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4Nubv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4NubvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4Nuiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4NuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4Nusv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4NusvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4bv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4bvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4f	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4hNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertexAttrib4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib4iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4s	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4ubNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4ubv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4uivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4usv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4usvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribArrayObjectATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)
glVertexAttribBinding	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribBinding (GLuint attribindex, GLuint bindingindex);$/;"	p	signature:(GLuint attribindex, GLuint bindingindex)
glVertexAttribDivisor	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribDivisorARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribFormat (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)
glVertexAttribFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride)
glVertexAttribI1i	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI1uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2i	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4bv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4bvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4i	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4ivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4svEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4ubv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ubvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4uivEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4usv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribI4usvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribIFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribIFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexAttribIFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribIPointer	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)
glVertexAttribIPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)
glVertexAttribL1d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1dEXT (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	p	signature:(GLuint index, GLint64EXT x)
glVertexAttribL1i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL1ui64ARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64ARB (GLuint index, GLuint64EXT x);$/;"	p	signature:(GLuint index, GLuint64EXT x)
glVertexAttribL1ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	p	signature:(GLuint index, GLuint64EXT x)
glVertexAttribL1ui64vARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vARB (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL1ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y)
glVertexAttribL2i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL2ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y)
glVertexAttribL2ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glVertexAttribL3i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL3ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glVertexAttribL3ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL4d	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4dvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4i64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glVertexAttribL4i64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL4ui64NV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glVertexAttribL4ui64vNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribLFormat	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribLFormat (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	p	signature:(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
glVertexAttribLFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribLPointer	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)
glVertexAttribLPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)
glVertexAttribP1ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP1uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribParameteriAMD	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribParameteriAMD (GLuint index, GLenum pname, GLint param);$/;"	p	signature:(GLuint index, GLenum pname, GLint param)
glVertexAttribPointer	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer)
glVertexAttribPointerARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer)
glVertexAttribPointerNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer)
glVertexAttribs1dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs1fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs1hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs1svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs2dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs2fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs2hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs2svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs3dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs3fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs3hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs3svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4dvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs4fvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs4hvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs4svNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4ubvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLubyte *v)
glVertexBindingDivisor	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexBindingDivisor (GLuint bindingindex, GLuint divisor);$/;"	p	signature:(GLuint bindingindex, GLuint divisor)
glVertexBlendARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint count);$/;"	p	signature:(GLint count)
glVertexBlendEnvfATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glVertexBlendEnviATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexFormatNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glVertexP2ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP2ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP2uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP2uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP3ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP3ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP3uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP3uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP4ui	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP4ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP4uiv	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexP4uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer)
glVertexPointerListIBM	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride)
glVertexPointervINTEL	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint size, GLenum type, const void **pointer);$/;"	p	signature:(GLint size, GLenum type, const void **pointer)
glVertexStream1dATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum stream, GLdouble x);$/;"	p	signature:(GLenum stream, GLdouble x)
glVertexStream1dvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream1fATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum stream, GLfloat x);$/;"	p	signature:(GLenum stream, GLfloat x)
glVertexStream1fvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream1iATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum stream, GLint x);$/;"	p	signature:(GLenum stream, GLint x)
glVertexStream1ivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream1sATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum stream, GLshort x);$/;"	p	signature:(GLenum stream, GLshort x)
glVertexStream1svATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream2dATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y)
glVertexStream2dvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream2fATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y)
glVertexStream2fvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream2iATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum stream, GLint x, GLint y);$/;"	p	signature:(GLenum stream, GLint x, GLint y)
glVertexStream2ivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream2sATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y)
glVertexStream2svATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream3dATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z)
glVertexStream3dvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream3fATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z)
glVertexStream3fvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream3iATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z)
glVertexStream3ivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream3sATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z)
glVertexStream3svATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream4dATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexStream4dvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream4fATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexStream4fvATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream4iATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z, GLint w)
glVertexStream4ivATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream4sATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexStream4svATI	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexWeightPointerEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const void *pointer)
glVertexWeightfEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat weight);$/;"	p	signature:(GLfloat weight)
glVertexWeightfvEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *weight);$/;"	p	signature:(const GLfloat *weight)
glVertexWeighthNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);$/;"	p	signature:(GLhalfNV weight)
glVertexWeighthvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);$/;"	p	signature:(const GLhalfNV *weight)
glVideoCaptureNV	.\include\GL\glext.h	/^GLAPI GLenum APIENTRY glVideoCaptureNV (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	p	signature:(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time)
glVideoCaptureStreamParameterdvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params)
glVideoCaptureStreamParameterfvNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params)
glVideoCaptureStreamParameterivNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params)
glViewportArrayv	.\include\GL\glext.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLfloat *v)
glViewportIndexedf	.\include\GL\glext.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
glViewportIndexedfv	.\include\GL\glext.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glViewportPositionWScaleNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glViewportPositionWScaleNV (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	p	signature:(GLuint index, GLfloat xcoeff, GLfloat ycoeff)
glViewportSwizzleNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glViewportSwizzleNV (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	p	signature:(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew)
glWaitSemaphoreEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glWaitSemaphoreEXT (GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts);$/;"	p	signature:(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts)
glWaitSync	.\include\GL\glext.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glWaitVkSemaphoreNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glWaitVkSemaphoreNV (GLuint64 vkSemaphore);$/;"	p	signature:(GLuint64 vkSemaphore)
glWeightPathsNV	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightPathsNV (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	p	signature:(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights)
glWeightPointerARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const void *pointer)
glWeightbvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightbvARB (GLint size, const GLbyte *weights);$/;"	p	signature:(GLint size, const GLbyte *weights)
glWeightdvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightdvARB (GLint size, const GLdouble *weights);$/;"	p	signature:(GLint size, const GLdouble *weights)
glWeightfvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightfvARB (GLint size, const GLfloat *weights);$/;"	p	signature:(GLint size, const GLfloat *weights)
glWeightivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightivARB (GLint size, const GLint *weights);$/;"	p	signature:(GLint size, const GLint *weights)
glWeightsvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightsvARB (GLint size, const GLshort *weights);$/;"	p	signature:(GLint size, const GLshort *weights)
glWeightubvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightubvARB (GLint size, const GLubyte *weights);$/;"	p	signature:(GLint size, const GLubyte *weights)
glWeightuivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightuivARB (GLint size, const GLuint *weights);$/;"	p	signature:(GLint size, const GLuint *weights)
glWeightusvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWeightusvARB (GLint size, const GLushort *weights);$/;"	p	signature:(GLint size, const GLushort *weights)
glWindowPos2d	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2f	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2i	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2i (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2s	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3d	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3f	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3i	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3i (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3s	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sv	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svARB	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos4dMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glWindowPos4dvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos4fMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glWindowPos4fvMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos4iMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint w)
glWindowPos4ivMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos4sMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort w)
glWindowPos4svMESA	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowRectanglesEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glWindowRectanglesEXT (GLenum mode, GLsizei count, const GLint *box);$/;"	p	signature:(GLenum mode, GLsizei count, const GLint *box)
glWriteMaskEXT	.\include\GL\glext.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
gl_context	.\src\Core\Context\Context.cpp	/^	HGLRC gl_context;$/;"	m	struct:Window_Data	file:	access:public
global_state	.\src\Engine\Render\Render.cpp	/^	Render_State global_state;$/;"	m	namespace:__anon10	file:
handle	.\src\Core\Context\Context.cpp	/^	HWND handle;$/;"	m	struct:Window_Data	file:	access:public
handle	.\src\Core\Net\Connection.h	/^	Connection_Handle handle;$/;"	m	struct:Connection	access:public
handle	.\src\Core\Net\Socket.h	/^	SOCKET handle;$/;"	m	struct:Socket	access:public
handle	.\src\Core\Thread\Mutex.h	/^	HANDLE handle;$/;"	m	struct:Mutex	access:public
handle	.\src\Core\Thread\Thread.h	/^	HANDLE handle;$/;"	m	struct:Thread	access:public
handle	.\src\Engine\Graphics\FrameBuffer.h	/^	GLuint handle = GL_INVALID_INDEX;$/;"	m	struct:Frame_Buffer	access:public
handle	.\src\Engine\Graphics\Material.h	/^	GLuint handle;$/;"	m	struct:Shader	access:public
handle	.\src\Engine\Graphics\Texture.h	/^	GLuint handle;$/;"	m	struct:Texture	access:public
handle_incoming	.\src\Core\Net\Service\ServiceRecv.cpp	/^void handle_incoming(Connection* connection, Packet* packet, bool stale)$/;"	f	signature:(Connection* connection, Packet* packet, bool stale)
has_focus	.\src\Core\Context\Context.h	/^	bool has_focus = false;$/;"	m	struct:Context	access:public
hash	.\src\Engine\Resource\Resource.h	/^	u32 hash;$/;"	m	struct:Resource_Node	access:public
hash_fnv	.\src\Core\Hash\Hash.cpp	/^u32 hash_fnv(const void* data, u32 length)$/;"	f	signature:(const void* data, u32 length)
hash_fnv	.\src\Core\Hash\Hash.h	/^u32 hash_fnv(const void* data, u32 length);/;"	p	signature:(const void* data, u32 length)
height	.\src\Core\Context\Context.cpp	/^	u16 height;$/;"	m	struct:Win_Size_Params	file:	access:public
height	.\src\Core\Context\Context.h	/^	i32 height;$/;"	m	struct:Context	access:public
height	.\src\Core\Import\TGA.cpp	/^	u16 height;$/;"	m	struct:Tga_Image_Spec	file:	access:public
height	.\src\Core\Import\TGA.h	/^	u16 height;$/;"	m	struct:Tga_File	access:public
height	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 height = 0;$/;"	m	struct:Frame_Buffer	access:public
height	.\src\Engine\Graphics\Texture.h	/^	u32 height;$/;"	m	struct:Texture	access:public
huffman_build	.\src\Core\Compress\Huffman.cpp	/^void huffman_build(Huffman_Tree* tree, u16* code_lengths, u16 code_num)$/;"	f	signature:(Huffman_Tree* tree, u16* code_lengths, u16 code_num)
huffman_build	.\src\Core\Compress\Huffman.h	/^void huffman_build(Huffman_Tree* tree, u16* code_lengths, u16 code_num);$/;"	p	signature:(Huffman_Tree* tree, u16* code_lengths, u16 code_num)
huffman_build_fixed_distance	.\src\Core\Compress\Huffman.cpp	/^void huffman_build_fixed_distance(Huffman_Tree* tree)$/;"	f	signature:(Huffman_Tree* tree)
huffman_build_fixed_distance	.\src\Core\Compress\Huffman.h	/^void huffman_build_fixed_distance(Huffman_Tree* tree);$/;"	p	signature:(Huffman_Tree* tree)
huffman_build_fixed_length	.\src\Core\Compress\Huffman.cpp	/^void huffman_build_fixed_length(Huffman_Tree* tree)$/;"	f	signature:(Huffman_Tree* tree)
huffman_build_fixed_length	.\src\Core\Compress\Huffman.h	/^void huffman_build_fixed_length(Huffman_Tree* tree);$/;"	p	signature:(Huffman_Tree* tree)
huffman_find_symbol	.\src\Core\Compress\Huffman.cpp	/^i16 huffman_find_symbol(Huffman_Tree* tree, u16 code, u16 code_len)$/;"	f	signature:(Huffman_Tree* tree, u16 code, u16 code_len)
huffman_find_symbol	.\src\Core\Compress\Huffman.h	/^i16 huffman_find_symbol(Huffman_Tree* tree, u16 code, u16 code_len);/;"	p	signature:(Huffman_Tree* tree, u16 code, u16 code_len)
huffman_init	.\src\Core\Compress\Huffman.cpp	/^void huffman_init(Huffman_Tree* tree)$/;"	f	signature:(Huffman_Tree* tree)
huffman_init	.\src\Core\Compress\Huffman.h	/^void huffman_init(Huffman_Tree* tree);$/;"	p	signature:(Huffman_Tree* tree)
i16	.\src\Core\Types.h	/^typedef short i16;$/;"	t
i32	.\src\Core\Types.h	/^typedef int i32;$/;"	t
i64	.\src\Core\Types.h	/^typedef long long i64;$/;"	t
i8	.\src\Core\Types.h	/^typedef char i8;$/;"	t
id	.\src\Core\Net\Connection.h	/^	int id;$/;"	m	struct:Connection_Handle	access:public
id	.\src\Core\Net\Packet.h	/^	u32 id : 28;$/;"	m	struct:Packet	access:public
id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Destroy_Unit_Data	file:	access:public
id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Player_Add_Data	file:	access:public
id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Player_Remove_Data	file:	access:public
id	.\src\Runtime\Game\Game.cpp	/^		u32 id;$/;"	m	struct:__anon11::Spawn_Unit_Data	file:	access:public
id	.\src\Runtime\Game\Projectile.h	/^	u32 id;$/;"	m	struct:Projectile	access:public
id	.\src\Runtime\Online\Channel.h	/^	Channel_Id id;$/;"	m	struct:Channel	access:public
id	.\src\Runtime\Online\Channel.h	/^	u8 id = 0;$/;"	m	struct:Channel_Event	access:public
id	.\src\Runtime\Online\Online.h	/^	Channel_Id id;$/;"	m	struct:Rpc_Channel_Close	access:public
id	.\src\Runtime\Online\Online.h	/^	Channel_Id id;$/;"	m	struct:Rpc_Channel_Open	access:public
id	.\src\Runtime\Online\Online.h	/^	u32 id = 0;$/;"	m	struct:Online_User	access:public
id	.\src\Runtime\Unit\Unit.h	/^	u32 id;$/;"	m	struct:Unit	access:public
id_length	.\src\Core\Import\TGA.cpp	/^	u8 id_length;$/;"	m	struct:Tga_Header	file:	access:public
image_descriptor	.\src\Core\Import\TGA.cpp	/^	u8 image_descriptor;$/;"	m	struct:Tga_Image_Spec	file:	access:public
image_type	.\src\Core\Import\TGA.cpp	/^	u8 image_type;$/;"	m	struct:Tga_Header	file:	access:public
incoming	.\src\Core\Net\Connection.h	/^	Packet_List incoming;$/;"	m	struct:Connection	access:public
index	.\src\Runtime\Online\Channel.h	/^	u32 index;$/;"	m	struct:Channel_Id	access:public
index_offset	.\src\Core\Import\Fbx.h	/^	u32 index_offset = 0;$/;"	m	struct:Fbx_Face	access:public
indicies	.\src\Core\Import\Fbx.h	/^	u32* indicies = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
inflate	.\src\Core\Compress\Inflate.cpp	/^void inflate(void* dest, u32 dest_size, void* src, u32 src_size)$/;"	f	signature:(void* dest, u32 dest_size, void* src, u32 src_size)
inflate	.\src\Core\Compress\Inflate.h	/^void inflate(void* dest, u32 dest_size, void* src, u32 src_size);/;"	p	signature:(void* dest, u32 dest_size, void* src, u32 src_size)
init_opengl_extensions	.\src\Core\GL\GL.cpp	/^void init_opengl_extensions()$/;"	f	signature:()
init_opengl_extensions	.\src\Core\GL\GL.h	/^void init_opengl_extensions();/;"	p	signature:()
input	.\src\Core\Input\Input.cpp	/^Input input;$/;"	v
input_key_down	.\src\Core\Input\Input.cpp	/^bool input_key_down(Key key)$/;"	f	signature:(Key key)
input_key_down	.\src\Core\Input\Input.h	/^bool input_key_down(Key key);$/;"	p	signature:(Key key)
input_key_pressed	.\src\Core\Input\Input.cpp	/^bool input_key_pressed(Key key)$/;"	f	signature:(Key key)
input_key_pressed	.\src\Core\Input\Input.h	/^bool input_key_pressed(Key key);$/;"	p	signature:(Key key)
input_key_released	.\src\Core\Input\Input.cpp	/^bool input_key_released(Key key)$/;"	f	signature:(Key key)
input_key_released	.\src\Core\Input\Input.h	/^bool input_key_released(Key key);$/;"	p	signature:(Key key)
input_mouse_button_down	.\src\Core\Input\Input.cpp	/^bool input_mouse_button_down(Mouse_Btn btn)$/;"	f	signature:(Mouse_Btn btn)
input_mouse_button_down	.\src\Core\Input\Input.h	/^bool input_mouse_button_down(Mouse_Btn btn);$/;"	p	signature:(Mouse_Btn btn)
input_mouse_button_pressed	.\src\Core\Input\Input.cpp	/^bool input_mouse_button_pressed(Mouse_Btn btn)$/;"	f	signature:(Mouse_Btn btn)
input_mouse_button_pressed	.\src\Core\Input\Input.h	/^bool input_mouse_button_pressed(Mouse_Btn btn);$/;"	p	signature:(Mouse_Btn btn)
input_mouse_button_released	.\src\Core\Input\Input.cpp	/^bool input_mouse_button_released(Mouse_Btn btn)$/;"	f	signature:(Mouse_Btn btn)
input_mouse_button_released	.\src\Core\Input\Input.h	/^bool input_mouse_button_released(Mouse_Btn btn);/;"	p	signature:(Mouse_Btn btn)
input_mouse_delta_x	.\src\Core\Input\Input.cpp	/^int input_mouse_delta_x()$/;"	f	signature:()
input_mouse_delta_x	.\src\Core\Input\Input.h	/^int input_mouse_delta_x();$/;"	p	signature:()
input_mouse_delta_y	.\src\Core\Input\Input.cpp	/^int input_mouse_delta_y()$/;"	f	signature:()
input_mouse_delta_y	.\src\Core\Input\Input.h	/^int input_mouse_delta_y();$/;"	p	signature:()
input_mouse_x	.\src\Core\Input\Input.cpp	/^int input_mouse_x()$/;"	f	signature:()
input_mouse_x	.\src\Core\Input\Input.h	/^int input_mouse_x();$/;"	p	signature:()
input_mouse_y	.\src\Core\Input\Input.cpp	/^int input_mouse_y()$/;"	f	signature:()
input_mouse_y	.\src\Core\Input\Input.h	/^int input_mouse_y();$/;"	p	signature:()
inverse	.\src\Core\Math\Matrix.cpp	/^Mat4 inverse(const Mat4& mat)$/;"	f	signature:(const Mat4& mat)
inverse	.\src\Core\Math\Matrix.h	/^Mat4 inverse(const Mat4& mat);$/;"	p	signature:(const Mat4& mat)
ip_make	.\src\Core\Net\IpAddress.cpp	/^Ip_Address ip_make(u32 addr, u16 port)$/;"	f	signature:(u32 addr, u16 port)
ip_make	.\src\Core\Net\IpAddress.cpp	/^Ip_Address ip_make(u8 net, u8 host, u8 logical_host, u8 impno, u16 port)$/;"	f	signature:(u8 net, u8 host, u8 logical_host, u8 impno, u16 port)
ip_make	.\src\Core\Net\IpAddress.h	/^Ip_Address ip_make(u32 addr, u16 port);$/;"	p	signature:(u32 addr, u16 port)
ip_make	.\src\Core\Net\IpAddress.h	/^Ip_Address ip_make(u8 net, u8 host, u8 logical_host, u8 impno, u16 port);$/;"	p	signature:(u8 net, u8 host, u8 logical_host, u8 impno, u16 port)
ip_parse	.\src\Core\Net\IpAddress.cpp	/^Ip_Address ip_parse(const char* ip_str)$/;"	f	signature:(const char* ip_str)
ip_parse	.\src\Core\Net\IpAddress.h	/^Ip_Address ip_parse(const char* ip_str);$/;"	p	signature:(const char* ip_str)
ip_str	.\src\Core\Net\IpAddress.cpp	/^const char* ip_str(const Ip_Address& addr)$/;"	f	signature:(const Ip_Address& addr)
ip_str	.\src\Core\Net\IpAddress.h	/^const char* ip_str(const Ip_Address& addr);/;"	p	signature:(const Ip_Address& addr)
is_local	.\src\Runtime\Online\Online.h	/^	bool is_local = false;$/;"	m	struct:Online_User	access:public
is_null_node	.\src\Core\Import\FBX_Parse.cpp	/^bool is_null_node(const Fbx_Node_Header& header)$/;"	f	signature:(const Fbx_Node_Header& header)
is_open	.\src\Core\Context\Context.h	/^	bool is_open = false;$/;"	m	struct:Context	access:public
item	.\src\Core\Container\SparseList.h	/^	T item;$/;"	m	struct:Sparse_List_Entry	access:public
keyboard	.\src\Core\Input\Input.h	/^	Action_State keyboard[(u32)Key::MAX];$/;"	m	struct:Input	access:public
khronos_boolean_enum_t	.\include\KHR\khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon1
khronos_float_t	.\include\KHR\khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t
khronos_int16_t	.\include\KHR\khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t
khronos_int32_t	.\include\KHR\khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t
khronos_int32_t	.\include\KHR\khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t
khronos_int32_t	.\include\KHR\khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t
khronos_int64_t	.\include\KHR\khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t
khronos_int64_t	.\include\KHR\khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t
khronos_int64_t	.\include\KHR\khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t
khronos_int64_t	.\include\KHR\khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t
khronos_int8_t	.\include\KHR\khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t
khronos_intptr_t	.\include\KHR\khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t
khronos_intptr_t	.\include\KHR\khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t
khronos_ssize_t	.\include\KHR\khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t
khronos_ssize_t	.\include\KHR\khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t
khronos_stime_nanoseconds_t	.\include\KHR\khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t
khronos_uint16_t	.\include\KHR\khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t
khronos_uint32_t	.\include\KHR\khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t
khronos_uint32_t	.\include\KHR\khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t
khronos_uint32_t	.\include\KHR\khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t
khronos_uint64_t	.\include\KHR\khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t
khronos_uint64_t	.\include\KHR\khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t
khronos_uint64_t	.\include\KHR\khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t
khronos_uint64_t	.\include\KHR\khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t
khronos_uint8_t	.\include\KHR\khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t
khronos_uintptr_t	.\include\KHR\khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t
khronos_uintptr_t	.\include\KHR\khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t
khronos_usize_t	.\include\KHR\khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t
khronos_usize_t	.\include\KHR\khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t
khronos_utime_nanoseconds_t	.\include\KHR\khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t
last	.\src\Core\Net\PacketList.h	/^	Packet_Block* last = nullptr;$/;"	m	struct:Packet_List	access:public
last_modified	.\src\Engine\Resource\Resource.h	/^	i64 last_modified = -1;$/;"	m	struct:Resource_Node	access:public
left	.\src\Engine\Resource\Resource.h	/^	Resource_Node* left = nullptr;$/;"	m	struct:Resource_Node	access:public
length	.\src\Core\Compress\Inflate.cpp	/^	u32 length;$/;"	m	struct:Inflate_Stream	file:	access:public
length	.\src\Core\Import\Dat.cpp	/^	u32 length;$/;"	m	struct:Dat_Buffer	file:	access:public
length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_Array_Header	file:	access:public
length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_Buffer	file:	access:public
length	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length;$/;"	m	struct:Fbx_String_Header	file:	access:public
length	.\src\Core\Import\Fbx_Data.h	/^	u32 length;$/;"	m	struct:Fbx_Array	access:public
length	.\src\Core\Import\Fbx_Data.h	/^	u32 length;$/;"	m	struct:Fbx_String	access:public
length	.\src\Core\Import\TGA.cpp	/^	u16 length;$/;"	m	struct:Tga_Color_Map	file:	access:public
length	.\src\Core\Math\Vector.h	/^inline float length(const Vec2& v)$/;"	f	signature:(const Vec2& v)
length	.\src\Core\Math\Vector.h	/^inline float length(const Vec3& v)$/;"	f	signature:(const Vec3& v)
length	.\src\Core\Math\Vector.h	/^inline float length(const Vec4& v)$/;"	f	signature:(const Vec4& v)
length_compressed	.\src\Core\Import\FBX_Parse.cpp	/^	u32 length_compressed;$/;"	m	struct:Fbx_Array_Header	file:	access:public
length_sqrd	.\src\Core\Math\Vector.h	/^inline float length_sqrd(const Vec2& v)$/;"	f	signature:(const Vec2& v)
length_sqrd	.\src\Core\Math\Vector.h	/^inline float length_sqrd(const Vec3& v)$/;"	f	signature:(const Vec3& v)
length_sqrd	.\src\Core\Math\Vector.h	/^inline float length_sqrd(const Vec4& v)$/;"	f	signature:(const Vec4& v)
lifetime	.\src\Runtime\Effect\LineDrawer.h	/^	float lifetime = 0.f;$/;"	m	struct:Line_Drawer	access:public
lifetime	.\src\Runtime\Game\Projectile.h	/^	float lifetime = 5.f;$/;"	m	struct:Projectile	access:public
light	.\src\Engine\Render\Render.h	/^	Mat4 light;$/;"	m	struct:Render_State	access:public
line_drawer	.\src\Runtime\Game\Projectile.h	/^	Line_Drawer* line_drawer;$/;"	m	struct:Projectile	access:public
line_drawer_add_segment	.\src\Runtime\Effect\LineDrawer.cpp	/^void line_drawer_add_segment(Line_Drawer* drawer)$/;"	f	signature:(Line_Drawer* drawer)
line_drawer_add_segment	.\src\Runtime\Effect\LineDrawer.h	/^void line_drawer_add_segment(Line_Drawer* drawer);$/;"	p	signature:(Line_Drawer* drawer)
line_drawer_destroy	.\src\Runtime\Effect\LineDrawer.cpp	/^void line_drawer_destroy(Line_Drawer* drawer)$/;"	f	signature:(Line_Drawer* drawer)
line_drawer_destroy	.\src\Runtime\Effect\LineDrawer.h	/^void line_drawer_destroy(Line_Drawer* drawer);$/;"	p	signature:(Line_Drawer* drawer)
line_drawer_init	.\src\Runtime\Effect\LineDrawer.cpp	/^void line_drawer_init()$/;"	f	signature:()
line_drawer_init	.\src\Runtime\Effect\LineDrawer.h	/^void line_drawer_init();$/;"	p	signature:()
line_drawer_make	.\src\Runtime\Effect\LineDrawer.cpp	/^Line_Drawer* line_drawer_make()$/;"	f	signature:()
line_drawer_make	.\src\Runtime\Effect\LineDrawer.h	/^Line_Drawer* line_drawer_make();$/;"	p	signature:()
line_drawer_render	.\src\Runtime\Effect\LineDrawer.cpp	/^void line_drawer_render(const Render_State& state)$/;"	f	signature:(const Render_State& state)
line_drawer_render	.\src\Runtime\Effect\LineDrawer.h	/^void line_drawer_render(const Render_State& state);/;"	p	signature:(const Render_State& state)
line_drawer_update	.\src\Runtime\Effect\LineDrawer.cpp	/^void line_drawer_update(Line_Drawer* drawer)$/;"	f	signature:(Line_Drawer* drawer)
line_list	.\src\Runtime\Effect\LineDrawer.cpp	/^Sparse_List<Line_Drawer> line_list;$/;"	v
line_material	.\src\Runtime\Effect\LineDrawer.cpp	/^const Material* line_material;$/;"	v
list	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* list = nullptr;$/;"	m	struct:Sparse_List	access:public
list	.\src\Engine\Tick\Tick.cpp	/^	Sparse_List<Ticker> list;$/;"	m	struct:Tick	file:	access:public
load_opengl_functions	.\src\Core\GL\GL.cpp	/^void load_opengl_functions()$/;"	f	signature:()
local_user	.\src\Runtime\Online\Client.h	/^	Online_User* local_user = nullptr;$/;"	m	struct:Client	access:public
log	.\src\Core\Debug\Log.cpp	/^	void log(const char* format, ...)$/;"	f	namespace:log_helpers	signature:(const char* format, ...)
log	.\src\Core\Debug\Log.h	/^	void log(const char* format, ...);$/;"	p	namespace:log_helpers	signature:(const char* format, ...)
log_helpers	.\src\Core\Debug\Log.cpp	/^namespace log_helpers$/;"	n	file:
log_helpers	.\src\Core\Debug\Log.h	/^namespace log_helpers$/;"	n
log_helpers::log	.\src\Core\Debug\Log.cpp	/^	void log(const char* format, ...)$/;"	f	namespace:log_helpers	signature:(const char* format, ...)
log_helpers::log	.\src\Core\Debug\Log.h	/^	void log(const char* format, ...);$/;"	p	namespace:log_helpers	signature:(const char* format, ...)
log_mutex	.\src\Core\Net\Net.h	/^	Mutex log_mutex;$/;"	m	struct:Net_Service	access:public
m00	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
m01	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
m02	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
m03	.\src\Core\Math\Matrix.h	/^	float m00, m01, m02, m03;$/;"	m	struct:Mat4	access:public
m10	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
m11	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
m12	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
m13	.\src\Core\Math\Matrix.h	/^	float m10, m11, m12, m13;$/;"	m	struct:Mat4	access:public
m20	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
m21	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
m22	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
m23	.\src\Core\Math\Matrix.h	/^	float m20, m21, m22, m23;$/;"	m	struct:Mat4	access:public
m30	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
m31	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
m32	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
m33	.\src\Core\Math\Matrix.h	/^	float m30, m31, m32, m33;$/;"	m	struct:Mat4	access:public
main	.\src\Runtime\main.cpp	/^int main(int argc, const char** argv)$/;"	f	signature:(int argc, const char** argv)
make_ticker	.\src\Engine\Tick\Tick.cpp	/^Ticker* make_ticker(tick_func_ptr func, void* user_ptr)$/;"	f	signature:(tick_func_ptr func, void* user_ptr)
make_ticker	.\src\Engine\Tick\Tick.h	/^Ticker* make_ticker(tick_func_ptr func, void* user_ptr);$/;"	p	signature:(tick_func_ptr func, void* user_ptr)
malloc_t	.\src\Core\Memory\Mem.h	6;"	d
map	.\src\Core\Compress\Huffman.h	/^	i16 map[1 << (HUFFMAN_MAX_CODE_LEN + 1)];$/;"	m	struct:Huffman_Tree	access:public
mat_look_at	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_look_at(const Vec3& eye, const Vec3& target, const Vec3& up)$/;"	f	signature:(const Vec3& eye, const Vec3& target, const Vec3& up)
mat_look_at	.\src\Core\Math\Matrix.h	/^Mat4 mat_look_at(const Vec3& eye, const Vec3& target, const Vec3& up);$/;"	p	signature:(const Vec3& eye, const Vec3& target, const Vec3& up)
mat_look_forward	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_look_forward(const Vec3& eye, const Vec3& forward, const Vec3& up)$/;"	f	signature:(const Vec3& eye, const Vec3& forward, const Vec3& up)
mat_look_forward	.\src\Core\Math\Matrix.h	/^Mat4 mat_look_forward(const Vec3& eye, const Vec3& forward, const Vec3& up);$/;"	p	signature:(const Vec3& eye, const Vec3& forward, const Vec3& up)
mat_ortho	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_ortho(float left, float right, float bottom, float top, float near, float far)$/;"	f	signature:(float left, float right, float bottom, float top, float near, float far)
mat_ortho	.\src\Core\Math\Matrix.h	/^Mat4 mat_ortho(float left, float right, float bottom, float top, float near, float far);$/;"	p	signature:(float left, float right, float bottom, float top, float near, float far)
mat_perspective	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_perspective(float fov, float aspect, float near, float far)$/;"	f	signature:(float fov, float aspect, float near, float far)
mat_perspective	.\src\Core\Math\Matrix.h	/^Mat4 mat_perspective(float fov, float aspect, float near, float far);$/;"	p	signature:(float fov, float aspect, float near, float far)
mat_position_rotation	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_position_rotation(const Vec3& position, const Quat& rotation)$/;"	f	signature:(const Vec3& position, const Quat& rotation)
mat_position_rotation	.\src\Core\Math\Matrix.h	/^Mat4 mat_position_rotation(const Vec3& position, const Quat& rotation);$/;"	p	signature:(const Vec3& position, const Quat& rotation)
mat_position_rotation_scale	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_position_rotation_scale(const Vec3& position, const Quat& rotation, const Vec3& scale)$/;"	f	signature:(const Vec3& position, const Quat& rotation, const Vec3& scale)
mat_position_rotation_scale	.\src\Core\Math\Matrix.h	/^Mat4 mat_position_rotation_scale(const Vec3& position, const Quat& rotation, const Vec3& scale);/;"	p	signature:(const Vec3& position, const Quat& rotation, const Vec3& scale)
mat_position_scale	.\src\Core\Math\Matrix.cpp	/^Mat4 mat_position_scale(const Vec3& position, const Vec3& scale)$/;"	f	signature:(const Vec3& position, const Vec3& scale)
mat_position_scale	.\src\Core\Math\Matrix.h	/^Mat4 mat_position_scale(const Vec3& position, const Vec3& scale);$/;"	p	signature:(const Vec3& position, const Vec3& scale)
mat_to_quat	.\src\Core\Math\Quaternion.cpp	/^Quat mat_to_quat(const Mat4& m)$/;"	f	signature:(const Mat4& m)
mat_to_quat	.\src\Core\Math\Quaternion.h	/^Quat mat_to_quat(const Mat4& mat);$/;"	p	signature:(const Mat4& mat)
material	.\src\Engine\Render\Drawable.h	/^	const Material* material = nullptr;$/;"	m	struct:Drawable	access:public
material_load	.\src\Engine\Graphics\Material.cpp	/^const Material* material_load(const char* path)$/;"	f	signature:(const char* path)
material_load	.\src\Engine\Graphics\Material.h	/^const Material* material_load(const char* path);$/;"	p	signature:(const char* path)
material_res_create	.\src\Engine\Graphics\Material.cpp	/^void material_res_create(Resource* resource)$/;"	f	signature:(Resource* resource)
material_res_destroy	.\src\Engine\Graphics\Material.cpp	/^void material_res_destroy(Resource* resource)$/;"	f	signature:(Resource* resource)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const Mat4& value)$/;"	f	signature:(const Material* mat, const char* name, const Mat4& value)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const Vec2& value)$/;"	f	signature:(const Material* mat, const char* name, const Vec2& value)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const Vec3& value)$/;"	f	signature:(const Material* mat, const char* name, const Vec3& value)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const Vec4& value)$/;"	f	signature:(const Material* mat, const char* name, const Vec4& value)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const float value)$/;"	f	signature:(const Material* mat, const char* name, const float value)
material_set	.\src\Engine\Graphics\Material.cpp	/^void material_set(const Material* mat, const char* name, const int value)$/;"	f	signature:(const Material* mat, const char* name, const int value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const Mat4& value);/;"	p	signature:(const Material* mat, const char* name, const Mat4& value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const Vec2& value);$/;"	p	signature:(const Material* mat, const char* name, const Vec2& value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const Vec3& value);$/;"	p	signature:(const Material* mat, const char* name, const Vec3& value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const Vec4& value);$/;"	p	signature:(const Material* mat, const char* name, const Vec4& value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const float value);$/;"	p	signature:(const Material* mat, const char* name, const float value)
material_set	.\src\Engine\Graphics\Material.h	/^void material_set(const Material* mat, const char* name, const int value);$/;"	p	signature:(const Material* mat, const char* name, const int value)
mem_arena	.\src\Core\Import\Fbx.h	/^	Mem_Arena mem_arena;$/;"	m	struct:Fbx_Scene	access:public
mem_zero	.\src\Core\Memory\Mem.h	5;"	d
mesh	.\src\Engine\Render\Drawable.h	/^	const Mesh* mesh = nullptr;$/;"	m	struct:Drawable	access:public
mesh	.\src\Runtime\Effect\LineDrawer.h	/^	Mesh mesh;$/;"	m	struct:Line_Drawer	access:public
mesh_add_buffers	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_add_buffers(Mesh* mesh, u32 count)$/;"	f	signature:(Mesh* mesh, u32 count)
mesh_add_buffers	.\src\Engine\Graphics\Mesh.h	/^void mesh_add_buffers(Mesh* mesh, u32 count);$/;"	p	signature:(Mesh* mesh, u32 count)
mesh_bind_buffer	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_bind_buffer(Mesh* mesh, u32 buffer_index, u32 attribute_index, u32 element_count, u32 stride, u32 offset)$/;"	f	signature:(Mesh* mesh, u32 buffer_index, u32 attribute_index, u32 element_count, u32 stride, u32 offset)
mesh_bind_buffer	.\src\Engine\Graphics\Mesh.h	/^void mesh_bind_buffer(Mesh* mesh, u32 buffer_index, u32 attribute_index, u32 element_count, u32 stride, u32 offset);$/;"	p	signature:(Mesh* mesh, u32 buffer_index, u32 attribute_index, u32 element_count, u32 stride, u32 offset)
mesh_buffer_data	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_buffer_data(Mesh* mesh, u32 buffer_index, void* data, u32 size)$/;"	f	signature:(Mesh* mesh, u32 buffer_index, void* data, u32 size)
mesh_buffer_data	.\src\Engine\Graphics\Mesh.h	/^void mesh_buffer_data(Mesh* mesh, u32 buffer_index, void* data, u32 size);$/;"	p	signature:(Mesh* mesh, u32 buffer_index, void* data, u32 size)
mesh_create	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_create(Mesh* mesh)$/;"	f	signature:(Mesh* mesh)
mesh_create	.\src\Engine\Graphics\Mesh.h	/^void mesh_create(Mesh* mesh);$/;"	p	signature:(Mesh* mesh)
mesh_draw	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_draw(const Mesh* mesh)$/;"	f	signature:(const Mesh* mesh)
mesh_draw	.\src\Engine\Graphics\Mesh.h	/^void mesh_draw(const Mesh* mesh);$/;"	p	signature:(const Mesh* mesh)
mesh_element_data	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_element_data(Mesh* mesh, u32 buffer_index, void* data, u32 size)$/;"	f	signature:(Mesh* mesh, u32 buffer_index, void* data, u32 size)
mesh_element_data	.\src\Engine\Graphics\Mesh.h	/^void mesh_element_data(Mesh* mesh, u32 buffer_index, void* data, u32 size);$/;"	p	signature:(Mesh* mesh, u32 buffer_index, void* data, u32 size)
mesh_free	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_free(Mesh* mesh)$/;"	f	signature:(Mesh* mesh)
mesh_free	.\src\Engine\Graphics\Mesh.h	/^void mesh_free(Mesh* mesh);$/;"	p	signature:(Mesh* mesh)
mesh_load	.\src\Engine\Graphics\Mesh.cpp	/^const Mesh* mesh_load(const char* path)$/;"	f	signature:(const char* path)
mesh_load	.\src\Engine\Graphics\Mesh.h	/^const Mesh* mesh_load(const char* path);$/;"	p	signature:(const char* path)
mesh_load_triangle	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_load_triangle(Mesh* mesh)$/;"	f	signature:(Mesh* mesh)
mesh_load_triangle	.\src\Engine\Graphics\Mesh.h	/^void mesh_load_triangle(Mesh* mesh);$/;"	p	signature:(Mesh* mesh)
mesh_load_verts	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_load_verts(Mesh* mesh, void* v_ptr, u32 size)$/;"	f	signature:(Mesh* mesh, void* v_ptr, u32 size)
mesh_load_verts	.\src\Engine\Graphics\Mesh.h	/^void mesh_load_verts(Mesh* mesh, void* v_ptr, u32 size);$/;"	p	signature:(Mesh* mesh, void* v_ptr, u32 size)
mesh_res_create	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_res_create(Resource* resource)$/;"	f	signature:(Resource* resource)
mesh_res_destroy	.\src\Engine\Graphics\Mesh.cpp	/^void mesh_res_destroy(Resource* resource)$/;"	f	signature:(Resource* resource)
meshes	.\src\Core\Import\Fbx.h	/^	Fbx_Mesh* meshes;$/;"	m	struct:Fbx_Scene	access:public
message_box	.\src\Core\Debug\Assert.cpp	/^	void message_box(const char* title, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* title, const char* format, ...)
message_box	.\src\Core\Debug\Assert.h	/^	void message_box(const char* title, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* title, const char* format, ...)
min	.\src\Core\Math\Math.h	/^inline float min(float a, float b) { return a > b ? b : a; }/;"	f	signature:(float a, float b)
min	.\src\Core\Math\Math.h	/^inline int min(int a, int b) { return a > b ? b : a; }$/;"	f	signature:(int a, int b)
mouse	.\src\Core\Input\Input.h	/^	Mouse_State mouse;$/;"	m	struct:Input	access:public
move_speed	.\src\Runtime\Unit\Unit.h	/^	float move_speed = 4.f;$/;"	m	struct:Unit	access:public
msg_box	.\src\Core\Debug\Assert.h	5;"	d
mutex_create	.\src\Core\Thread\Mutex.cpp	/^void mutex_create(Mutex* mutex)$/;"	f	signature:(Mutex* mutex)
mutex_create	.\src\Core\Thread\Mutex.h	/^void mutex_create(Mutex* mutex);$/;"	p	signature:(Mutex* mutex)
mutex_destroy	.\src\Core\Thread\Mutex.cpp	/^void mutex_destroy(Mutex* mutex)$/;"	f	signature:(Mutex* mutex)
mutex_destroy	.\src\Core\Thread\Mutex.h	/^void mutex_destroy(Mutex* mutex);$/;"	p	signature:(Mutex* mutex)
mutex_lock	.\src\Core\Thread\Mutex.cpp	/^void mutex_lock(Mutex* mutex)$/;"	f	signature:(Mutex* mutex)
mutex_lock	.\src\Core\Thread\Mutex.h	/^void mutex_lock(Mutex* mutex);$/;"	p	signature:(Mutex* mutex)
mutex_release	.\src\Core\Thread\Mutex.cpp	/^void mutex_release(Mutex* mutex)$/;"	f	signature:(Mutex* mutex)
mutex_release	.\src\Core\Thread\Mutex.h	/^void mutex_release(Mutex* mutex);/;"	p	signature:(Mutex* mutex)
mutex_try_lock	.\src\Core\Thread\Mutex.cpp	/^bool mutex_try_lock(Mutex* mutex)$/;"	f	signature:(Mutex* mutex)
mutex_try_lock	.\src\Core\Thread\Mutex.h	/^bool mutex_try_lock(Mutex* mutex);$/;"	p	signature:(Mutex* mutex)
mutexes	.\src\Core\Net\Connection.h	/^	Mutex mutexes[(u32)Connection_Lock::Max];$/;"	m	struct:Connection	access:public
name	.\src\Core\Import\Dat.h	/^	char* name = nullptr;$/;"	m	struct:Dat_Key	access:public
name	.\src\Core\Import\Fbx_Data.h	/^	char* name = nullptr;$/;"	m	struct:Fbx_Node	access:public
name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Online_User	access:public
name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Rpc_Login	access:public
name	.\src\Runtime\Online\Online.h	/^	char name[20];$/;"	m	struct:Rpc_User	access:public
name_len	.\src\Core\Import\Dat.h	/^	u32 name_len = 0;$/;"	m	struct:Dat_Key	access:public
name_len	.\src\Core\Import\FBX_Parse.cpp	/^	u8 name_len;$/;"	m	struct:Fbx_Node_Header	file:	access:public
name_len	.\src\Core\Import\Fbx_Data.h	/^	u16 name_len = 0;$/;"	m	struct:Fbx_Node	access:public
near	.\src\Core\WinMin.h	51;"	d
near	.\src\Core\Windows\WinSock.h	11;"	d
near	.\src\Core\Windows\WinSock.h	3;"	d
near_ptr	.\src\Core\Container\SparseList.h	/^	Sparse_List_Entry<T>* near_ptr = nullptr;$/;"	m	struct:Sparse_List	access:public
nearly_equal	.\src\Core\Math\Vector.h	/^inline bool nearly_equal(const Vec2& a, const Vec2& b, float margin = 0.0001f)$/;"	f	signature:(const Vec2& a, const Vec2& b, float margin = 0.0001f)
nearly_equal	.\src\Core\Math\Vector.h	/^inline bool nearly_equal(const Vec3& a, const Vec3& b, float margin = 0.0001f)$/;"	f	signature:(const Vec3& a, const Vec3& b, float margin = 0.0001f)
nearly_equal	.\src\Core\Math\Vector.h	/^inline bool nearly_equal(const Vec4& a, const Vec4& b, float margin = 0.0001f)$/;"	f	signature:(const Vec4& a, const Vec4& b, float margin = 0.0001f)
nearly_equal	.\src\Core\Math\Vector.h	/^inline bool nearly_equal(float a, float b, float margin = 0.0001f)$/;"	f	signature:(float a, float b, float margin = 0.0001f)
nearly_zero	.\src\Core\Math\Vector.h	/^inline bool nearly_zero(const Vec2& v, float margin = 0.0001f)$/;"	f	signature:(const Vec2& v, float margin = 0.0001f)
nearly_zero	.\src\Core\Math\Vector.h	/^inline bool nearly_zero(const Vec3& v, float margin = 0.0001f)$/;"	f	signature:(const Vec3& v, float margin = 0.0001f)
nearly_zero	.\src\Core\Math\Vector.h	/^inline bool nearly_zero(const Vec4& v, float margin = 0.0001f)$/;"	f	signature:(const Vec4& v, float margin = 0.0001f)
nearly_zero	.\src\Core\Math\Vector.h	/^inline bool nearly_zero(float v, float margin = 0.0001f)$/;"	f	signature:(float v, float margin = 0.0001f)
net	.\src\Core\Net\Net.cpp	/^Net_Service net;$/;"	v
net_broadcast	.\src\Core\Net\Net.h	/^void net_broadcast(bool reliable, const void* data, u32 size);$/;"	p	signature:(bool reliable, const void* data, u32 size)
net_close_connection	.\src\Core\Net\Net.cpp	/^void net_close_connection(Connection* connection)$/;"	f	signature:(Connection* connection)
net_close_connection	.\src\Core\Net\Net.h	/^void net_close_connection(Connection* connection);$/;"	p	signature:(Connection* connection)
net_connect	.\src\Core\Net\Net.cpp	/^Connection_Handle net_connect(const Ip_Address& addr)$/;"	f	signature:(const Ip_Address& addr)
net_connect	.\src\Core\Net\Net.h	/^Connection_Handle net_connect(const Ip_Address& addr);$/;"	p	signature:(const Ip_Address& addr)
net_log	.\src\Core\Net\Net.cpp	/^void net_log(const char* format, ...)$/;"	f	signature:(const char* format, ...)
net_log	.\src\Core\Net\Net.h	/^void net_log(const char* format, ...);$/;"	p	signature:(const char* format, ...)
net_push_event	.\src\Core\Net\Net.cpp	/^void net_push_event(Net_Event_Type type, Connection* connection)$/;"	f	signature:(Net_Event_Type type, Connection* connection)
net_push_event	.\src\Core\Net\Net.h	/^void net_push_event(Net_Event_Type type, Connection* connection);$/;"	p	signature:(Net_Event_Type type, Connection* connection)
net_push_packet_event	.\src\Core\Net\Net.cpp	/^void net_push_packet_event(Connection* connection, Packet* packet)$/;"	f	signature:(Connection* connection, Packet* packet)
net_push_packet_event	.\src\Core\Net\Net.h	/^void net_push_packet_event(Connection* connection, Packet* packet);$/;"	p	signature:(Connection* connection, Packet* packet)
net_send	.\src\Core\Net\Net.cpp	/^void net_send(const Connection_Handle& target, bool reliable, const void* data, u32 size)$/;"	f	signature:(const Connection_Handle& target, bool reliable, const void* data, u32 size)
net_send	.\src\Core\Net\Net.h	/^void net_send(const Connection_Handle& target, bool reliable, const void* data, u32 size);$/;"	p	signature:(const Connection_Handle& target, bool reliable, const void* data, u32 size)
net_service_flush_out	.\src\Core\Net\Service\ServiceSend.cpp	/^void net_service_flush_out(Connection* connection)$/;"	f	signature:(Connection* connection)
net_service_flush_out	.\src\Core\Net\Service\ServiceSend.h	/^void net_service_flush_out(Connection* connection);$/;"	p	signature:(Connection* connection)
net_service_recv	.\src\Core\Net\Service\ServiceRecv.cpp	/^void net_service_recv(void*)$/;"	f	signature:(void*)
net_service_recv	.\src\Core\Net\Service\ServiceRecv.h	/^void net_service_recv(void*);/;"	p	signature:(void*)
net_service_send	.\src\Core\Net\Service\ServiceSend.cpp	/^void net_service_send(void*)$/;"	f	signature:(void*)
net_service_send	.\src\Core\Net\Service\ServiceSend.h	/^void net_service_send(void*);/;"	p	signature:(void*)
net_shutdown	.\src\Core\Net\Net.cpp	/^void net_shutdown()$/;"	f	signature:()
net_shutdown	.\src\Core\Net\Net.h	/^void net_shutdown();$/;"	p	signature:()
net_startup	.\src\Core\Net\Net.cpp	/^void net_startup(u16 port)$/;"	f	signature:(u16 port)
net_startup	.\src\Core\Net\Net.h	/^void net_startup(u16 port = PORT_ANY);$/;"	p	signature:(u16 port = PORT_ANY)
net_swap_event_list	.\src\Core\Net\Net.cpp	/^void net_swap_event_list(Net_Event** out_list)$/;"	f	signature:(Net_Event** out_list)
net_swap_event_list	.\src\Core\Net\Net.h	/^void net_swap_event_list(Net_Event** out_list);$/;"	p	signature:(Net_Event** out_list)
net_swap_event_single	.\src\Core\Net\Net.cpp	/^void net_swap_event_single(Net_Event** out_event)$/;"	f	signature:(Net_Event** out_event)
net_swap_event_single	.\src\Core\Net\Net.h	/^void net_swap_event_single(Net_Event** out_event);/;"	p	signature:(Net_Event** out_event)
next	.\src\Core\Import\Dat.h	/^	Dat_Key* next = nullptr;$/;"	m	struct:Dat_Key	access:public
next	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Node* next = nullptr;$/;"	m	struct:Fbx_Node	access:public
next	.\src\Core\Net\NetEvent.h	/^	Net_Event* next = nullptr;$/;"	m	struct:Net_Event	access:public
next	.\src\Core\Net\PacketList.h	/^	Packet_Block* next;$/;"	m	struct:Packet_Block	access:public
next	.\src\Engine\Resource\ResourceList.h	/^	Resource_List* next = nullptr;$/;"	m	struct:Resource_List	access:public
next_in_id	.\src\Core\Net\Connection.h	/^	u32 next_in_id = 0;$/;"	m	struct:Connection	access:public
next_out_id	.\src\Core\Net\Connection.h	/^	u32 next_out_id = 0;$/;"	m	struct:Connection	access:public
normalize	.\src\Core\Math\Vector.h	/^inline Vec2 normalize(const Vec2& v)$/;"	f	signature:(const Vec2& v)
normalize	.\src\Core\Math\Vector.h	/^inline Vec3 normalize(const Vec3& v)$/;"	f	signature:(const Vec3& v)
normalize	.\src\Core\Math\Vector.h	/^inline Vec4 normalize(const Vec4& v)$/;"	f	signature:(const Vec4& v)
normals	.\src\Core\Import\Fbx.h	/^	Vec3* normals = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
num_args	.\src\Core\Args\Args.cpp	/^	u32 num_args;$/;"	m	struct:Args	file:	access:public
num_buffers	.\src\Engine\Graphics\Mesh.h	/^	u8 num_buffers = 0;$/;"	m	struct:Mesh	access:public
num_faces	.\src\Core\Import\Fbx.h	/^	u32 num_faces = 0;$/;"	m	struct:Fbx_Mesh	access:public
num_meshes	.\src\Core\Import\Fbx.h	/^	u32 num_meshes;$/;"	m	struct:Fbx_Scene	access:public
num_segments	.\src\Runtime\Effect\LineDrawer.h	/^	u32 num_segments = 0;$/;"	m	struct:Line_Drawer	access:public
num_textures	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 num_textures = 0;$/;"	m	struct:Frame_Buffer	access:public
num_verts	.\src\Core\Import\Fbx.h	/^	u32 num_verts = 0;$/;"	m	struct:Fbx_Mesh	access:public
offset	.\src\Core\Import\Dat.cpp	/^	u32 offset;$/;"	m	struct:Dat_Buffer	file:	access:public
operator !=	.\src\Core\Net\Connection.cpp	/^bool operator!=(const Connection_Handle& lhs, const Connection_Handle& rhs)$/;"	f	signature:(const Connection_Handle& lhs, const Connection_Handle& rhs)
operator !=	.\src\Core\Net\Connection.h	/^bool operator!=(const Connection_Handle& lhs, const Connection_Handle& rhs);$/;"	p	signature:(const Connection_Handle& lhs, const Connection_Handle& rhs)
operator !=	.\src\Core\Net\IpAddress.h	/^inline bool operator!=(const Ip_Address& a, const Ip_Address& b)$/;"	f	signature:(const Ip_Address& a, const Ip_Address& b)
operator !=	.\src\Runtime\Online\Channel.cpp	/^bool operator!=(const Channel_Id& lhs, const Channel_Id& rhs)$/;"	f	signature:(const Channel_Id& lhs, const Channel_Id& rhs)
operator !=	.\src\Runtime\Online\Channel.h	/^bool operator!=(const Channel_Id& lhs, const Channel_Id& rhs);$/;"	p	signature:(const Channel_Id& lhs, const Channel_Id& rhs)
operator *	.\src\Core\Math\Matrix.cpp	/^Mat4 operator*(const Mat4& a, const Mat4& b)$/;"	f	signature:(const Mat4& a, const Mat4& b)
operator *	.\src\Core\Math\Matrix.cpp	/^Vec3 operator*(const Mat4& m, const Vec3& v)$/;"	f	signature:(const Mat4& m, const Vec3& v)
operator *	.\src\Core\Math\Matrix.cpp	/^Vec4 operator*(const Mat4& m, const Vec4& v)$/;"	f	signature:(const Mat4& m, const Vec4& v)
operator *	.\src\Core\Math\Matrix.h	/^Mat4 operator*(const Mat4& a, const Mat4& b);$/;"	p	signature:(const Mat4& a, const Mat4& b)
operator *	.\src\Core\Math\Matrix.h	/^Vec3 operator*(const Mat4& m, const Vec3& v);$/;"	p	signature:(const Mat4& m, const Vec3& v)
operator *	.\src\Core\Math\Matrix.h	/^Vec4 operator*(const Mat4& m, const Vec4& v);$/;"	p	signature:(const Mat4& m, const Vec4& v)
operator *	.\src\Core\Math\Quaternion.cpp	/^Quat operator*(const Quat& a, const Quat& b)$/;"	f	signature:(const Quat& a, const Quat& b)
operator *	.\src\Core\Math\Quaternion.cpp	/^Vec3 operator*(const Quat& q, const Vec3& v)$/;"	f	signature:(const Quat& q, const Vec3& v)
operator *	.\src\Core\Math\Quaternion.h	/^Quat operator*(const Quat& a, const Quat& b);$/;"	p	signature:(const Quat& a, const Quat& b)
operator *	.\src\Core\Math\Quaternion.h	/^Vec3 operator*(const Quat& q, const Vec3& v);$/;"	p	signature:(const Quat& q, const Vec3& v)
operator *	.\src\Core\Math\Vector.h	/^inline Vec2 operator*(const Vec2& a, float scalar) { return Vec2(a.x * scalar, a.y * scalar); }$/;"	f	signature:(const Vec2& a, float scalar)
operator *	.\src\Core\Math\Vector.h	/^inline Vec3 operator*(const Vec3& a, float scalar) { return Vec3(a.x * scalar, a.y * scalar, a.z * scalar); }$/;"	f	signature:(const Vec3& a, float scalar)
operator *	.\src\Core\Math\Vector.h	/^inline Vec4 operator*(const Vec4& a, float scalar) { return Vec4(a.x * scalar, a.y * scalar, a.z * scalar, a.w * scalar); }$/;"	f	signature:(const Vec4& a, float scalar)
operator *=	.\src\Core\Math\Vector.h	/^inline Vec2& operator*=(Vec2& a, float scalar) { a.x *= scalar; a.y *= scalar; return a; }$/;"	f	signature:(Vec2& a, float scalar)
operator *=	.\src\Core\Math\Vector.h	/^inline Vec3& operator*=(Vec3& a, float scalar) { a.x *= scalar; a.y *= scalar; a.z *= scalar; return a; }$/;"	f	signature:(Vec3& a, float scalar)
operator *=	.\src\Core\Math\Vector.h	/^inline Vec4& operator*=(Vec4& a, float scalar) { a.x *= scalar; a.y *= scalar; a.z *= scalar; a.w *= scalar; return a; }$/;"	f	signature:(Vec4& a, float scalar)
operator +	.\src\Core\Defer.h	/^	_Defer<TFunctor> operator+(TFunctor functor)$/;"	f	struct:DeferHelper	access:public	signature:(TFunctor functor)
operator +	.\src\Core\Math\Vector.h	/^inline Vec2 operator+(const Vec2& a, const Vec2& b) { return Vec2(a.x + b.x, a.y + b.y); }$/;"	f	signature:(const Vec2& a, const Vec2& b)
operator +	.\src\Core\Math\Vector.h	/^inline Vec2 operator+(const Vec2& a, float scalar) { return Vec2(a.x + scalar, a.y + scalar); }$/;"	f	signature:(const Vec2& a, float scalar)
operator +	.\src\Core\Math\Vector.h	/^inline Vec3 operator+(const Vec3& a, const Vec3& b) { return Vec3(a.x + b.x, a.y + b.y, a.z + b.z); }$/;"	f	signature:(const Vec3& a, const Vec3& b)
operator +	.\src\Core\Math\Vector.h	/^inline Vec3 operator+(const Vec3& a, float scalar) { return Vec3(a.x + scalar, a.y + scalar, a.z + scalar); }$/;"	f	signature:(const Vec3& a, float scalar)
operator +	.\src\Core\Math\Vector.h	/^inline Vec4 operator+(const Vec4& a, const Vec4& b) { return Vec4(a.x + b.x, a.y + b.y, a.z + b.z, a.w + b.w); }$/;"	f	signature:(const Vec4& a, const Vec4& b)
operator +	.\src\Core\Math\Vector.h	/^inline Vec4 operator+(const Vec4& a, float scalar) { return Vec4(a.x + scalar, a.y + scalar, a.z + scalar, a.w + scalar); }$/;"	f	signature:(const Vec4& a, float scalar)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec2& operator+=(Vec2& a, const Vec2& b) { a.x += b.x; a.y += b.y; return a; }$/;"	f	signature:(Vec2& a, const Vec2& b)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec2& operator+=(Vec2& a, float scalar) { a.x += scalar; a.y += scalar; return a; }$/;"	f	signature:(Vec2& a, float scalar)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec3& operator+=(Vec3& a, const Vec3& b) { a.x += b.x; a.y += b.y; a.z += b.z; return a; }$/;"	f	signature:(Vec3& a, const Vec3& b)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec3& operator+=(Vec3& a, float scalar) { a.x += scalar; a.y += scalar; a.z += scalar; return a; }$/;"	f	signature:(Vec3& a, float scalar)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec4& operator+=(Vec4& a, const Vec4& b) { a.x += b.x; a.y += b.y; a.z += b.z; a.w += b.w; return a; }$/;"	f	signature:(Vec4& a, const Vec4& b)
operator +=	.\src\Core\Math\Vector.h	/^inline Vec4& operator+=(Vec4& a, float scalar) { a.x += scalar; a.y += scalar; a.z += scalar; a.w += scalar; return a; }$/;"	f	signature:(Vec4& a, float scalar)
operator -	.\src\Core\Math\Vector.h	/^inline Vec2 operator-(const Vec2& a, const Vec2& b) { return Vec2(a.x - b.x, a.y - b.y); }$/;"	f	signature:(const Vec2& a, const Vec2& b)
operator -	.\src\Core\Math\Vector.h	/^inline Vec2 operator-(const Vec2& a, float scalar) { return Vec2(a.x - scalar, a.y - scalar); }$/;"	f	signature:(const Vec2& a, float scalar)
operator -	.\src\Core\Math\Vector.h	/^inline Vec2 operator-(const Vec2& v) { return Vec2(-v.x, -v.y); }$/;"	f	signature:(const Vec2& v)
operator -	.\src\Core\Math\Vector.h	/^inline Vec3 operator-(const Vec3& a, const Vec3& b) { return Vec3(a.x - b.x, a.y - b.y, a.z - b.z); }$/;"	f	signature:(const Vec3& a, const Vec3& b)
operator -	.\src\Core\Math\Vector.h	/^inline Vec3 operator-(const Vec3& a, float scalar) { return Vec3(a.x - scalar, a.y - scalar, a.z - scalar); }$/;"	f	signature:(const Vec3& a, float scalar)
operator -	.\src\Core\Math\Vector.h	/^inline Vec3 operator-(const Vec3& v) { return Vec3(-v.x, -v.y, -v.z); }$/;"	f	signature:(const Vec3& v)
operator -	.\src\Core\Math\Vector.h	/^inline Vec4 operator-(const Vec4& a, const Vec4& b) { return Vec4(a.x - b.x, a.y - b.y, a.z - b.z, a.w - b.w); }$/;"	f	signature:(const Vec4& a, const Vec4& b)
operator -	.\src\Core\Math\Vector.h	/^inline Vec4 operator-(const Vec4& a, float scalar) { return Vec4(a.x - scalar, a.y - scalar, a.z - scalar, a.w - scalar); }$/;"	f	signature:(const Vec4& a, float scalar)
operator -	.\src\Core\Math\Vector.h	/^inline Vec4 operator-(const Vec4& v) { return Vec4(-v.x, -v.y, -v.z, -v.w); }$/;"	f	signature:(const Vec4& v)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec2& operator-=(Vec2& a, const Vec2& b) { a.x -= b.x; a.y -= b.y; return a; }$/;"	f	signature:(Vec2& a, const Vec2& b)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec2& operator-=(Vec2& a, float scalar) { a.x -= scalar; a.y -= scalar; return a; }$/;"	f	signature:(Vec2& a, float scalar)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec3& operator-=(Vec3& a, const Vec3& b) { a.x -= b.x; a.y -= b.y; a.z -= b.z; return a; }$/;"	f	signature:(Vec3& a, const Vec3& b)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec3& operator-=(Vec3& a, float scalar) { a.x -= scalar; a.y -= scalar; a.z -= scalar; return a; }$/;"	f	signature:(Vec3& a, float scalar)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec4& operator-=(Vec4& a, const Vec4& b) { a.x -= b.x; a.y -= b.y; a.z -= b.z; a.w -= b.w; return a; }$/;"	f	signature:(Vec4& a, const Vec4& b)
operator -=	.\src\Core\Math\Vector.h	/^inline Vec4& operator-=(Vec4& a, float scalar) { a.x -= scalar; a.y -= scalar; a.z -= scalar; a.w -= scalar; return a; }$/;"	f	signature:(Vec4& a, float scalar)
operator /	.\src\Core\Math\Vector.h	/^inline Vec2 operator\/(const Vec2& a, const Vec2& b) { return Vec2(a.x \/ b.x, a.y \/ b.y); }$/;"	f	signature:(const Vec2& a, const Vec2& b)
operator /	.\src\Core\Math\Vector.h	/^inline Vec2 operator\/(const Vec2& a, float scalar) { return Vec2(a.x \/ scalar, a.y \/ scalar); }$/;"	f	signature:(const Vec2& a, float scalar)
operator /	.\src\Core\Math\Vector.h	/^inline Vec3 operator\/(const Vec3& a, const Vec3& b) { return Vec3(a.x \/ b.x, a.y \/ b.y, a.z \/ b.z); }$/;"	f	signature:(const Vec3& a, const Vec3& b)
operator /	.\src\Core\Math\Vector.h	/^inline Vec3 operator\/(const Vec3& a, float scalar) { return Vec3(a.x \/ scalar, a.y \/ scalar, a.z \/ scalar); }$/;"	f	signature:(const Vec3& a, float scalar)
operator /	.\src\Core\Math\Vector.h	/^inline Vec4 operator\/(const Vec4& a, const Vec4& b) { return Vec4(a.x \/ b.x, a.y \/ b.y, a.z \/ b.z, a.w \/ b.w); }$/;"	f	signature:(const Vec4& a, const Vec4& b)
operator /	.\src\Core\Math\Vector.h	/^inline Vec4 operator\/(const Vec4& a, float scalar) { return Vec4(a.x \/ scalar, a.y \/ scalar, a.z \/ scalar, a.w \/ scalar); }$/;"	f	signature:(const Vec4& a, float scalar)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec2& operator\/=(Vec2& a, const Vec2& b) { a.x \/= b.x; a.y \/= b.y; return a; }$/;"	f	signature:(Vec2& a, const Vec2& b)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec2& operator\/=(Vec2& a, float scalar) { a.x \/= scalar; a.y \/= scalar; return a; }$/;"	f	signature:(Vec2& a, float scalar)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec3& operator\/=(Vec3& a, const Vec3& b) { a.x \/= b.x; a.y \/= b.y; a.z \/= b.z; return a; }$/;"	f	signature:(Vec3& a, const Vec3& b)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec3& operator\/=(Vec3& a, float scalar) { a.x \/= scalar; a.y \/= scalar; a.z \/= scalar; return a; }$/;"	f	signature:(Vec3& a, float scalar)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec4& operator\/=(Vec4& a, const Vec4& b) { a.x \/= b.x; a.y \/= b.y; a.z \/= b.z; a.w \/= b.w; return a; }$/;"	f	signature:(Vec4& a, const Vec4& b)
operator /=	.\src\Core\Math\Vector.h	/^inline Vec4& operator\/=(Vec4& a, float scalar) { a.x \/= scalar; a.y \/= scalar; a.z \/= scalar; a.w \/= scalar; return a; }$/;"	f	signature:(Vec4& a, float scalar)
operator =	.\src\Core\Math\Vector.h	/^	Vec2& operator=(const Vec2& other) { x = other.x; y = other.y; return *this; }$/;"	f	struct:Vec2	access:public	signature:(const Vec2& other)
operator =	.\src\Core\Math\Vector.h	/^	Vec3& operator=(const Vec3& other) { x = other.x; y = other.y; z = other.z; return *this; }$/;"	f	struct:Vec3	access:public	signature:(const Vec3& other)
operator =	.\src\Core\Math\Vector.h	/^	Vec4& operator=(const Vec4& other) { x = other.x; y = other.y; z = other.z; w = other.w; return *this; }$/;"	f	struct:Vec4	access:public	signature:(const Vec4& other)
operator ==	.\src\Core\Net\Connection.cpp	/^bool operator==(const Connection_Handle& lhs, const Connection_Handle& rhs)$/;"	f	signature:(const Connection_Handle& lhs, const Connection_Handle& rhs)
operator ==	.\src\Core\Net\Connection.h	/^bool operator==(const Connection_Handle& lhs, const Connection_Handle& rhs);$/;"	p	signature:(const Connection_Handle& lhs, const Connection_Handle& rhs)
operator ==	.\src\Core\Net\IpAddress.h	/^inline bool operator==(const Ip_Address& a, const Ip_Address& b)$/;"	f	signature:(const Ip_Address& a, const Ip_Address& b)
operator ==	.\src\Runtime\Online\Channel.cpp	/^bool operator==(const Channel_Id& lhs, const Channel_Id& rhs)$/;"	f	signature:(const Channel_Id& lhs, const Channel_Id& rhs)
operator ==	.\src\Runtime\Online\Channel.h	/^bool operator==(const Channel_Id& lhs, const Channel_Id& rhs);$/;"	p	signature:(const Channel_Id& lhs, const Channel_Id& rhs)
operator []	.\src\Core\Math\Matrix.h	/^	Vec4& operator[](u32 row)$/;"	f	struct:Mat4	access:public	signature:(u32 row)
operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec2	access:public	signature:(u32 index)
operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec3	access:public	signature:(u32 index)
operator []	.\src\Core\Math\Vector.h	/^	float& operator[](u32 index) { return ((float*)this)[index]; }$/;"	f	struct:Vec4	access:public	signature:(u32 index)
origin	.\src\Core\Math\Ray.h	/^	Vec3 origin;$/;"	m	struct:Ray	access:public
outgoing	.\src\Core\Net\Connection.h	/^	Packet_List outgoing;$/;"	m	struct:Connection	access:public
owner	.\src\Runtime\Game\Projectile.h	/^	Unit* owner = nullptr;$/;"	m	struct:Projectile	access:public
packet	.\src\Core\Net\NetEvent.h	/^	Packet* packet = nullptr;$/;"	m	struct:Net_Event	access:public
packet	.\src\Core\Net\PacketList.h	/^	Packet* packet;$/;"	m	struct:Packet_Block	access:public
packet_body	.\src\Core\Net\NetEvent.h	/^	const void* packet_body = nullptr;$/;"	m	struct:Net_Event	access:public
packet_body_size	.\src\Core\Net\NetEvent.h	/^	u32 packet_body_size = 0;$/;"	m	struct:Net_Event	access:public
packet_list_add	.\src\Core\Net\PacketList.cpp	/^void packet_list_add(Packet_List* list, Packet* packet)$/;"	f	signature:(Packet_List* list, Packet* packet)
packet_list_add	.\src\Core\Net\PacketList.h	/^void packet_list_add(Packet_List* list, Packet* packet);$/;"	p	signature:(Packet_List* list, Packet* packet)
packet_list_clear	.\src\Core\Net\PacketList.cpp	/^void packet_list_clear(Packet_List* list)$/;"	f	signature:(Packet_List* list)
packet_list_clear	.\src\Core\Net\PacketList.h	/^void packet_list_clear(Packet_List* list);/;"	p	signature:(Packet_List* list)
packet_list_contains_id	.\src\Core\Net\PacketList.cpp	/^bool packet_list_contains_id(Packet_List* list, u32 id)$/;"	f	signature:(Packet_List* list, u32 id)
packet_list_contains_id	.\src\Core\Net\PacketList.h	/^bool packet_list_contains_id(Packet_List* list, u32 id);$/;"	p	signature:(Packet_List* list, u32 id)
packet_list_remove	.\src\Core\Net\PacketList.cpp	/^Packet* packet_list_remove(Packet_List* list, Packet* packet)$/;"	f	signature:(Packet_List* list, Packet* packet)
packet_list_remove	.\src\Core\Net\PacketList.h	/^Packet* packet_list_remove(Packet_List* list, Packet* packet);$/;"	p	signature:(Packet_List* list, Packet* packet)
packet_list_remove_id	.\src\Core\Net\PacketList.cpp	/^Packet* packet_list_remove_id(Packet_List* list, u32 id)$/;"	f	signature:(Packet_List* list, u32 id)
packet_list_remove_id	.\src\Core\Net\PacketList.h	/^Packet* packet_list_remove_id(Packet_List* list, u32 id);$/;"	p	signature:(Packet_List* list, u32 id)
packet_make_ack	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_ack(u32 id)$/;"	f	signature:(u32 id)
packet_make_ack	.\src\Core\Net\Packet.h	/^Packet* packet_make_ack(u32 id);$/;"	p	signature:(u32 id)
packet_make_connect	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_connect()$/;"	f	signature:()
packet_make_connect	.\src\Core\Net\Packet.h	/^Packet* packet_make_connect();$/;"	p	signature:()
packet_make_copy	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_copy(const void* src_packet, u32 src_size)$/;"	f	signature:(const void* src_packet, u32 src_size)
packet_make_copy	.\src\Core\Net\Packet.h	/^Packet* packet_make_copy(const void* src_packet, u32 src_size);$/;"	p	signature:(const void* src_packet, u32 src_size)
packet_make_from_body	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_from_body($/;"	f	signature:( Packet_Type type, bool reliable, u32 id, const void* body, u32 body_size)
packet_make_from_body	.\src\Core\Net\Packet.h	/^Packet* packet_make_from_body(Packet_Type type, bool reliable, u32 id, const void* body, u32 body_size);$/;"	p	signature:(Packet_Type type, bool reliable, u32 id, const void* body, u32 body_size)
packet_make_handshake	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_handshake()$/;"	f	signature:()
packet_make_handshake	.\src\Core\Net\Packet.h	/^Packet* packet_make_handshake();$/;"	p	signature:()
packet_make_no_body	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_no_body(Packet_Type type, bool reliable, u32 id)$/;"	f	signature:(Packet_Type type, bool reliable, u32 id)
packet_make_no_body	.\src\Core\Net\Packet.h	/^Packet* packet_make_no_body(Packet_Type type, bool reliable, u32 id);$/;"	p	signature:(Packet_Type type, bool reliable, u32 id)
packet_make_ping	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_ping()$/;"	f	signature:()
packet_make_ping	.\src\Core\Net\Packet.h	/^Packet* packet_make_ping();$/;"	p	signature:()
packet_make_pong	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_pong()$/;"	f	signature:()
packet_make_pong	.\src\Core\Net\Packet.h	/^Packet* packet_make_pong();$/;"	p	signature:()
packet_make_shutdown	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_shutdown()$/;"	f	signature:()
packet_make_shutdown	.\src\Core\Net\Packet.h	/^Packet* packet_make_shutdown();$/;"	p	signature:()
packet_make_user	.\src\Core\Net\Packet.cpp	/^Packet* packet_make_user(bool reliable, const void* user_data, u32 data_size)$/;"	f	signature:(bool reliable, const void* user_data, u32 data_size)
packet_make_user	.\src\Core\Net\Packet.h	/^Packet* packet_make_user(bool reliable, const void* user_data, u32 data_size);/;"	p	signature:(bool reliable, const void* user_data, u32 data_size)
packet_type_str	.\src\Core\Net\Packet.cpp	/^const char* packet_type_str(Packet_Type type)$/;"	f	signature:(Packet_Type type)
packet_type_str	.\src\Core\Net\Packet.h	/^const char* packet_type_str(Packet_Type type);$/;"	p	signature:(Packet_Type type)
padding	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 padding;$/;"	m	struct:Sprite_Sheet	access:public
params	.\src\Core\Thread\Thread.h	/^	void* params;$/;"	m	struct:Thread	access:public
parse_has_error	.\src\Core\Import\Dat.cpp	/^bool parse_has_error = false;$/;"	v
path	.\src\Engine\Resource\Resource.h	/^	const char* path = nullptr;$/;"	m	struct:Resource	access:public
path_clean	.\src\Core\OS\Path.cpp	/^char* path_clean(const char* path)$/;"	f	signature:(const char* path)
path_clean	.\src\Core\OS\Path.h	/^char* path_clean(const char* path);$/;"	p	signature:(const char* path)
path_get_file	.\src\Core\OS\Path.cpp	/^char* path_get_file(const char* path)$/;"	f	signature:(const char* path)
path_get_file	.\src\Core\OS\Path.h	/^char* path_get_file(const char* path);$/;"	p	signature:(const char* path)
path_get_folder	.\src\Core\OS\Path.cpp	/^char* path_get_folder(const char* path)$/;"	f	signature:(const char* path)
path_get_folder	.\src\Core\OS\Path.h	/^char* path_get_folder(const char* path);$/;"	p	signature:(const char* path)
path_get_type	.\src\Core\OS\Path.cpp	/^Path_Type path_get_type(const char* path)$/;"	f	signature:(const char* path)
path_get_type	.\src\Core\OS\Path.h	/^Path_Type path_get_type(const char* path);$/;"	p	signature:(const char* path)
path_join	.\src\Core\OS\Path.cpp	/^char* path_join(const char* path_a, const char* path_b)$/;"	f	signature:(const char* path_a, const char* path_b)
path_join	.\src\Core\OS\Path.h	/^char* path_join(const char* path_a, const char* path_b);/;"	p	signature:(const char* path_a, const char* path_b)
path_relative	.\src\Engine\Resource\Resource.h	/^	const char* path_relative = nullptr;$/;"	m	struct:Resource	access:public
ping	.\src\Core\Net\Connection.h	/^	float ping = 0.f;$/;"	m	struct:Connection	access:public
ping_send_time	.\src\Core\Net\Connection.h	/^	float ping_send_time = 0.f;$/;"	m	struct:Connection	access:public
pitch	.\src\Runtime\Game\Camera.h	/^	float pitch = 45.f;$/;"	m	struct:Camera	access:public
pixel_depth	.\src\Core\Import\TGA.cpp	/^	u8 pixel_depth;$/;"	m	struct:Tga_Image_Spec	file:	access:public
player_id	.\src\Runtime\Game\Game.cpp	/^		u32 player_id;$/;"	m	struct:__anon11::Player_Possess_Data	file:	access:public
players	.\src\Runtime\Game\Game.h	/^	Player players[MAX_PLAYERS];$/;"	m	struct:Game	access:public
pointer	.\src\Core\Import\FBX_Parse.cpp	/^	u32 pointer;$/;"	m	struct:Fbx_Buffer	file:	access:public
port	.\src\Core\Net\IpAddress.h	/^	u16 port;$/;"	m	struct:Ip_Address	access:public
position	.\src\Core\Compress\Inflate.cpp	/^		u32 position;$/;"	m	union:Inflate_Stream::__anon2	file:	access:public
position	.\src\Core\Math\Transform.h	/^	Vec3 position = Vec3_Zero;$/;"	m	struct:Transform	access:public
position	.\src\Engine\Render\Billboard.h	/^	Vec3 position;$/;"	m	struct:Billboard	access:public
position	.\src\Runtime\Effect\LineDrawer.h	/^	Vec3 position;$/;"	m	struct:Line_Drawer	access:public
position	.\src\Runtime\Effect\LineDrawer.h	/^	Vec3 position;$/;"	m	struct:Line_Segment	access:public
position	.\src\Runtime\Game\Camera.h	/^	Vec3 position;$/;"	m	struct:Camera	access:public
position	.\src\Runtime\Game\Game.cpp	/^		Vec2 position;$/;"	m	struct:__anon11::Spawn_Unit_Data	file:	access:public
position	.\src\Runtime\Game\Projectile.h	/^	Vec2 position;$/;"	m	struct:Projectile	access:public
position	.\src\Runtime\Unit\Unit.cpp	/^		Vec2 position;$/;"	m	struct:__anon12::Set_Position_Data	file:	access:public
position	.\src\Runtime\Unit\Unit.h	/^	Vec2 position;$/;"	m	struct:Unit	access:public
positions	.\src\Core\Import\Fbx.h	/^	Vec3* positions = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
pressed	.\src\Core\Input\Input.h	/^	bool pressed = false;$/;"	m	struct:Action_State	access:public
prev	.\src\Core\Net\PacketList.h	/^	Packet_Block* prev;$/;"	m	struct:Packet_Block	access:public
previous	.\src\Core\Context\Context.cpp	/^	u32 previous	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
previous	.\src\Core\Memory\Arena.h	/^	Arena_Buffer* previous = nullptr;$/;"	m	struct:Arena_Buffer	access:public
prime	.\src\Core\Hash\Hash.cpp	/^	const u32 prime = 0x01000193;$/;"	m	namespace:__anon4	file:
print_bits	.\src\Core\Compress\Inflate.cpp	/^void print_bits(u8 value, u8 len)$/;"	f	signature:(u8 value, u8 len)
print_prop_array	.\src\Core\Import\Fbx_Data.cpp	49;"	d	file:
print_prop_as	.\src\Core\Import\Fbx_Data.cpp	48;"	d	file:
proc	.\src\Runtime\Online\Channel.h	/^	Channel_Event_Proc proc = nullptr;$/;"	m	struct:Channel_Event	access:public
program	.\src\Engine\Graphics\Material.h	/^	GLuint program;$/;"	m	struct:Material	access:public
projectile_destroy	.\src\Runtime\Game\Projectile.cpp	/^void projectile_destroy(Projectile* projectile)$/;"	f	signature:(Projectile* projectile)
projectile_destroy	.\src\Runtime\Game\Projectile.h	/^void projectile_destroy(Projectile* projectile);$/;"	p	signature:(Projectile* projectile)
projectile_spawn	.\src\Runtime\Game\Projectile.cpp	/^Projectile* projectile_spawn(Unit* owner, u32 proj_id, const Vec2& position, const Vec2& direction)$/;"	f	signature:(Unit* owner, u32 proj_id, const Vec2& position, const Vec2& direction)
projectile_spawn	.\src\Runtime\Game\Projectile.h	/^Projectile* projectile_spawn(Unit* owner, u32 proj_id, const Vec2& position, const Vec2& direction);$/;"	p	signature:(Unit* owner, u32 proj_id, const Vec2& position, const Vec2& direction)
projectile_update	.\src\Runtime\Game\Projectile.cpp	/^void projectile_update(Projectile* projectile)$/;"	f	signature:(Projectile* projectile)
projectile_update	.\src\Runtime\Game\Projectile.h	/^void projectile_update(Projectile* projectile);/;"	p	signature:(Projectile* projectile)
projectiles	.\src\Runtime\Game\Scene.h	/^	Sparse_List<Projectile> projectiles;$/;"	m	struct:Scene	access:public
projection	.\src\Engine\Render\Render.h	/^	Mat4 projection;$/;"	m	struct:Render_State	access:public
properties	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Property* properties = nullptr;$/;"	m	struct:Fbx_Node	access:public
property_count	.\src\Core\Import\FBX_Parse.cpp	/^	u32 property_count;$/;"	m	struct:Fbx_Node_Header	file:	access:public
property_count	.\src\Core\Import\Fbx_Data.h	/^	u16 property_count = 0;$/;"	m	struct:Fbx_Node	access:public
property_end_offset	.\src\Core\Import\FBX_Parse.cpp	/^	u32 property_end_offset;$/;"	m	struct:Fbx_Node_Header	file:	access:public
ptr	.\src\Engine\Resource\Resource.h	/^	void* ptr = nullptr;$/;"	m	struct:Resource	access:public
ptr_to_location	.\src\Core\Import\Dat.cpp	/^void ptr_to_location(char* ptr, u32* out_row, u32* out_column)$/;"	f	signature:(char* ptr, u32* out_row, u32* out_column)
quat_from_x	.\src\Core\Math\Quaternion.cpp	/^Quat quat_from_x(const Vec3& x)$/;"	f	signature:(const Vec3& x)
quat_from_x	.\src\Core\Math\Quaternion.h	/^Quat quat_from_x(const Vec3& x);$/;"	p	signature:(const Vec3& x)
quat_to_mat	.\src\Core\Math\Quaternion.cpp	/^Mat4 quat_to_mat(const Quat& q)$/;"	f	signature:(const Quat& q)
quat_to_mat	.\src\Core\Math\Quaternion.h	/^Mat4 quat_to_mat(const Quat& q);$/;"	p	signature:(const Quat& q)
quat_x	.\src\Core\Math\Quaternion.cpp	/^Vec3 quat_x(const Quat& q)$/;"	f	signature:(const Quat& q)
quat_x	.\src\Core\Math\Quaternion.h	/^Vec3 quat_x(const Quat& q);$/;"	p	signature:(const Quat& q)
quat_y	.\src\Core\Math\Quaternion.cpp	/^Vec3 quat_y(const Quat& q)$/;"	f	signature:(const Quat& q)
quat_y	.\src\Core\Math\Quaternion.h	/^Vec3 quat_y(const Quat& q);$/;"	p	signature:(const Quat& q)
quat_z	.\src\Core\Math\Quaternion.cpp	/^Vec3 quat_z(const Quat& q)$/;"	f	signature:(const Quat& q)
quat_z	.\src\Core\Math\Quaternion.h	/^Vec3 quat_z(const Quat& q);$/;"	p	signature:(const Quat& q)
radians	.\src\Core\Math\Math.h	/^inline float radians(float degrees) { return degrees \/ 180.f * PI; }$/;"	f	signature:(float degrees)
random_float	.\src\Core\Math\Random.cpp	/^float random_float()$/;"	f	signature:()
random_float	.\src\Core\Math\Random.cpp	/^float random_float(float max)$/;"	f	signature:(float max)
random_float	.\src\Core\Math\Random.cpp	/^float random_float(float min, float max)$/;"	f	signature:(float min, float max)
random_float	.\src\Core\Math\Random.h	/^float random_float();$/;"	p	signature:()
random_float	.\src\Core\Math\Random.h	/^float random_float(float max);$/;"	p	signature:(float max)
random_float	.\src\Core\Math\Random.h	/^float random_float(float min, float max);$/;"	p	signature:(float min, float max)
random_int	.\src\Core\Math\Random.cpp	/^int random_int()$/;"	f	signature:()
random_int	.\src\Core\Math\Random.cpp	/^int random_int(int max)$/;"	f	signature:(int max)
random_int	.\src\Core\Math\Random.cpp	/^int random_int(int min, int max)$/;"	f	signature:(int min, int max)
random_int	.\src\Core\Math\Random.h	/^int random_int();$/;"	p	signature:()
random_int	.\src\Core\Math\Random.h	/^int random_int(int max);$/;"	p	signature:(int max)
random_int	.\src\Core\Math\Random.h	/^int random_int(int min, int max);$/;"	p	signature:(int min, int max)
random_point_on_circle	.\src\Core\Math\Random.cpp	/^Vec2 random_point_on_circle()$/;"	f	signature:()
random_point_on_circle	.\src\Core\Math\Random.h	/^Vec2 random_point_on_circle();$/;"	p	signature:()
random_point_on_sphere	.\src\Core\Math\Random.cpp	/^Vec3 random_point_on_sphere()$/;"	f	signature:()
random_point_on_sphere	.\src\Core\Math\Random.h	/^Vec3 random_point_on_sphere();/;"	p	signature:()
random_seed	.\src\Core\Math\Random.cpp	/^void random_seed()$/;"	f	signature:()
random_seed	.\src\Core\Math\Random.h	/^void random_seed();$/;"	p	signature:()
ray_from_to	.\src\Core\Math\Ray.cpp	/^Ray ray_from_to(const Vec3& from, const Vec3& to)$/;"	f	signature:(const Vec3& from, const Vec3& to)
ray_from_to	.\src\Core\Math\Ray.h	/^Ray ray_from_to(const Vec3& from, const Vec3& to);$/;"	p	signature:(const Vec3& from, const Vec3& to)
ray_get_point	.\src\Core\Math\Ray.cpp	/^Vec3 ray_get_point(const Ray& ray, float time)$/;"	f	signature:(const Ray& ray, float time)
ray_get_point	.\src\Core\Math\Ray.h	/^Vec3 ray_get_point(const Ray& ray, float time);$/;"	p	signature:(const Ray& ray, float time)
ray_plane_intersect	.\src\Core\Math\Ray.cpp	/^Vec3 ray_plane_intersect(const Ray& ray, const Vec3& plane_point, const Vec3& plane_normal)$/;"	f	signature:(const Ray& ray, const Vec3& plane_point, const Vec3& plane_normal)
ray_plane_intersect	.\src\Core\Math\Ray.h	/^Vec3 ray_plane_intersect(const Ray& ray, const Vec3& plane_point, const Vec3& plane_normal);/;"	p	signature:(const Ray& ray, const Vec3& plane_point, const Vec3& plane_normal)
rcVirtualScreen	.\include\GL\wglext.h	/^    RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE	access:public
read_bits	.\src\Core\Compress\Inflate.cpp	/^u32 read_bits(Inflate_Stream* stream, const u32 num_bits)$/;"	f	signature:(Inflate_Stream* stream, const u32 num_bits)
read_symbol_from_stream	.\src\Core\Compress\Inflate.cpp	/^u32 read_symbol_from_stream(Inflate_Stream* str, Huffman_Tree* tree)$/;"	f	signature:(Inflate_Stream* str, Huffman_Tree* tree)
read_token	.\src\Core\Import\Dat.cpp	/^bool read_token(char** out_token, i32* out_token_len, Token* out_token_type, bool skip_newline = false)$/;"	f	signature:(char** out_token, i32* out_token_len, Token* out_token_type, bool skip_newline = false)
read_token_expect	.\src\Core\Import\Dat.cpp	/^bool read_token_expect(u32 token_filter, char** out_token, i32* out_token_len, Token* out_token_type = nullptr, bool skip_newline = false)$/;"	f	signature:(u32 token_filter, char** out_token, i32* out_token_len, Token* out_token_type = nullptr, bool skip_newline = false)
read_write_bytes	.\src\Core\Compress\Inflate.cpp	/^void read_write_bytes(Inflate_Stream* stream, const u16 length, const u32 distance)$/;"	f	signature:(Inflate_Stream* stream, const u16 length, const u32 distance)
recv_thread	.\src\Core\Net\Net.h	/^	Thread recv_thread;$/;"	m	struct:Net_Service	access:public
reliable	.\src\Core\Net\Packet.h	/^	u32 reliable : 1;$/;"	m	struct:Packet	access:public
reliable	.\src\Runtime\Online\Channel.h	/^	bool reliable = true;$/;"	m	struct:Channel_Event	access:public
reload_func	.\src\Engine\Resource\Resource.h	/^	Res_Reload_Func reload_func;$/;"	m	struct:Resource	access:public
render_draw	.\src\Engine\Render\Render.cpp	/^void render_draw()$/;"	f	signature:()
render_draw	.\src\Engine\Render\Render.h	/^void render_draw();/;"	p	signature:()
render_draw_scene	.\src\Engine\Render\Render.cpp	/^void render_draw_scene(const Render_State& state)$/;"	f	signature:(const Render_State& state)
render_init	.\src\Engine\Render\Render.cpp	/^void render_init()$/;"	f	signature:()
render_init	.\src\Engine\Render\Render.h	/^void render_init();$/;"	p	signature:()
render_set_vp	.\src\Engine\Render\Render.cpp	/^void render_set_vp(const Mat4& view, const Mat4& projection)$/;"	f	signature:(const Mat4& view, const Mat4& projection)
render_set_vp	.\src\Engine\Render\Render.h	/^void render_set_vp(const Mat4& view, const Mat4& projection);$/;"	p	signature:(const Mat4& view, const Mat4& projection)
repeat	.\src\Core\Context\Context.cpp	/^	u32 repeat		: 16;$/;"	m	struct:Win_Key_Params	file:	access:public
res	.\src\Engine\Resource\ResourceList.h	/^	Resource* res = nullptr;$/;"	m	struct:Resource_List	access:public
resend_count	.\src\Core\Net\PacketList.h	/^	int resend_count = 0;$/;"	m	struct:Packet_Block	access:public
resend_time	.\src\Core\Net\PacketList.h	/^	float resend_time = 0.f;$/;"	m	struct:Packet_Block	access:public
reserved	.\src\Core\Context\Context.cpp	/^	u32 reserved	: 4;$/;"	m	struct:Win_Key_Params	file:	access:public
resource	.\src\Engine\Resource\Resource.h	/^	Resource resource;$/;"	m	struct:Resource_Node	access:public
resource_add_dependency	.\src\Engine\Resource\HotReload.cpp	/^void resource_add_dependency(Resource* res, const char* dependency_path)$/;"	f	signature:(Resource* res, const char* dependency_path)
resource_add_dependency	.\src\Engine\Resource\HotReload.h	/^void resource_add_dependency(Resource* res, const char* dependency_path);$/;"	p	signature:(Resource* res, const char* dependency_path)
resource_clear_dependencies	.\src\Engine\Resource\HotReload.cpp	/^void resource_clear_dependencies(Resource* res)$/;"	f	signature:(Resource* res)
resource_clear_dependencies	.\src\Engine\Resource\HotReload.h	/^void resource_clear_dependencies(Resource* res);/;"	p	signature:(Resource* res)
resource_get	.\src\Engine\Resource\Resource.cpp	/^Resource* resource_get(const char* path)$/;"	f	signature:(const char* path)
resource_get	.\src\Engine\Resource\Resource.h	/^Resource* resource_get(const char* path);/;"	p	signature:(const char* path)
resource_get_node	.\src\Engine\Resource\Resource.cpp	/^static Resource_Node* resource_get_node(Resource_Node* node, u32 hash)$/;"	f	file:	signature:(Resource_Node* node, u32 hash)
resource_init	.\src\Engine\Resource\Resource.cpp	/^void resource_init()$/;"	f	signature:()
resource_init	.\src\Engine\Resource\Resource.h	/^void resource_init();$/;"	p	signature:()
resource_list_add_unique	.\src\Engine\Resource\ResourceList.cpp	/^void resource_list_add_unique(Resource_List*& list, Resource* resource)$/;"	f	signature:(Resource_List*& list, Resource* resource)
resource_list_add_unique	.\src\Engine\Resource\ResourceList.h	/^void resource_list_add_unique(Resource_List*& list, Resource* resource);$/;"	p	signature:(Resource_List*& list, Resource* resource)
resource_list_clear	.\src\Engine\Resource\ResourceList.cpp	/^void resource_list_clear(Resource_List*& list)$/;"	f	signature:(Resource_List*& list)
resource_list_clear	.\src\Engine\Resource\ResourceList.h	/^void resource_list_clear(Resource_List*& list);/;"	p	signature:(Resource_List*& list)
resource_list_copy	.\src\Engine\Resource\ResourceList.cpp	/^void resource_list_copy(Resource_List*& dst, const Resource_List* src)$/;"	f	signature:(Resource_List*& dst, const Resource_List* src)
resource_list_copy	.\src\Engine\Resource\ResourceList.h	/^void resource_list_copy(Resource_List*& dst, const Resource_List* src);$/;"	p	signature:(Resource_List*& dst, const Resource_List* src)
resource_list_remove	.\src\Engine\Resource\ResourceList.cpp	/^bool resource_list_remove(Resource_List*& list, Resource* resource)$/;"	f	signature:(Resource_List*& list, Resource* resource)
resource_list_remove	.\src\Engine\Resource\ResourceList.h	/^bool resource_list_remove(Resource_List*& list, Resource* resource);$/;"	p	signature:(Resource_List*& list, Resource* resource)
resource_load	.\src\Engine\Resource\Resource.cpp	/^Resource* resource_load(const char* path, Res_Create_Func create_func, Res_Destroy_Func destroy_func)$/;"	f	signature:(const char* path, Res_Create_Func create_func, Res_Destroy_Func destroy_func)
resource_load	.\src\Engine\Resource\Resource.h	/^Resource* resource_load(const char* path, Res_Create_Func create_func, Res_Destroy_Func destroy_func);$/;"	p	signature:(const char* path, Res_Create_Func create_func, Res_Destroy_Func destroy_func)
resource_load_or_create_node	.\src\Engine\Resource\Resource.cpp	/^static Resource_Node* resource_load_or_create_node(Resource_Node*& node, u32 hash, const char* path)$/;"	f	file:	signature:(Resource_Node*& node, u32 hash, const char* path)
resource_manager	.\src\Engine\Resource\Resource.cpp	/^Resource_Manager resource_manager;$/;"	v
resource_reload	.\src\Engine\Resource\HotReload.cpp	/^static void resource_reload(Resource* res)$/;"	f	file:	signature:(Resource* res)
resource_root_path	.\src\Engine\Resource\Resource.cpp	/^const char* resource_root_path = "res\/";$/;"	v
resource_update_hotreload	.\src\Engine\Resource\HotReload.cpp	/^void resource_update_hotreload()$/;"	f	signature:()
resource_update_hotreload	.\src\Engine\Resource\HotReload.h	/^void resource_update_hotreload();$/;"	p	signature:()
resource_update_hotreload_recursive	.\src\Engine\Resource\HotReload.cpp	/^static void resource_update_hotreload_recursive(Resource_Node* node)$/;"	f	file:	signature:(Resource_Node* node)
rewind_ptr	.\src\Core\Import\Dat.cpp	/^void rewind_ptr(char** ptr, u32 count = 1)$/;"	f	signature:(char** ptr, u32 count = 1)
right	.\src\Engine\Resource\Resource.h	/^	Resource_Node* right = nullptr;$/;"	m	struct:Resource_Node	access:public
root	.\src\Core\Import\Dat.h	/^	Dat_Object* root;$/;"	m	struct:Dat_Document	access:public
root	.\src\Engine\Resource\Resource.h	/^	Resource_Node* root = nullptr;$/;"	m	struct:Resource_Manager	access:public
rotation	.\src\Core\Math\Transform.h	/^	Quat rotation = Quat_Identity;$/;"	m	struct:Transform	access:public
run	.\src\Runtime\Run.h	/^void run();/;"	p	signature:()
run	.\src\Runtime\RunClient.cpp	/^void run()$/;"	f	signature:()
run	.\src\Runtime\RunServer.cpp	/^void run()$/;"	f	signature:()
s	.\src\Core\Compress\Inflate.cpp	/^		} s;$/;"	m	union:Inflate_Stream::__anon2	typeref:struct:Inflate_Stream::__anon2::__anon3	file:	access:public
scale	.\src\Core\Math\Transform.h	/^	Vec3 scale = Vec3_One;$/;"	m	struct:Transform	access:public
scale	.\src\Engine\Render\Billboard.h	/^	float scale = 1.f;$/;"	m	struct:Billboard	access:public
scale_buffer	.\src\Engine\Render\Render.cpp	/^	Frame_Buffer scale_buffer;$/;"	m	namespace:__anon10	file:
scancode	.\src\Core\Context\Context.cpp	/^	u32 scancode	: 8;$/;"	m	struct:Win_Key_Params	file:	access:public
scene	.\src\Runtime\Game\Scene.cpp	/^Scene scene;$/;"	v
scene_get_free_unit	.\src\Runtime\Game\Scene.cpp	/^u32 scene_get_free_unit()$/;"	f	signature:()
scene_get_free_unit	.\src\Runtime\Game\Scene.h	/^u32 scene_get_free_unit();$/;"	p	signature:()
scene_init	.\src\Runtime\Game\Scene.cpp	/^void scene_init()$/;"	f	signature:()
scene_init	.\src\Runtime\Game\Scene.h	/^void scene_init();$/;"	p	signature:()
scene_mouse_ray	.\src\Runtime\Game\Scene.cpp	/^Ray scene_mouse_ray()$/;"	f	signature:()
scene_mouse_ray	.\src\Runtime\Game\Scene.h	/^Ray scene_mouse_ray();$/;"	p	signature:()
scene_screen_to_ray	.\src\Runtime\Game\Scene.cpp	/^Ray scene_screen_to_ray(Vec2 screen)$/;"	f	signature:(Vec2 screen)
scene_screen_to_ray	.\src\Runtime\Game\Scene.h	/^Ray scene_screen_to_ray(Vec2 screen);$/;"	p	signature:(Vec2 screen)
scroll_delta	.\src\Core\Input\Input.h	/^	int scroll_delta;$/;"	m	struct:Mouse_State	access:public
seed	.\src\Core\Hash\Hash.cpp	/^	const u32 seed = 0x811C9DC5;$/;"	m	namespace:__anon4	file:
segments	.\src\Runtime\Effect\LineDrawer.h	/^	Line_Segment segments[20];$/;"	m	struct:Line_Drawer	access:public
send_thread	.\src\Core\Net\Net.h	/^	Thread send_thread;$/;"	m	struct:Net_Service	access:public
server	.\src\Runtime\Online\Client.h	/^	Connection_Handle server;$/;"	m	struct:Client	access:public
server	.\src\Runtime\Online\Server.cpp	/^Server server;$/;"	v
server_add_user	.\src\Runtime\Online\Server.h	/^Online_User* server_add_user(const Connection_Handle& id);$/;"	p	signature:(const Connection_Handle& id)
server_broadcast	.\src\Runtime\Online\Server.cpp	/^void server_broadcast(bool reliable, const void* data, u32 size)$/;"	f	signature:(bool reliable, const void* data, u32 size)
server_broadcast	.\src\Runtime\Online\Server.h	/^void server_broadcast(bool reliable, const void* data, u32 size);$/;"	p	signature:(bool reliable, const void* data, u32 size)
server_broadcast_except	.\src\Runtime\Online\Server.cpp	/^void server_broadcast_except(Online_User* except, bool reliable, const void* data, u32 size)$/;"	f	signature:(Online_User* except, bool reliable, const void* data, u32 size)
server_broadcast_except	.\src\Runtime\Online\Server.h	/^void server_broadcast_except(Online_User* except, bool reliable, const void* data, u32 size);$/;"	p	signature:(Online_User* except, bool reliable, const void* data, u32 size)
server_channel_event	.\src\Runtime\Online\Server.cpp	/^void server_channel_event(const Connection_Handle& connection, const void* data, u32 size)$/;"	f	signature:(const Connection_Handle& connection, const void* data, u32 size)
server_channel_open	.\src\Runtime\Online\Server.cpp	/^void server_channel_open(const Connection_Handle& connection, const Rpc_Channel_Open* rpc)$/;"	f	signature:(const Connection_Handle& connection, const Rpc_Channel_Open* rpc)
server_destroy_unit	.\src\Runtime\Game\Game.cpp	/^void server_destroy_unit()$/;"	f	signature:()
server_get_user	.\src\Runtime\Online\Server.cpp	/^Online_User* server_get_user(const Connection_Handle& connection)$/;"	f	signature:(const Connection_Handle& connection)
server_get_user	.\src\Runtime\Online\Server.h	/^Online_User* server_get_user(const Connection_Handle& id);$/;"	p	signature:(const Connection_Handle& id)
server_init	.\src\Runtime\Online\Server.cpp	/^void server_init()$/;"	f	signature:()
server_init	.\src\Runtime\Online\Server.h	/^void server_init();$/;"	p	signature:()
server_on_disconnect	.\src\Runtime\Online\Server.cpp	/^void server_on_disconnect(const Connection_Handle& connection)$/;"	f	signature:(const Connection_Handle& connection)
server_on_packet	.\src\Runtime\Online\Server.cpp	/^void server_on_packet(const Connection_Handle& connection, const void* msg, u32 msg_size)$/;"	f	signature:(const Connection_Handle& connection, const void* msg, u32 msg_size)
server_send	.\src\Runtime\Online\Server.cpp	/^void server_send(Online_User* user, bool reliable, const void* data, u32 size)$/;"	f	signature:(Online_User* user, bool reliable, const void* data, u32 size)
server_send	.\src\Runtime\Online\Server.h	/^void server_send(Online_User* user, bool reliable, const void* data, u32 size);/;"	p	signature:(Online_User* user, bool reliable, const void* data, u32 size)
server_shutdown	.\src\Runtime\Online\Server.cpp	/^void server_shutdown()$/;"	f	signature:()
server_shutdown	.\src\Runtime\Online\Server.h	/^void server_shutdown();$/;"	p	signature:()
server_spawn_unit	.\src\Runtime\Game\Game.cpp	/^void server_spawn_unit()$/;"	f	signature:()
server_update	.\src\Runtime\Online\Server.cpp	/^void server_update()$/;"	f	signature:()
server_update	.\src\Runtime\Online\Server.h	/^void server_update();$/;"	p	signature:()
server_user_login	.\src\Runtime\Online\Server.cpp	/^void server_user_login(const Connection_Handle& connection, const Rpc_Login* login)$/;"	f	signature:(const Connection_Handle& connection, const Rpc_Login* login)
shader_load	.\src\Engine\Graphics\Material.cpp	/^const Shader* shader_load(GLenum type, const char* path)$/;"	f	signature:(GLenum type, const char* path)
shader_res_create	.\src\Engine\Graphics\Material.cpp	/^void shader_res_create(Resource* resource, GLenum type)$/;"	f	signature:(Resource* resource, GLenum type)
shader_res_create_frag	.\src\Engine\Graphics\Material.cpp	/^void shader_res_create_frag(Resource* resource) { shader_res_create(resource, GL_FRAGMENT_SHADER); }$/;"	f	signature:(Resource* resource)
shader_res_create_geom	.\src\Engine\Graphics\Material.cpp	/^void shader_res_create_geom(Resource* resource) { shader_res_create(resource, GL_GEOMETRY_SHADER); }$/;"	f	signature:(Resource* resource)
shader_res_create_vert	.\src\Engine\Graphics\Material.cpp	/^void shader_res_create_vert(Resource* resource) { shader_res_create(resource, GL_VERTEX_SHADER); }$/;"	f	signature:(Resource* resource)
shader_res_destroy	.\src\Engine\Graphics\Material.cpp	/^void shader_res_destroy(Resource* resource)$/;"	f	signature:(Resource* resource)
shadow_buffer	.\src\Engine\Render\Render.cpp	/^	Frame_Buffer shadow_buffer;$/;"	m	namespace:__anon10	file:
sheet	.\src\Engine\Render\Billboard.h	/^	const Sprite_Sheet* sheet = nullptr;$/;"	m	struct:Billboard	access:public
size	.\src\Core\Container\SparseList.h	/^	u32 size = 0;$/;"	m	struct:Sparse_List	access:public
size	.\src\Core\Import\Dat.h	/^	u32 size;$/;"	m	struct:Dat_Array	access:public
size	.\src\Core\Memory\Arena.h	/^	u32 size = 0;$/;"	m	struct:Arena_Buffer	access:public
size	.\src\Core\Net\Packet.h	/^	u32 size : 32;$/;"	m	struct:Packet	access:public
size	.\src\Runtime\Game\Camera.h	/^	float size = 6.f;$/;"	m	struct:Camera	access:public
size	.\src\Runtime\Game\Projectile.h	/^	float size = 0.3f;$/;"	m	struct:Projectile	access:public
skip_whitespace	.\src\Core\Import\Dat.cpp	/^void skip_whitespace(bool skip_newline)$/;"	f	signature:(bool skip_newline)
sock_bind	.\src\Core\Net\Socket.cpp	/^void sock_bind(Socket* socket, Ip_Address* bind_addr)$/;"	f	signature:(Socket* socket, Ip_Address* bind_addr)
sock_bind	.\src\Core\Net\Socket.h	/^void sock_bind(Socket* socket, Ip_Address* bind_addr);$/;"	p	signature:(Socket* socket, Ip_Address* bind_addr)
sock_close	.\src\Core\Net\Socket.cpp	/^void sock_close(Socket* socket)$/;"	f	signature:(Socket* socket)
sock_close	.\src\Core\Net\Socket.h	/^void sock_close(Socket* socket);$/;"	p	signature:(Socket* socket)
sock_create	.\src\Core\Net\Socket.cpp	/^void sock_create(Socket* socket, Socket_Type type)$/;"	f	signature:(Socket* socket, Socket_Type type)
sock_create	.\src\Core\Net\Socket.h	/^void sock_create(Socket* socket, Socket_Type type);$/;"	p	signature:(Socket* socket, Socket_Type type)
sock_recv	.\src\Core\Net\Socket.cpp	/^u32 sock_recv(Socket* socket, void* data, u32 size)$/;"	f	signature:(Socket* socket, void* data, u32 size)
sock_recv	.\src\Core\Net\Socket.h	/^u32 sock_recv(Socket* socket, void* data, u32 size);$/;"	p	signature:(Socket* socket, void* data, u32 size)
sock_recv_from	.\src\Core\Net\Socket.cpp	/^u32 sock_recv_from(Socket* socket, void* data, u32 size, Ip_Address* recv_addr)$/;"	f	signature:(Socket* socket, void* data, u32 size, Ip_Address* recv_addr)
sock_recv_from	.\src\Core\Net\Socket.h	/^u32 sock_recv_from(Socket* socket, void* data, u32 size, Ip_Address* recv_addr);/;"	p	signature:(Socket* socket, void* data, u32 size, Ip_Address* recv_addr)
sock_send	.\src\Core\Net\Socket.cpp	/^u32 sock_send(Socket* socket, const void* data, u32 size)$/;"	f	signature:(Socket* socket, const void* data, u32 size)
sock_send	.\src\Core\Net\Socket.h	/^u32 sock_send(Socket* socket, const void* data, u32 size);$/;"	p	signature:(Socket* socket, const void* data, u32 size)
sock_send_to	.\src\Core\Net\Socket.cpp	/^u32 sock_send_to(Socket* socket, const void* data, u32 size, const Ip_Address& send_addr)$/;"	f	signature:(Socket* socket, const void* data, u32 size, const Ip_Address& send_addr)
sock_send_to	.\src\Core\Net\Socket.h	/^u32 sock_send_to(Socket* socket, const void* data, u32 size, const Ip_Address& send_addr);$/;"	p	signature:(Socket* socket, const void* data, u32 size, const Ip_Address& send_addr)
sock_set_recv_timeout	.\src\Core\Net\Socket.cpp	/^void sock_set_recv_timeout(Socket* socket, u32 millis)$/;"	f	signature:(Socket* socket, u32 millis)
sock_set_recv_timeout	.\src\Core\Net\Socket.h	/^void sock_set_recv_timeout(Socket* socket, u32 millis);$/;"	p	signature:(Socket* socket, u32 millis)
sock_shutdown_recv	.\src\Core\Net\Socket.cpp	/^void sock_shutdown_recv(Socket* socket)$/;"	f	signature:(Socket* socket)
sock_shutdown_recv	.\src\Core\Net\Socket.h	/^void sock_shutdown_recv(Socket* socket);$/;"	p	signature:(Socket* socket)
sock_shutdown_send	.\src\Core\Net\Socket.cpp	/^void sock_shutdown_send(Socket* socket)$/;"	f	signature:(Socket* socket)
sock_shutdown_send	.\src\Core\Net\Socket.h	/^void sock_shutdown_send(Socket* socket);$/;"	p	signature:(Socket* socket)
socket	.\src\Core\Net\Net.h	/^	Socket socket;$/;"	m	struct:Net_Service	access:public
speed	.\src\Runtime\Game\Projectile.h	/^	float speed = 95.f;$/;"	m	struct:Projectile	access:public
splist_add	.\src\Core\Container\SparseList.h	/^T* splist_add(Sparse_List<T>* list)$/;"	f	signature:(Sparse_List<T>* list)
splist_create	.\src\Core\Container\SparseList.h	/^void splist_create(Sparse_List<T>* list, u32 count)$/;"	f	signature:(Sparse_List<T>* list, u32 count)
splist_foreach_inc	.\src\Core\Container\SparseList.h	/^void splist_foreach_inc(Sparse_List<T>* list, Sparse_List_Entry<T>** entry, T** var)$/;"	f	signature:(Sparse_List<T>* list, Sparse_List_Entry<T>** entry, T** var)
splist_foreach_init	.\src\Core\Container\SparseList.h	/^Sparse_List_Entry<T>* splist_foreach_init(Sparse_List<T>* list, T** var)$/;"	f	signature:(Sparse_List<T>* list, T** var)
splist_remove	.\src\Core\Container\SparseList.h	/^void splist_remove(Sparse_List<T>* list, T* item)$/;"	f	signature:(Sparse_List<T>* list, T* item)
sprite_sheet_load	.\src\Engine\Graphics\SpriteSheet.cpp	/^const Sprite_Sheet* sprite_sheet_load(const char* path)$/;"	f	signature:(const char* path)
sprite_sheet_load	.\src\Engine\Graphics\SpriteSheet.h	/^const Sprite_Sheet* sprite_sheet_load(const char* path);/;"	p	signature:(const char* path)
sprite_sheet_res_create	.\src\Engine\Graphics\SpriteSheet.cpp	/^static void sprite_sheet_res_create(Resource* resource)$/;"	f	file:	signature:(Resource* resource)
sprite_sheet_res_destroy	.\src\Engine\Graphics\SpriteSheet.cpp	/^static void sprite_sheet_res_destroy(Resource* resource)$/;"	f	file:	signature:(Resource* resource)
square	.\src\Core\Math\Math.h	/^inline float square(float val) { return val * val; }$/;"	f	signature:(float val)
square	.\src\Core\Math\Math.h	/^inline int square(int val) { return val * val; }$/;"	f	signature:(int val)
state	.\src\Core\Net\Connection.h	/^	Connection_State state;$/;"	m	struct:Connection	access:public
state	.\src\Runtime\Online\Channel.h	/^	Channel_State state;$/;"	m	struct:Channel	access:public
str	.\src\Core\Import\Dat.h	/^	char* str = nullptr;$/;"	m	struct:Dat_Value_Raw	access:public
str	.\src\Runtime\Online\Channel.h	/^	char str[4];$/;"	m	struct:Channel_Id	access:public
str_len	.\src\Core\Import\Dat.h	/^	i32 str_len = 0;$/;"	m	struct:Dat_Value_Raw	access:public
strcpy_malloc	.\src\Core\Memory\Mem.cpp	/^char* strcpy_malloc(const char* other, i32 length)$/;"	f	signature:(const char* other, i32 length)
strcpy_malloc	.\src\Core\Memory\Mem.h	/^char* strcpy_malloc(const char* other, i32 length = -1);/;"	p	signature:(const char* other, i32 length = -1)
target_position	.\src\Runtime\Game\Camera.h	/^	Vec3 target_position;$/;"	m	struct:Camera	access:public
target_position	.\src\Runtime\Unit\Unit.h	/^	Vec2 target_position;$/;"	m	struct:Unit	access:public
texture	.\src\Engine\Graphics\SpriteSheet.h	/^	const Texture* texture;$/;"	m	struct:Sprite_Sheet	access:public
texture	.\src\Engine\Render\Drawable.h	/^	const Texture* texture = nullptr;$/;"	m	struct:Drawable	access:public
texture_bind	.\src\Engine\Graphics\Texture.cpp	/^void texture_bind(const Texture* texture, u8 index)$/;"	f	signature:(const Texture* texture, u8 index)
texture_bind	.\src\Engine\Graphics\Texture.h	/^void texture_bind(const Texture* texture, u8 index);$/;"	p	signature:(const Texture* texture, u8 index)
texture_create	.\src\Engine\Graphics\Texture.cpp	/^void texture_create(Texture* tex)$/;"	f	signature:(Texture* tex)
texture_create	.\src\Engine\Graphics\Texture.h	/^void texture_create(Texture* tex);$/;"	p	signature:(Texture* tex)
texture_draw_fullscreen	.\src\Engine\Graphics\Texture.cpp	/^void texture_draw_fullscreen(Texture* tex)$/;"	f	signature:(Texture* tex)
texture_draw_fullscreen	.\src\Engine\Graphics\Texture.h	/^void texture_draw_fullscreen(Texture* tex);/;"	p	signature:(Texture* tex)
texture_free	.\src\Engine\Graphics\Texture.cpp	/^void texture_free(Texture* tex)$/;"	f	signature:(Texture* tex)
texture_free	.\src\Engine\Graphics\Texture.h	/^void texture_free(Texture* tex);$/;"	p	signature:(Texture* tex)
texture_load	.\src\Engine\Graphics\Texture.cpp	/^const Texture* texture_load(const char* path)$/;"	f	signature:(const char* path)
texture_load	.\src\Engine\Graphics\Texture.h	/^const Texture* texture_load(const char* path);$/;"	p	signature:(const char* path)
texture_res_create	.\src\Engine\Graphics\Texture.cpp	/^void texture_res_create(Resource* resource)$/;"	f	signature:(Resource* resource)
texture_res_destroy	.\src\Engine\Graphics\Texture.cpp	/^void texture_res_destroy(Resource* resource)$/;"	f	signature:(Resource* resource)
textures	.\src\Engine\Graphics\FrameBuffer.h	/^	Texture textures[FRAMEBUFFER_MAX_TEXTURES];$/;"	m	struct:Frame_Buffer	access:public
tga_free	.\src\Core\Import\TGA.cpp	/^void tga_free(Tga_File* tga)$/;"	f	signature:(Tga_File* tga)
tga_free	.\src\Core\Import\TGA.h	/^void tga_free(Tga_File* tga);/;"	p	signature:(Tga_File* tga)
tga_load	.\src\Core\Import\TGA.cpp	/^bool tga_load(Tga_File* tga, const char* path)$/;"	f	signature:(Tga_File* tga, const char* path)
tga_load	.\src\Core\Import\TGA.h	/^bool tga_load(Tga_File* tga, const char* path);$/;"	p	signature:(Tga_File* tga, const char* path)
thread_callback	.\src\Core\Thread\Thread.cpp	/^DWORD WINAPI thread_callback(void* thread_ptr)$/;"	f	signature:(void* thread_ptr)
thread_destroy	.\src\Core\Thread\Thread.cpp	/^void thread_destroy(Thread* thread)$/;"	f	signature:(Thread* thread)
thread_destroy	.\src\Core\Thread\Thread.h	/^void thread_destroy(Thread* thread);$/;"	p	signature:(Thread* thread)
thread_join	.\src\Core\Thread\Thread.cpp	/^void thread_join(Thread* thread)$/;"	f	signature:(Thread* thread)
thread_join	.\src\Core\Thread\Thread.h	/^void thread_join(Thread* thread);/;"	p	signature:(Thread* thread)
thread_start	.\src\Core\Thread\Thread.cpp	/^void thread_start(Thread* thread, Thread_Func func, void* params)$/;"	f	signature:(Thread* thread, Thread_Func func, void* params)
thread_start	.\src\Core\Thread\Thread.h	/^void thread_start(Thread* thread, Thread_Func func, void* params);$/;"	p	signature:(Thread* thread, Thread_Func func, void* params)
tick	.\src\Engine\Tick\Tick.cpp	/^static Tick tick;$/;"	v	file:
tick_fire_all	.\src\Engine\Tick\Tick.cpp	/^void tick_fire_all()$/;"	f	signature:()
tick_fire_all	.\src\Engine\Tick\Tick.h	/^void tick_fire_all();/;"	p	signature:()
tick_func_ptr	.\src\Engine\Tick\Tick.h	/^typedef void (*tick_func_ptr)(void* user_ptr);$/;"	t
tick_init	.\src\Engine\Tick\Tick.cpp	/^void tick_init()$/;"	f	signature:()
tick_init	.\src\Engine\Tick\Tick.h	/^void tick_init();$/;"	p	signature:()
tile_aspect	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_aspect;$/;"	m	struct:Sprite_Sheet	access:public
tile_height	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 tile_height;$/;"	m	struct:Sprite_Sheet	access:public
tile_height_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_height_uv;$/;"	m	struct:Sprite_Sheet	access:public
tile_padding_x_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_padding_x_uv;$/;"	m	struct:Sprite_Sheet	access:public
tile_padding_y_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_padding_y_uv;$/;"	m	struct:Sprite_Sheet	access:public
tile_width	.\src\Engine\Graphics\SpriteSheet.h	/^	u32 tile_width;$/;"	m	struct:Sprite_Sheet	access:public
tile_width_uv	.\src\Engine\Graphics\SpriteSheet.h	/^	float tile_width_uv;$/;"	m	struct:Sprite_Sheet	access:public
tile_x	.\src\Engine\Render\Billboard.h	/^	u32 tile_x = 0;$/;"	m	struct:Billboard	access:public
tile_y	.\src\Engine\Render\Billboard.h	/^	u32 tile_y = 0;$/;"	m	struct:Billboard	access:public
time	.\src\Runtime\Effect\LineDrawer.h	/^	float time;$/;"	m	struct:Line_Segment	access:public
time_delta	.\src\Core\Time\Time.cpp	/^float time_delta() { return frame_delta; }$/;"	f	signature:()
time_delta	.\src\Core\Time\Time.h	/^float time_delta();$/;"	p	signature:()
time_duration	.\src\Core\Time\Time.cpp	/^float time_duration()$/;"	f	signature:()
time_duration	.\src\Core\Time\Time.h	/^float time_duration();/;"	p	signature:()
time_get_delta	.\src\Core\Time\Time.cpp	/^float time_get_delta(LARGE_INTEGER from, LARGE_INTEGER to)$/;"	f	signature:(LARGE_INTEGER from, LARGE_INTEGER to)
time_init	.\src\Core\Time\Time.cpp	/^void time_init()$/;"	f	signature:()
time_init	.\src\Core\Time\Time.h	/^void time_init();$/;"	p	signature:()
time_update_delta	.\src\Core\Time\Time.cpp	/^void time_update_delta()$/;"	f	signature:()
time_update_delta	.\src\Core\Time\Time.h	/^void time_update_delta();$/;"	p	signature:()
timepoint_init	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER timepoint_init;$/;"	m	namespace:__anon7	file:
timepoint_last_frame	.\src\Core\Time\Time.cpp	/^	LARGE_INTEGER timepoint_last_frame;$/;"	m	namespace:__anon7	file:
timer	.\src\Runtime\Effect\LineDrawer.h	/^	float timer = 0.f;$/;"	m	struct:Line_Drawer	access:public
title	.\src\Core\Import\FBX_Parse.cpp	/^	char title[21];$/;"	m	struct:Fbx_Header	file:	access:public
token_expect	.\src\Core\Import\Dat.cpp	/^bool token_expect(u32 token_filter, Token* out_token_type = nullptr, bool skip_newline = false)$/;"	f	signature:(u32 token_filter, Token* out_token_type = nullptr, bool skip_newline = false)
token_find	.\src\Core\Import\Dat.cpp	/^bool token_find(u32 token_filter, Token* out_token_type = nullptr)$/;"	f	signature:(u32 token_filter, Token* out_token_type = nullptr)
token_peek	.\src\Core\Import\Dat.cpp	/^bool token_peek(u32 token_filter, Token* out_token_type = nullptr, char** out_token_str = nullptr, u32* out_token_len = nullptr, bool skip_newline = false)$/;"	f	signature:(u32 token_filter, Token* out_token_type = nullptr, char** out_token_str = nullptr, u32* out_token_len = nullptr, bool skip_newline = false)
token_type_str	.\src\Core\Import\Dat.cpp	/^const char* token_type_str(Token token)$/;"	f	signature:(Token token)
transform	.\src\Engine\Render\Drawable.h	/^	Mat4 transform;$/;"	m	struct:Drawable	access:public
transform_mat	.\src\Core\Math\Transform.cpp	/^Mat4 transform_mat(const Transform& transform)$/;"	f	signature:(const Transform& transform)
transform_mat	.\src\Core\Math\Transform.h	/^Mat4 transform_mat(const Transform& transform);/;"	p	signature:(const Transform& transform)
transition	.\src\Core\Context\Context.cpp	/^	u32 transition	: 1;$/;"	m	struct:Win_Key_Params	file:	access:public
trigger_assert	.\src\Core\Debug\Assert.cpp	/^	bool trigger_assert(const char* expr, const char* file, u32 line)$/;"	f	namespace:assert_helpers	signature:(const char* expr, const char* file, u32 line)
trigger_assert	.\src\Core\Debug\Assert.h	/^	bool trigger_assert(const char* expr, const char* file, u32 line);$/;"	p	namespace:assert_helpers	signature:(const char* expr, const char* file, u32 line)
trigger_error	.\src\Core\Debug\Assert.cpp	/^	void trigger_error(const char* file, u32 line, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* file, u32 line, const char* format, ...)
trigger_error	.\src\Core\Debug\Assert.h	/^	void trigger_error(const char* file, u32 line, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* file, u32 line, const char* format, ...)
trigger_msg_box	.\src\Core\Debug\Assert.cpp	/^	void trigger_msg_box(const char* file, u32 line, const char* title, const char* format, ...)$/;"	f	namespace:assert_helpers	signature:(const char* file, u32 line, const char* title, const char* format, ...)
trigger_msg_box	.\src\Core\Debug\Assert.h	/^	void trigger_msg_box(const char* file, u32 line, const char* title, const char* format, ...);$/;"	p	namespace:assert_helpers	signature:(const char* file, u32 line, const char* title, const char* format, ...)
type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Array;$/;"	m	struct:Dat_Array	access:public
type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Invalid;$/;"	m	struct:Dat_Node	access:public
type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Key;$/;"	m	struct:Dat_Key	access:public
type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::Object;$/;"	m	struct:Dat_Object	access:public
type	.\src\Core\Import\Dat.h	/^	const Dat_Node_Type type = Dat_Node_Type::ValueRaw;$/;"	m	struct:Dat_Value_Raw	access:public
type	.\src\Core\Import\Fbx_Data.h	/^	Fbx_Property_Type type;$/;"	m	struct:Fbx_Property	access:public
type	.\src\Core\Net\NetEvent.h	/^	Net_Event_Type type;$/;"	m	struct:Net_Event	access:public
type	.\src\Core\Net\Packet.h	/^	Packet_Type type : 3;$/;"	m	struct:Packet	access:public
type	.\src\Runtime\Online\Channel.h	/^	Channel_Event_Type type;$/;"	m	struct:Channel_Event	access:public
u16	.\src\Core\Types.h	/^typedef unsigned short u16;$/;"	t
u32	.\src\Core\Types.h	/^typedef unsigned int u32;$/;"	t
u64	.\src\Core\Types.h	/^typedef unsigned long long u64;$/;"	t
u8	.\src\Core\Types.h	/^typedef unsigned char u8;$/;"	t
unit_destroy	.\src\Runtime\Unit\Unit.cpp	/^void unit_destroy(Unit* unit)$/;"	f	signature:(Unit* unit)
unit_destroy	.\src\Runtime\Unit\Unit.h	/^void unit_destroy(Unit* unit);$/;"	p	signature:(Unit* unit)
unit_id	.\src\Runtime\Game\Game.cpp	/^		u32 unit_id;$/;"	m	struct:__anon11::Player_Possess_Data	file:	access:public
unit_move_to	.\src\Runtime\Unit\Unit.cpp	/^void unit_move_to(Unit* unit, const Vec2& target)$/;"	f	signature:(Unit* unit, const Vec2& target)
unit_move_to	.\src\Runtime\Unit\Unit.h	/^void unit_move_to(Unit* unit, const Vec2& target);$/;"	p	signature:(Unit* unit, const Vec2& target)
unit_spawn	.\src\Runtime\Unit\Unit.cpp	/^Unit* unit_spawn(u32 id, const Vec2& position)$/;"	f	signature:(u32 id, const Vec2& position)
unit_spawn	.\src\Runtime\Unit\Unit.h	/^Unit* unit_spawn(u32 id, const Vec2& position);$/;"	p	signature:(u32 id, const Vec2& position)
unit_update	.\src\Runtime\Unit\Unit.cpp	/^inline void unit_update(Unit* unit)$/;"	f	signature:(Unit* unit)
units	.\src\Runtime\Game\Scene.h	/^	Unit units[MAX_UNITS];$/;"	m	struct:Scene	access:public
units_update	.\src\Runtime\Unit\Unit.cpp	/^void units_update()$/;"	f	signature:()
units_update	.\src\Runtime\Unit\Unit.h	/^void units_update();/;"	p	signature:()
unknown	.\src\Core\Import\FBX_Parse.cpp	/^	u8 unknown[2];$/;"	m	struct:Fbx_Header	file:	access:public
use_elements	.\src\Engine\Graphics\Mesh.h	/^	bool use_elements = false;$/;"	m	struct:Mesh	access:public
user	.\src\Runtime\Player\Player.h	/^	Online_User* user = nullptr;$/;"	m	struct:Player	access:public
user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_Local_User	access:public
user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_User	access:public
user_id	.\src\Runtime\Online\Online.h	/^	u32 user_id;$/;"	m	struct:Rpc_User_Destroy	access:public
user_ptr	.\src\Engine\Tick\Tick.h	/^	void* user_ptr = nullptr;$/;"	m	struct:Ticker	access:public
user_ptr	.\src\Runtime\Online\Channel.h	/^	void* user_ptr = nullptr;$/;"	m	struct:Channel	access:public
users	.\src\Runtime\Online\Client.h	/^	Online_User users[CLIENT_MAX_USERS];$/;"	m	struct:Client	access:public
users	.\src\Runtime\Online\Server.h	/^	Online_User users[SERVER_MAX_USER];$/;"	m	struct:Server	access:public
uvs	.\src\Core\Import\Fbx.h	/^	Vec2* uvs = nullptr;$/;"	m	struct:Fbx_Mesh	access:public
value	.\src\Core\Import\Dat.h	/^	Dat_Node* value = nullptr;$/;"	m	struct:Dat_Key	access:public
values	.\src\Core\Args\Args.cpp	/^	const char** values;$/;"	m	struct:Args	file:	access:public
vao	.\src\Engine\Graphics\Mesh.h	/^	GLuint vao;$/;"	m	struct:Mesh	access:public
version	.\src\Core\Import\FBX_Parse.cpp	/^	u32 version;$/;"	m	struct:Fbx_Header	file:	access:public
vert_count	.\src\Core\Import\Fbx.h	/^	u32 vert_count = 0;$/;"	m	struct:Fbx_Face	access:public
vertex	.\src\Engine\Graphics\Material.h	/^	GLuint vertex;$/;"	m	struct:Material	access:public
view	.\src\Engine\Render\Render.h	/^	Mat4 view;$/;"	m	struct:Render_State	access:public
view_projection	.\src\Engine\Render\Render.h	/^	Mat4 view_projection;$/;"	m	struct:Render_State	access:public
w	.\src\Core\Math\Quaternion.h	/^	float w;$/;"	m	struct:Quat	access:public
w	.\src\Core\Math\Vector.h	/^	float w;$/;"	m	struct:Vec4	access:public
walk_timer	.\src\Runtime\Unit\Unit.h	/^	float walk_timer = 2.f;$/;"	m	struct:Unit	access:public
wglAllocateMemoryNV	.\include\GL\wglext.h	/^void *WINAPI wglAllocateMemoryNV (GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);$/;"	p	signature:(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority)
wglAssociateImageBufferEventsI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglAssociateImageBufferEventsI3D (HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);$/;"	p	signature:(HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count)
wglBeginFrameTrackingI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglBeginFrameTrackingI3D (void);$/;"	p	signature:(void)
wglBindDisplayColorTableEXT	.\include\GL\wglext.h	/^GLboolean WINAPI wglBindDisplayColorTableEXT (GLushort id);$/;"	p	signature:(GLushort id)
wglBindSwapBarrierNV	.\include\GL\wglext.h	/^BOOL WINAPI wglBindSwapBarrierNV (GLuint group, GLuint barrier);$/;"	p	signature:(GLuint group, GLuint barrier)
wglBindTexImageARB	.\include\GL\wglext.h	/^BOOL WINAPI wglBindTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);$/;"	p	signature:(HPBUFFERARB hPbuffer, int iBuffer)
wglBindVideoCaptureDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglBindVideoCaptureDeviceNV (UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);$/;"	p	signature:(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice)
wglBindVideoDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglBindVideoDeviceNV (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);$/;"	p	signature:(HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList)
wglBindVideoImageNV	.\include\GL\wglext.h	/^BOOL WINAPI wglBindVideoImageNV (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	p	signature:(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer)
wglBlitContextFramebufferAMD	.\include\GL\wglext.h	/^VOID WINAPI wglBlitContextFramebufferAMD (HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
wglChoosePixelFormatARB	.\include\GL\wglext.h	/^BOOL WINAPI wglChoosePixelFormatARB (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	p	signature:(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats)
wglChoosePixelFormatEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglChoosePixelFormatEXT (HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);$/;"	p	signature:(HDC hdc, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats)
wglCopyImageSubDataNV	.\include\GL\wglext.h	/^BOOL WINAPI wglCopyImageSubDataNV (HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
wglCreateAffinityDCNV	.\include\GL\wglext.h	/^HDC WINAPI wglCreateAffinityDCNV (const HGPUNV *phGpuList);$/;"	p	signature:(const HGPUNV *phGpuList)
wglCreateAssociatedContextAMD	.\include\GL\wglext.h	/^HGLRC WINAPI wglCreateAssociatedContextAMD (UINT id);$/;"	p	signature:(UINT id)
wglCreateAssociatedContextAttribsAMD	.\include\GL\wglext.h	/^HGLRC WINAPI wglCreateAssociatedContextAttribsAMD (UINT id, HGLRC hShareContext, const int *attribList);$/;"	p	signature:(UINT id, HGLRC hShareContext, const int *attribList)
wglCreateBufferRegionARB	.\include\GL\wglext.h	/^HANDLE WINAPI wglCreateBufferRegionARB (HDC hDC, int iLayerPlane, UINT uType);$/;"	p	signature:(HDC hDC, int iLayerPlane, UINT uType)
wglCreateContextAttribsARB	.\include\GL\wglext.h	/^HGLRC WINAPI wglCreateContextAttribsARB (HDC hDC, HGLRC hShareContext, const int *attribList);$/;"	p	signature:(HDC hDC, HGLRC hShareContext, const int *attribList)
wglCreateDisplayColorTableEXT	.\include\GL\wglext.h	/^GLboolean WINAPI wglCreateDisplayColorTableEXT (GLushort id);$/;"	p	signature:(GLushort id)
wglCreateImageBufferI3D	.\include\GL\wglext.h	/^LPVOID WINAPI wglCreateImageBufferI3D (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	p	signature:(HDC hDC, DWORD dwSize, UINT uFlags)
wglCreatePbufferARB	.\include\GL\wglext.h	/^HPBUFFERARB WINAPI wglCreatePbufferARB (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	p	signature:(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList)
wglCreatePbufferEXT	.\include\GL\wglext.h	/^HPBUFFEREXT WINAPI wglCreatePbufferEXT (HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);$/;"	p	signature:(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList)
wglDXCloseDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXCloseDeviceNV (HANDLE hDevice);$/;"	p	signature:(HANDLE hDevice)
wglDXLockObjectsNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXLockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	p	signature:(HANDLE hDevice, GLint count, HANDLE *hObjects)
wglDXObjectAccessNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXObjectAccessNV (HANDLE hObject, GLenum access);$/;"	p	signature:(HANDLE hObject, GLenum access)
wglDXOpenDeviceNV	.\include\GL\wglext.h	/^HANDLE WINAPI wglDXOpenDeviceNV (void *dxDevice);$/;"	p	signature:(void *dxDevice)
wglDXRegisterObjectNV	.\include\GL\wglext.h	/^HANDLE WINAPI wglDXRegisterObjectNV (HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access);$/;"	p	signature:(HANDLE hDevice, void *dxObject, GLuint name, GLenum type, GLenum access)
wglDXSetResourceShareHandleNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXSetResourceShareHandleNV (void *dxObject, HANDLE shareHandle);$/;"	p	signature:(void *dxObject, HANDLE shareHandle)
wglDXUnlockObjectsNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXUnlockObjectsNV (HANDLE hDevice, GLint count, HANDLE *hObjects);$/;"	p	signature:(HANDLE hDevice, GLint count, HANDLE *hObjects)
wglDXUnregisterObjectNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDXUnregisterObjectNV (HANDLE hDevice, HANDLE hObject);$/;"	p	signature:(HANDLE hDevice, HANDLE hObject)
wglDelayBeforeSwapNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDelayBeforeSwapNV (HDC hDC, GLfloat seconds);$/;"	p	signature:(HDC hDC, GLfloat seconds)
wglDeleteAssociatedContextAMD	.\include\GL\wglext.h	/^BOOL WINAPI wglDeleteAssociatedContextAMD (HGLRC hglrc);$/;"	p	signature:(HGLRC hglrc)
wglDeleteBufferRegionARB	.\include\GL\wglext.h	/^VOID WINAPI wglDeleteBufferRegionARB (HANDLE hRegion);$/;"	p	signature:(HANDLE hRegion)
wglDeleteDCNV	.\include\GL\wglext.h	/^BOOL WINAPI wglDeleteDCNV (HDC hdc);$/;"	p	signature:(HDC hdc)
wglDestroyDisplayColorTableEXT	.\include\GL\wglext.h	/^VOID WINAPI wglDestroyDisplayColorTableEXT (GLushort id);$/;"	p	signature:(GLushort id)
wglDestroyImageBufferI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglDestroyImageBufferI3D (HDC hDC, LPVOID pAddress);$/;"	p	signature:(HDC hDC, LPVOID pAddress)
wglDestroyPbufferARB	.\include\GL\wglext.h	/^BOOL WINAPI wglDestroyPbufferARB (HPBUFFERARB hPbuffer);$/;"	p	signature:(HPBUFFERARB hPbuffer)
wglDestroyPbufferEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglDestroyPbufferEXT (HPBUFFEREXT hPbuffer);$/;"	p	signature:(HPBUFFEREXT hPbuffer)
wglDisableFrameLockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglDisableFrameLockI3D (void);$/;"	p	signature:(void)
wglDisableGenlockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglDisableGenlockI3D (HDC hDC);$/;"	p	signature:(HDC hDC)
wglEnableFrameLockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglEnableFrameLockI3D (void);$/;"	p	signature:(void)
wglEnableGenlockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglEnableGenlockI3D (HDC hDC);$/;"	p	signature:(HDC hDC)
wglEndFrameTrackingI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglEndFrameTrackingI3D (void);$/;"	p	signature:(void)
wglEnumGpuDevicesNV	.\include\GL\wglext.h	/^BOOL WINAPI wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);$/;"	p	signature:(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice)
wglEnumGpusFromAffinityDCNV	.\include\GL\wglext.h	/^BOOL WINAPI wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);$/;"	p	signature:(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu)
wglEnumGpusNV	.\include\GL\wglext.h	/^BOOL WINAPI wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu);$/;"	p	signature:(UINT iGpuIndex, HGPUNV *phGpu)
wglEnumerateVideoCaptureDevicesNV	.\include\GL\wglext.h	/^UINT WINAPI wglEnumerateVideoCaptureDevicesNV (HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList);$/;"	p	signature:(HDC hDc, HVIDEOINPUTDEVICENV *phDeviceList)
wglEnumerateVideoDevicesNV	.\include\GL\wglext.h	/^int WINAPI wglEnumerateVideoDevicesNV (HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList);$/;"	p	signature:(HDC hDc, HVIDEOOUTPUTDEVICENV *phDeviceList)
wglFreeMemoryNV	.\include\GL\wglext.h	/^void WINAPI wglFreeMemoryNV (void *pointer);$/;"	p	signature:(void *pointer)
wglGenlockSampleRateI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGenlockSampleRateI3D (HDC hDC, UINT uRate);$/;"	p	signature:(HDC hDC, UINT uRate)
wglGenlockSourceDelayI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGenlockSourceDelayI3D (HDC hDC, UINT uDelay);$/;"	p	signature:(HDC hDC, UINT uDelay)
wglGenlockSourceEdgeI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGenlockSourceEdgeI3D (HDC hDC, UINT uEdge);$/;"	p	signature:(HDC hDC, UINT uEdge)
wglGenlockSourceI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGenlockSourceI3D (HDC hDC, UINT uSource);$/;"	p	signature:(HDC hDC, UINT uSource)
wglGetContextGPUIDAMD	.\include\GL\wglext.h	/^UINT WINAPI wglGetContextGPUIDAMD (HGLRC hglrc);$/;"	p	signature:(HGLRC hglrc)
wglGetCurrentAssociatedContextAMD	.\include\GL\wglext.h	/^HGLRC WINAPI wglGetCurrentAssociatedContextAMD (void);$/;"	p	signature:(void)
wglGetCurrentReadDCARB	.\include\GL\wglext.h	/^HDC WINAPI wglGetCurrentReadDCARB (void);$/;"	p	signature:(void)
wglGetCurrentReadDCEXT	.\include\GL\wglext.h	/^HDC WINAPI wglGetCurrentReadDCEXT (void);$/;"	p	signature:(void)
wglGetDigitalVideoParametersI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetDigitalVideoParametersI3D (HDC hDC, int iAttribute, int *piValue);$/;"	p	signature:(HDC hDC, int iAttribute, int *piValue)
wglGetExtensionsStringARB	.\include\GL\wglext.h	/^const char *WINAPI wglGetExtensionsStringARB (HDC hdc);$/;"	p	signature:(HDC hdc)
wglGetExtensionsStringEXT	.\include\GL\wglext.h	/^const char *WINAPI wglGetExtensionsStringEXT (void);$/;"	p	signature:(void)
wglGetFrameUsageI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetFrameUsageI3D (float *pUsage);$/;"	p	signature:(float *pUsage)
wglGetGPUIDsAMD	.\include\GL\wglext.h	/^UINT WINAPI wglGetGPUIDsAMD (UINT maxCount, UINT *ids);$/;"	p	signature:(UINT maxCount, UINT *ids)
wglGetGPUInfoAMD	.\include\GL\wglext.h	/^INT WINAPI wglGetGPUInfoAMD (UINT id, INT property, GLenum dataType, UINT size, void *data);$/;"	p	signature:(UINT id, INT property, GLenum dataType, UINT size, void *data)
wglGetGammaTableI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGammaTableI3D (HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);$/;"	p	signature:(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue)
wglGetGammaTableParametersI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGammaTableParametersI3D (HDC hDC, int iAttribute, int *piValue);$/;"	p	signature:(HDC hDC, int iAttribute, int *piValue)
wglGetGenlockSampleRateI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGenlockSampleRateI3D (HDC hDC, UINT *uRate);$/;"	p	signature:(HDC hDC, UINT *uRate)
wglGetGenlockSourceDelayI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGenlockSourceDelayI3D (HDC hDC, UINT *uDelay);$/;"	p	signature:(HDC hDC, UINT *uDelay)
wglGetGenlockSourceEdgeI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGenlockSourceEdgeI3D (HDC hDC, UINT *uEdge);$/;"	p	signature:(HDC hDC, UINT *uEdge)
wglGetGenlockSourceI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglGetGenlockSourceI3D (HDC hDC, UINT *uSource);$/;"	p	signature:(HDC hDC, UINT *uSource)
wglGetMscRateOML	.\include\GL\wglext.h	/^BOOL WINAPI wglGetMscRateOML (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	p	signature:(HDC hdc, INT32 *numerator, INT32 *denominator)
wglGetPbufferDCARB	.\include\GL\wglext.h	/^HDC WINAPI wglGetPbufferDCARB (HPBUFFERARB hPbuffer);$/;"	p	signature:(HPBUFFERARB hPbuffer)
wglGetPbufferDCEXT	.\include\GL\wglext.h	/^HDC WINAPI wglGetPbufferDCEXT (HPBUFFEREXT hPbuffer);$/;"	p	signature:(HPBUFFEREXT hPbuffer)
wglGetPixelFormatAttribfvARB	.\include\GL\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribfvARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);$/;"	p	signature:(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues)
wglGetPixelFormatAttribfvEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribfvEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues);$/;"	p	signature:(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, FLOAT *pfValues)
wglGetPixelFormatAttribivARB	.\include\GL\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribivARB (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);$/;"	p	signature:(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues)
wglGetPixelFormatAttribivEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglGetPixelFormatAttribivEXT (HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues);$/;"	p	signature:(HDC hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *piAttributes, int *piValues)
wglGetSwapIntervalEXT	.\include\GL\wglext.h	/^int WINAPI wglGetSwapIntervalEXT (void);$/;"	p	signature:(void)
wglGetSyncValuesOML	.\include\GL\wglext.h	/^BOOL WINAPI wglGetSyncValuesOML (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p	signature:(HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc)
wglGetVideoDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglGetVideoDeviceNV (HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);$/;"	p	signature:(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice)
wglGetVideoInfoNV	.\include\GL\wglext.h	/^BOOL WINAPI wglGetVideoInfoNV (HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);$/;"	p	signature:(HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo)
wglIsEnabledFrameLockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglIsEnabledFrameLockI3D (BOOL *pFlag);$/;"	p	signature:(BOOL *pFlag)
wglIsEnabledGenlockI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglIsEnabledGenlockI3D (HDC hDC, BOOL *pFlag);$/;"	p	signature:(HDC hDC, BOOL *pFlag)
wglJoinSwapGroupNV	.\include\GL\wglext.h	/^BOOL WINAPI wglJoinSwapGroupNV (HDC hDC, GLuint group);$/;"	p	signature:(HDC hDC, GLuint group)
wglLoadDisplayColorTableEXT	.\include\GL\wglext.h	/^GLboolean WINAPI wglLoadDisplayColorTableEXT (const GLushort *table, GLuint length);$/;"	p	signature:(const GLushort *table, GLuint length)
wglLockVideoCaptureDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglLockVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	p	signature:(HDC hDc, HVIDEOINPUTDEVICENV hDevice)
wglMakeAssociatedContextCurrentAMD	.\include\GL\wglext.h	/^BOOL WINAPI wglMakeAssociatedContextCurrentAMD (HGLRC hglrc);$/;"	p	signature:(HGLRC hglrc)
wglMakeContextCurrentARB	.\include\GL\wglext.h	/^BOOL WINAPI wglMakeContextCurrentARB (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	p	signature:(HDC hDrawDC, HDC hReadDC, HGLRC hglrc)
wglMakeContextCurrentEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglMakeContextCurrentEXT (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	p	signature:(HDC hDrawDC, HDC hReadDC, HGLRC hglrc)
wglQueryCurrentContextNV	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryCurrentContextNV (int iAttribute, int *piValue);$/;"	p	signature:(int iAttribute, int *piValue)
wglQueryFrameCountNV	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryFrameCountNV (HDC hDC, GLuint *count);$/;"	p	signature:(HDC hDC, GLuint *count)
wglQueryFrameLockMasterI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryFrameLockMasterI3D (BOOL *pFlag);$/;"	p	signature:(BOOL *pFlag)
wglQueryFrameTrackingI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryFrameTrackingI3D (DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);$/;"	p	signature:(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage)
wglQueryGenlockMaxSourceDelayI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryGenlockMaxSourceDelayI3D (HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);$/;"	p	signature:(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay)
wglQueryMaxSwapGroupsNV	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryMaxSwapGroupsNV (HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);$/;"	p	signature:(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers)
wglQueryPbufferARB	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryPbufferARB (HPBUFFERARB hPbuffer, int iAttribute, int *piValue);$/;"	p	signature:(HPBUFFERARB hPbuffer, int iAttribute, int *piValue)
wglQueryPbufferEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryPbufferEXT (HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);$/;"	p	signature:(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue)
wglQuerySwapGroupNV	.\include\GL\wglext.h	/^BOOL WINAPI wglQuerySwapGroupNV (HDC hDC, GLuint *group, GLuint *barrier);$/;"	p	signature:(HDC hDC, GLuint *group, GLuint *barrier)
wglQueryVideoCaptureDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglQueryVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);$/;"	p	signature:(HDC hDc, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue)
wglReleaseImageBufferEventsI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglReleaseImageBufferEventsI3D (HDC hDC, const LPVOID *pAddress, UINT count);$/;"	p	signature:(HDC hDC, const LPVOID *pAddress, UINT count)
wglReleasePbufferDCARB	.\include\GL\wglext.h	/^int WINAPI wglReleasePbufferDCARB (HPBUFFERARB hPbuffer, HDC hDC);$/;"	p	signature:(HPBUFFERARB hPbuffer, HDC hDC)
wglReleasePbufferDCEXT	.\include\GL\wglext.h	/^int WINAPI wglReleasePbufferDCEXT (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	p	signature:(HPBUFFEREXT hPbuffer, HDC hDC)
wglReleaseTexImageARB	.\include\GL\wglext.h	/^BOOL WINAPI wglReleaseTexImageARB (HPBUFFERARB hPbuffer, int iBuffer);$/;"	p	signature:(HPBUFFERARB hPbuffer, int iBuffer)
wglReleaseVideoCaptureDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglReleaseVideoCaptureDeviceNV (HDC hDc, HVIDEOINPUTDEVICENV hDevice);$/;"	p	signature:(HDC hDc, HVIDEOINPUTDEVICENV hDevice)
wglReleaseVideoDeviceNV	.\include\GL\wglext.h	/^BOOL WINAPI wglReleaseVideoDeviceNV (HPVIDEODEV hVideoDevice);$/;"	p	signature:(HPVIDEODEV hVideoDevice)
wglReleaseVideoImageNV	.\include\GL\wglext.h	/^BOOL WINAPI wglReleaseVideoImageNV (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	p	signature:(HPBUFFERARB hPbuffer, int iVideoBuffer)
wglResetFrameCountNV	.\include\GL\wglext.h	/^BOOL WINAPI wglResetFrameCountNV (HDC hDC);$/;"	p	signature:(HDC hDC)
wglRestoreBufferRegionARB	.\include\GL\wglext.h	/^BOOL WINAPI wglRestoreBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);$/;"	p	signature:(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc)
wglSaveBufferRegionARB	.\include\GL\wglext.h	/^BOOL WINAPI wglSaveBufferRegionARB (HANDLE hRegion, int x, int y, int width, int height);$/;"	p	signature:(HANDLE hRegion, int x, int y, int width, int height)
wglSendPbufferToVideoNV	.\include\GL\wglext.h	/^BOOL WINAPI wglSendPbufferToVideoNV (HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);$/;"	p	signature:(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock)
wglSetDigitalVideoParametersI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglSetDigitalVideoParametersI3D (HDC hDC, int iAttribute, const int *piValue);$/;"	p	signature:(HDC hDC, int iAttribute, const int *piValue)
wglSetGammaTableI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglSetGammaTableI3D (HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);$/;"	p	signature:(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue)
wglSetGammaTableParametersI3D	.\include\GL\wglext.h	/^BOOL WINAPI wglSetGammaTableParametersI3D (HDC hDC, int iAttribute, const int *piValue);$/;"	p	signature:(HDC hDC, int iAttribute, const int *piValue)
wglSetPbufferAttribARB	.\include\GL\wglext.h	/^BOOL WINAPI wglSetPbufferAttribARB (HPBUFFERARB hPbuffer, const int *piAttribList);$/;"	p	signature:(HPBUFFERARB hPbuffer, const int *piAttribList)
wglSetStereoEmitterState3DL	.\include\GL\wglext.h	/^BOOL WINAPI wglSetStereoEmitterState3DL (HDC hDC, UINT uState);$/;"	p	signature:(HDC hDC, UINT uState)
wglSwapBuffersMscOML	.\include\GL\wglext.h	/^INT64 WINAPI wglSwapBuffersMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	p	signature:(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder)
wglSwapIntervalEXT	.\include\GL\wglext.h	/^BOOL WINAPI wglSwapIntervalEXT (int interval);$/;"	p	signature:(int interval)
wglSwapLayerBuffersMscOML	.\include\GL\wglext.h	/^INT64 WINAPI wglSwapLayerBuffersMscOML (HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);$/;"	p	signature:(HDC hdc, INT fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder)
wglWaitForMscOML	.\include\GL\wglext.h	/^BOOL WINAPI wglWaitForMscOML (HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p	signature:(HDC hdc, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc)
wglWaitForSbcOML	.\include\GL\wglext.h	/^BOOL WINAPI wglWaitForSbcOML (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);$/;"	p	signature:(HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc)
width	.\src\Core\Context\Context.cpp	/^	u16 width;$/;"	m	struct:Win_Size_Params	file:	access:public
width	.\src\Core\Context\Context.h	/^	i32 width;$/;"	m	struct:Context	access:public
width	.\src\Core\Import\TGA.cpp	/^	u16 width;$/;"	m	struct:Tga_Image_Spec	file:	access:public
width	.\src\Core\Import\TGA.h	/^	u16 width;$/;"	m	struct:Tga_File	access:public
width	.\src\Engine\Graphics\FrameBuffer.h	/^	u32 width = 0;$/;"	m	struct:Frame_Buffer	access:public
width	.\src\Engine\Graphics\Texture.h	/^	u32 width;$/;"	m	struct:Texture	access:public
width	.\src\Runtime\Effect\LineDrawer.h	/^	float width;$/;"	m	struct:Line_Segment	access:public
window	.\src\Core\Context\Context.cpp	/^Window_Data window;$/;"	v
winsock_init	.\src\Core\Net\Net.cpp	/^	bool winsock_init = false;$/;"	m	namespace:__anon6	file:
wnd_proc	.\src\Core\Context\Context.cpp	/^LRESULT CALLBACK wnd_proc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	signature:(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)
write_bits	.\src\Core\Compress\Inflate.cpp	/^void write_bits(Inflate_Stream* stream, const u32 value, const u32 num_bits)$/;"	f	signature:(Inflate_Stream* stream, const u32 value, const u32 num_bits)
wsa	.\src\Core\Net\Net.cpp	/^	WSADATA wsa;$/;"	m	namespace:__anon6	file:
wsa_init	.\src\Core\Net\Net.cpp	/^	void wsa_init()$/;"	f	namespace:__anon6	signature:()
x	.\src\Core\Context\Context.cpp	/^	u16 x;$/;"	m	struct:Win_MouseMove_Params	file:	access:public
x	.\src\Core\Context\Context.h	/^	i32 x;$/;"	m	struct:Context	access:public
x	.\src\Core\Input\Input.h	/^	int x;$/;"	m	struct:Mouse_State	access:public
x	.\src\Core\Math\Quaternion.h	/^	float x;$/;"	m	struct:Quat	access:public
x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec2	access:public
x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec3	access:public
x	.\src\Core\Math\Vector.h	/^	float x;$/;"	m	struct:Vec4	access:public
x_origin	.\src\Core\Import\TGA.cpp	/^	u16 x_origin;$/;"	m	struct:Tga_Image_Spec	file:	access:public
y	.\src\Core\Context\Context.cpp	/^	u16 y;$/;"	m	struct:Win_MouseMove_Params	file:	access:public
y	.\src\Core\Context\Context.h	/^	i32 y;$/;"	m	struct:Context	access:public
y	.\src\Core\Input\Input.h	/^	int y;$/;"	m	struct:Mouse_State	access:public
y	.\src\Core\Math\Quaternion.h	/^	float y;$/;"	m	struct:Quat	access:public
y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec2	access:public
y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec3	access:public
y	.\src\Core\Math\Vector.h	/^	float y;$/;"	m	struct:Vec4	access:public
y_origin	.\src\Core\Import\TGA.cpp	/^	u16 y_origin;$/;"	m	struct:Tga_Image_Spec	file:	access:public
yaw	.\src\Runtime\Game\Camera.h	/^	float yaw = 0.f;$/;"	m	struct:Camera	access:public
z	.\src\Core\Math\Quaternion.h	/^	float z;$/;"	m	struct:Quat	access:public
z	.\src\Core\Math\Vector.h	/^	float z;$/;"	m	struct:Vec3	access:public
z	.\src\Core\Math\Vector.h	/^	float z;$/;"	m	struct:Vec4	access:public
~_Defer	.\src\Core\Defer.h	/^	~_Defer()$/;"	f	struct:_Defer	access:public	signature:()
